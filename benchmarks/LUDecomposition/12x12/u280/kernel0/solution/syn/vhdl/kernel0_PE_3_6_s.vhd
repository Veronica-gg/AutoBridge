-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel0_PE_3_6_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fifo_V_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    fifo_V_in_V_empty_n : IN STD_LOGIC;
    fifo_V_in_V_read : OUT STD_LOGIC;
    fifo_V_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    fifo_V_out_V_full_n : IN STD_LOGIC;
    fifo_V_out_V_write : OUT STD_LOGIC;
    fifo_U_tmp_1_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    fifo_U_tmp_1_in_V_empty_n : IN STD_LOGIC;
    fifo_U_tmp_1_in_V_read : OUT STD_LOGIC;
    fifo_U_tmp_1_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    fifo_U_tmp_1_out_V_full_n : IN STD_LOGIC;
    fifo_U_tmp_1_out_V_write : OUT STD_LOGIC;
    fifo_L_drain_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    fifo_L_drain_out_V_full_n : IN STD_LOGIC;
    fifo_L_drain_out_V_write : OUT STD_LOGIC );
end;


architecture behav of kernel0_PE_3_6_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal fifo_V_in_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal fifo_V_out_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal icmp_ln891_reg_695 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_reg_695_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo_U_tmp_1_in_V_blk_n : STD_LOGIC;
    signal fifo_U_tmp_1_out_V_blk_n : STD_LOGIC;
    signal fifo_L_drain_out_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal icmp_ln879_reg_615 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_615_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0410_0_reg_150 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_0410_0_reg_150_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal p_0410_0_reg_150_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_0410_0_reg_150_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_0410_0_reg_150_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_0410_0_reg_150_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_0410_0_reg_150_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_0410_0_reg_150_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_0410_0_reg_150_pp0_iter8_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_0410_0_reg_150_pp0_iter9_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_0410_0_reg_150_pp0_iter10_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_0410_0_reg_150_pp0_iter11_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal p_0410_0_reg_150_pp0_iter12_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln315_fu_174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln315_reg_611 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_615_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_615_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_615_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_615_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_615_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_615_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_615_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_615_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_615_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_615_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_615_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_615_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal c2_V_fu_186_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal c2_V_reg_619 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_517_reg_624 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_517_reg_624_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_517_reg_624_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_517_reg_624_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_517_reg_624_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_517_reg_624_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_517_reg_624_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_517_reg_624_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_517_reg_624_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_517_reg_624_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_517_reg_624_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_517_reg_624_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_517_reg_624_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_517_reg_624_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_517_reg_624_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_517_reg_624_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_517_reg_624_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_517_reg_624_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln323_fu_198_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln323_reg_629 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln323_reg_629_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln323_reg_629_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln323_reg_629_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln323_reg_629_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln323_reg_629_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln323_reg_629_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln323_reg_629_pp0_iter8_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln323_reg_629_pp0_iter9_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln323_reg_629_pp0_iter10_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln323_reg_629_pp0_iter11_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln323_reg_629_pp0_iter12_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln323_reg_629_pp0_iter13_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln323_fu_204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln323_reg_640 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln323_reg_640_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln323_reg_640_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln323_reg_640_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln323_reg_640_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln323_reg_640_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln323_reg_640_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln323_reg_640_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln323_reg_640_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln323_reg_640_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln323_reg_640_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln323_reg_640_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln323_reg_640_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln323_fu_210_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln323_reg_645 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_519_reg_650 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_519_reg_650_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_519_reg_650_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_519_reg_650_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_519_reg_650_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_519_reg_650_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_519_reg_650_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_519_reg_650_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_519_reg_650_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_519_reg_650_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_519_reg_650_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_519_reg_650_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_519_reg_650_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_519_reg_650_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln333_fu_218_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln333_reg_655 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln341_fu_236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_reg_660 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_reg_660_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_reg_660_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_reg_660_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_reg_660_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_reg_660_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_reg_660_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_reg_660_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_reg_660_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_reg_660_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_reg_660_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_reg_660_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_106_fu_242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_106_reg_665 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_106_reg_665_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_106_reg_665_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_106_reg_665_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_106_reg_665_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_106_reg_665_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_106_reg_665_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_106_reg_665_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_106_reg_665_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_106_reg_665_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_106_reg_665_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_106_reg_665_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_107_fu_248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_107_reg_670 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_107_reg_670_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_107_reg_670_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_107_reg_670_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_107_reg_670_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_107_reg_670_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_107_reg_670_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_107_reg_670_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_107_reg_670_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_107_reg_670_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_107_reg_670_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_107_reg_670_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_108_fu_254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_108_reg_675 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_108_reg_675_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_108_reg_675_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_108_reg_675_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_108_reg_675_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_108_reg_675_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_108_reg_675_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_108_reg_675_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_108_reg_675_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_108_reg_675_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_108_reg_675_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_108_reg_675_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_109_fu_260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_109_reg_680 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_109_reg_680_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_109_reg_680_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_109_reg_680_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_109_reg_680_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_109_reg_680_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_109_reg_680_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_109_reg_680_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_109_reg_680_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_109_reg_680_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_109_reg_680_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_109_reg_680_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_110_fu_266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_110_reg_685 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_110_reg_685_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_110_reg_685_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_110_reg_685_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_110_reg_685_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_110_reg_685_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_110_reg_685_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_110_reg_685_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_110_reg_685_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_110_reg_685_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_110_reg_685_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_110_reg_685_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_111_fu_272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_111_reg_690 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_111_reg_690_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_111_reg_690_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_111_reg_690_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_111_reg_690_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_111_reg_690_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_111_reg_690_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_111_reg_690_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_111_reg_690_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_111_reg_690_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_111_reg_690_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln341_111_reg_690_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_fu_288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_reg_695_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_reg_695_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_reg_695_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_reg_695_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_reg_695_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_reg_695_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_reg_695_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_reg_695_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_reg_695_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_reg_695_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_reg_695_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_reg_695_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_reg_695_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_reg_695_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_reg_695_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_reg_695_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_reg_695_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_reg_695_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_reg_695_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_reg_695_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_reg_695_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_reg_695_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_reg_695_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_170_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_reg_699 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln343_140_fu_529_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln343_140_reg_704 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_166_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_709 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_162_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_reg_714 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_phi_mux_p_0410_0_phi_fu_154_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal local_prev_V_0_0_0355_fu_72 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_U_tmp_0_1_0356_fu_76 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_80 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_509_fu_84 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_526_fu_360_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_510_fu_88 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_511_fu_92 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_512_fu_96 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_513_fu_100 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_514_fu_104 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_515_fu_108 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_516_fu_112 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_527_fu_278_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_520_fu_318_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_521_fu_325_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_522_fu_332_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_523_fu_339_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_524_fu_346_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_525_fu_353_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln343_fu_446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln343_fu_439_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln343_104_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln343_134_fu_451_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln343_105_fu_472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln343_135_fu_464_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln343_106_fu_485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln343_136_fu_477_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln343_107_fu_498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln343_137_fu_490_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln343_108_fu_511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln343_138_fu_503_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln343_109_fu_524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln343_139_fu_516_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_162_ce : STD_LOGIC;
    signal grp_fu_166_ce : STD_LOGIC;
    signal grp_fu_170_ce : STD_LOGIC;
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component kernel0_kernel0_fsub_32ns_32ns_32_7_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kernel0_kernel0_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kernel0_kernel0_fdiv_32ns_32ns_32_12_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    kernel0_fsub_32ns_32ns_32_7_full_dsp_1_U506 : component kernel0_kernel0_fsub_32ns_32ns_32_7_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_517_reg_624_pp0_iter18_reg,
        din1 => tmp_s_reg_709,
        ce => grp_fu_162_ce,
        dout => grp_fu_162_p2);

    kernel0_fmul_32ns_32ns_32_4_max_dsp_1_U507 : component kernel0_kernel0_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => select_ln343_140_reg_704,
        din1 => tmp_519_reg_650_pp0_iter14_reg,
        ce => grp_fu_166_ce,
        dout => grp_fu_166_p2);

    kernel0_fdiv_32ns_32ns_32_12_1_U508 : component kernel0_kernel0_fdiv_32ns_32ns_32_12_1
    generic map (
        ID => 1,
        NUM_STAGE => 12,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => select_ln323_reg_645,
        din1 => select_ln333_reg_655,
        ce => grp_fu_170_ce,
        dout => grp_fu_170_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    p_0410_0_reg_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln315_reg_611 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0410_0_reg_150 <= c2_V_reg_619;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0410_0_reg_150 <= ap_const_lv4_3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln323_reg_629 <= add_ln323_fu_198_p2;
                icmp_ln315_reg_611 <= icmp_ln315_fu_174_p2;
                icmp_ln323_reg_640 <= icmp_ln323_fu_204_p2;
                icmp_ln879_reg_615_pp0_iter1_reg <= icmp_ln879_reg_615;
                icmp_ln891_reg_695 <= icmp_ln891_fu_288_p2;
                p_0410_0_reg_150_pp0_iter1_reg <= p_0410_0_reg_150;
                select_ln323_reg_645 <= select_ln323_fu_210_p3;
                select_ln333_reg_655 <= select_ln333_fu_218_p3;
                tmp_517_reg_624 <= fifo_V_in_V_dout;
                tmp_519_reg_650 <= fifo_U_tmp_1_in_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln323_reg_629_pp0_iter10_reg <= add_ln323_reg_629_pp0_iter9_reg;
                add_ln323_reg_629_pp0_iter11_reg <= add_ln323_reg_629_pp0_iter10_reg;
                add_ln323_reg_629_pp0_iter12_reg <= add_ln323_reg_629_pp0_iter11_reg;
                add_ln323_reg_629_pp0_iter13_reg <= add_ln323_reg_629_pp0_iter12_reg;
                add_ln323_reg_629_pp0_iter2_reg <= add_ln323_reg_629;
                add_ln323_reg_629_pp0_iter3_reg <= add_ln323_reg_629_pp0_iter2_reg;
                add_ln323_reg_629_pp0_iter4_reg <= add_ln323_reg_629_pp0_iter3_reg;
                add_ln323_reg_629_pp0_iter5_reg <= add_ln323_reg_629_pp0_iter4_reg;
                add_ln323_reg_629_pp0_iter6_reg <= add_ln323_reg_629_pp0_iter5_reg;
                add_ln323_reg_629_pp0_iter7_reg <= add_ln323_reg_629_pp0_iter6_reg;
                add_ln323_reg_629_pp0_iter8_reg <= add_ln323_reg_629_pp0_iter7_reg;
                add_ln323_reg_629_pp0_iter9_reg <= add_ln323_reg_629_pp0_iter8_reg;
                icmp_ln323_reg_640_pp0_iter10_reg <= icmp_ln323_reg_640_pp0_iter9_reg;
                icmp_ln323_reg_640_pp0_iter11_reg <= icmp_ln323_reg_640_pp0_iter10_reg;
                icmp_ln323_reg_640_pp0_iter12_reg <= icmp_ln323_reg_640_pp0_iter11_reg;
                icmp_ln323_reg_640_pp0_iter13_reg <= icmp_ln323_reg_640_pp0_iter12_reg;
                icmp_ln323_reg_640_pp0_iter2_reg <= icmp_ln323_reg_640;
                icmp_ln323_reg_640_pp0_iter3_reg <= icmp_ln323_reg_640_pp0_iter2_reg;
                icmp_ln323_reg_640_pp0_iter4_reg <= icmp_ln323_reg_640_pp0_iter3_reg;
                icmp_ln323_reg_640_pp0_iter5_reg <= icmp_ln323_reg_640_pp0_iter4_reg;
                icmp_ln323_reg_640_pp0_iter6_reg <= icmp_ln323_reg_640_pp0_iter5_reg;
                icmp_ln323_reg_640_pp0_iter7_reg <= icmp_ln323_reg_640_pp0_iter6_reg;
                icmp_ln323_reg_640_pp0_iter8_reg <= icmp_ln323_reg_640_pp0_iter7_reg;
                icmp_ln323_reg_640_pp0_iter9_reg <= icmp_ln323_reg_640_pp0_iter8_reg;
                icmp_ln341_106_reg_665_pp0_iter10_reg <= icmp_ln341_106_reg_665_pp0_iter9_reg;
                icmp_ln341_106_reg_665_pp0_iter11_reg <= icmp_ln341_106_reg_665_pp0_iter10_reg;
                icmp_ln341_106_reg_665_pp0_iter12_reg <= icmp_ln341_106_reg_665_pp0_iter11_reg;
                icmp_ln341_106_reg_665_pp0_iter2_reg <= icmp_ln341_106_reg_665;
                icmp_ln341_106_reg_665_pp0_iter3_reg <= icmp_ln341_106_reg_665_pp0_iter2_reg;
                icmp_ln341_106_reg_665_pp0_iter4_reg <= icmp_ln341_106_reg_665_pp0_iter3_reg;
                icmp_ln341_106_reg_665_pp0_iter5_reg <= icmp_ln341_106_reg_665_pp0_iter4_reg;
                icmp_ln341_106_reg_665_pp0_iter6_reg <= icmp_ln341_106_reg_665_pp0_iter5_reg;
                icmp_ln341_106_reg_665_pp0_iter7_reg <= icmp_ln341_106_reg_665_pp0_iter6_reg;
                icmp_ln341_106_reg_665_pp0_iter8_reg <= icmp_ln341_106_reg_665_pp0_iter7_reg;
                icmp_ln341_106_reg_665_pp0_iter9_reg <= icmp_ln341_106_reg_665_pp0_iter8_reg;
                icmp_ln341_107_reg_670_pp0_iter10_reg <= icmp_ln341_107_reg_670_pp0_iter9_reg;
                icmp_ln341_107_reg_670_pp0_iter11_reg <= icmp_ln341_107_reg_670_pp0_iter10_reg;
                icmp_ln341_107_reg_670_pp0_iter12_reg <= icmp_ln341_107_reg_670_pp0_iter11_reg;
                icmp_ln341_107_reg_670_pp0_iter2_reg <= icmp_ln341_107_reg_670;
                icmp_ln341_107_reg_670_pp0_iter3_reg <= icmp_ln341_107_reg_670_pp0_iter2_reg;
                icmp_ln341_107_reg_670_pp0_iter4_reg <= icmp_ln341_107_reg_670_pp0_iter3_reg;
                icmp_ln341_107_reg_670_pp0_iter5_reg <= icmp_ln341_107_reg_670_pp0_iter4_reg;
                icmp_ln341_107_reg_670_pp0_iter6_reg <= icmp_ln341_107_reg_670_pp0_iter5_reg;
                icmp_ln341_107_reg_670_pp0_iter7_reg <= icmp_ln341_107_reg_670_pp0_iter6_reg;
                icmp_ln341_107_reg_670_pp0_iter8_reg <= icmp_ln341_107_reg_670_pp0_iter7_reg;
                icmp_ln341_107_reg_670_pp0_iter9_reg <= icmp_ln341_107_reg_670_pp0_iter8_reg;
                icmp_ln341_108_reg_675_pp0_iter10_reg <= icmp_ln341_108_reg_675_pp0_iter9_reg;
                icmp_ln341_108_reg_675_pp0_iter11_reg <= icmp_ln341_108_reg_675_pp0_iter10_reg;
                icmp_ln341_108_reg_675_pp0_iter12_reg <= icmp_ln341_108_reg_675_pp0_iter11_reg;
                icmp_ln341_108_reg_675_pp0_iter2_reg <= icmp_ln341_108_reg_675;
                icmp_ln341_108_reg_675_pp0_iter3_reg <= icmp_ln341_108_reg_675_pp0_iter2_reg;
                icmp_ln341_108_reg_675_pp0_iter4_reg <= icmp_ln341_108_reg_675_pp0_iter3_reg;
                icmp_ln341_108_reg_675_pp0_iter5_reg <= icmp_ln341_108_reg_675_pp0_iter4_reg;
                icmp_ln341_108_reg_675_pp0_iter6_reg <= icmp_ln341_108_reg_675_pp0_iter5_reg;
                icmp_ln341_108_reg_675_pp0_iter7_reg <= icmp_ln341_108_reg_675_pp0_iter6_reg;
                icmp_ln341_108_reg_675_pp0_iter8_reg <= icmp_ln341_108_reg_675_pp0_iter7_reg;
                icmp_ln341_108_reg_675_pp0_iter9_reg <= icmp_ln341_108_reg_675_pp0_iter8_reg;
                icmp_ln341_109_reg_680_pp0_iter10_reg <= icmp_ln341_109_reg_680_pp0_iter9_reg;
                icmp_ln341_109_reg_680_pp0_iter11_reg <= icmp_ln341_109_reg_680_pp0_iter10_reg;
                icmp_ln341_109_reg_680_pp0_iter12_reg <= icmp_ln341_109_reg_680_pp0_iter11_reg;
                icmp_ln341_109_reg_680_pp0_iter2_reg <= icmp_ln341_109_reg_680;
                icmp_ln341_109_reg_680_pp0_iter3_reg <= icmp_ln341_109_reg_680_pp0_iter2_reg;
                icmp_ln341_109_reg_680_pp0_iter4_reg <= icmp_ln341_109_reg_680_pp0_iter3_reg;
                icmp_ln341_109_reg_680_pp0_iter5_reg <= icmp_ln341_109_reg_680_pp0_iter4_reg;
                icmp_ln341_109_reg_680_pp0_iter6_reg <= icmp_ln341_109_reg_680_pp0_iter5_reg;
                icmp_ln341_109_reg_680_pp0_iter7_reg <= icmp_ln341_109_reg_680_pp0_iter6_reg;
                icmp_ln341_109_reg_680_pp0_iter8_reg <= icmp_ln341_109_reg_680_pp0_iter7_reg;
                icmp_ln341_109_reg_680_pp0_iter9_reg <= icmp_ln341_109_reg_680_pp0_iter8_reg;
                icmp_ln341_110_reg_685_pp0_iter10_reg <= icmp_ln341_110_reg_685_pp0_iter9_reg;
                icmp_ln341_110_reg_685_pp0_iter11_reg <= icmp_ln341_110_reg_685_pp0_iter10_reg;
                icmp_ln341_110_reg_685_pp0_iter12_reg <= icmp_ln341_110_reg_685_pp0_iter11_reg;
                icmp_ln341_110_reg_685_pp0_iter2_reg <= icmp_ln341_110_reg_685;
                icmp_ln341_110_reg_685_pp0_iter3_reg <= icmp_ln341_110_reg_685_pp0_iter2_reg;
                icmp_ln341_110_reg_685_pp0_iter4_reg <= icmp_ln341_110_reg_685_pp0_iter3_reg;
                icmp_ln341_110_reg_685_pp0_iter5_reg <= icmp_ln341_110_reg_685_pp0_iter4_reg;
                icmp_ln341_110_reg_685_pp0_iter6_reg <= icmp_ln341_110_reg_685_pp0_iter5_reg;
                icmp_ln341_110_reg_685_pp0_iter7_reg <= icmp_ln341_110_reg_685_pp0_iter6_reg;
                icmp_ln341_110_reg_685_pp0_iter8_reg <= icmp_ln341_110_reg_685_pp0_iter7_reg;
                icmp_ln341_110_reg_685_pp0_iter9_reg <= icmp_ln341_110_reg_685_pp0_iter8_reg;
                icmp_ln341_111_reg_690_pp0_iter10_reg <= icmp_ln341_111_reg_690_pp0_iter9_reg;
                icmp_ln341_111_reg_690_pp0_iter11_reg <= icmp_ln341_111_reg_690_pp0_iter10_reg;
                icmp_ln341_111_reg_690_pp0_iter12_reg <= icmp_ln341_111_reg_690_pp0_iter11_reg;
                icmp_ln341_111_reg_690_pp0_iter2_reg <= icmp_ln341_111_reg_690;
                icmp_ln341_111_reg_690_pp0_iter3_reg <= icmp_ln341_111_reg_690_pp0_iter2_reg;
                icmp_ln341_111_reg_690_pp0_iter4_reg <= icmp_ln341_111_reg_690_pp0_iter3_reg;
                icmp_ln341_111_reg_690_pp0_iter5_reg <= icmp_ln341_111_reg_690_pp0_iter4_reg;
                icmp_ln341_111_reg_690_pp0_iter6_reg <= icmp_ln341_111_reg_690_pp0_iter5_reg;
                icmp_ln341_111_reg_690_pp0_iter7_reg <= icmp_ln341_111_reg_690_pp0_iter6_reg;
                icmp_ln341_111_reg_690_pp0_iter8_reg <= icmp_ln341_111_reg_690_pp0_iter7_reg;
                icmp_ln341_111_reg_690_pp0_iter9_reg <= icmp_ln341_111_reg_690_pp0_iter8_reg;
                icmp_ln341_reg_660_pp0_iter10_reg <= icmp_ln341_reg_660_pp0_iter9_reg;
                icmp_ln341_reg_660_pp0_iter11_reg <= icmp_ln341_reg_660_pp0_iter10_reg;
                icmp_ln341_reg_660_pp0_iter12_reg <= icmp_ln341_reg_660_pp0_iter11_reg;
                icmp_ln341_reg_660_pp0_iter2_reg <= icmp_ln341_reg_660;
                icmp_ln341_reg_660_pp0_iter3_reg <= icmp_ln341_reg_660_pp0_iter2_reg;
                icmp_ln341_reg_660_pp0_iter4_reg <= icmp_ln341_reg_660_pp0_iter3_reg;
                icmp_ln341_reg_660_pp0_iter5_reg <= icmp_ln341_reg_660_pp0_iter4_reg;
                icmp_ln341_reg_660_pp0_iter6_reg <= icmp_ln341_reg_660_pp0_iter5_reg;
                icmp_ln341_reg_660_pp0_iter7_reg <= icmp_ln341_reg_660_pp0_iter6_reg;
                icmp_ln341_reg_660_pp0_iter8_reg <= icmp_ln341_reg_660_pp0_iter7_reg;
                icmp_ln341_reg_660_pp0_iter9_reg <= icmp_ln341_reg_660_pp0_iter8_reg;
                icmp_ln879_reg_615_pp0_iter10_reg <= icmp_ln879_reg_615_pp0_iter9_reg;
                icmp_ln879_reg_615_pp0_iter11_reg <= icmp_ln879_reg_615_pp0_iter10_reg;
                icmp_ln879_reg_615_pp0_iter12_reg <= icmp_ln879_reg_615_pp0_iter11_reg;
                icmp_ln879_reg_615_pp0_iter13_reg <= icmp_ln879_reg_615_pp0_iter12_reg;
                icmp_ln879_reg_615_pp0_iter2_reg <= icmp_ln879_reg_615_pp0_iter1_reg;
                icmp_ln879_reg_615_pp0_iter3_reg <= icmp_ln879_reg_615_pp0_iter2_reg;
                icmp_ln879_reg_615_pp0_iter4_reg <= icmp_ln879_reg_615_pp0_iter3_reg;
                icmp_ln879_reg_615_pp0_iter5_reg <= icmp_ln879_reg_615_pp0_iter4_reg;
                icmp_ln879_reg_615_pp0_iter6_reg <= icmp_ln879_reg_615_pp0_iter5_reg;
                icmp_ln879_reg_615_pp0_iter7_reg <= icmp_ln879_reg_615_pp0_iter6_reg;
                icmp_ln879_reg_615_pp0_iter8_reg <= icmp_ln879_reg_615_pp0_iter7_reg;
                icmp_ln879_reg_615_pp0_iter9_reg <= icmp_ln879_reg_615_pp0_iter8_reg;
                icmp_ln891_reg_695_pp0_iter10_reg <= icmp_ln891_reg_695_pp0_iter9_reg;
                icmp_ln891_reg_695_pp0_iter11_reg <= icmp_ln891_reg_695_pp0_iter10_reg;
                icmp_ln891_reg_695_pp0_iter12_reg <= icmp_ln891_reg_695_pp0_iter11_reg;
                icmp_ln891_reg_695_pp0_iter13_reg <= icmp_ln891_reg_695_pp0_iter12_reg;
                icmp_ln891_reg_695_pp0_iter14_reg <= icmp_ln891_reg_695_pp0_iter13_reg;
                icmp_ln891_reg_695_pp0_iter15_reg <= icmp_ln891_reg_695_pp0_iter14_reg;
                icmp_ln891_reg_695_pp0_iter16_reg <= icmp_ln891_reg_695_pp0_iter15_reg;
                icmp_ln891_reg_695_pp0_iter17_reg <= icmp_ln891_reg_695_pp0_iter16_reg;
                icmp_ln891_reg_695_pp0_iter18_reg <= icmp_ln891_reg_695_pp0_iter17_reg;
                icmp_ln891_reg_695_pp0_iter19_reg <= icmp_ln891_reg_695_pp0_iter18_reg;
                icmp_ln891_reg_695_pp0_iter20_reg <= icmp_ln891_reg_695_pp0_iter19_reg;
                icmp_ln891_reg_695_pp0_iter21_reg <= icmp_ln891_reg_695_pp0_iter20_reg;
                icmp_ln891_reg_695_pp0_iter22_reg <= icmp_ln891_reg_695_pp0_iter21_reg;
                icmp_ln891_reg_695_pp0_iter23_reg <= icmp_ln891_reg_695_pp0_iter22_reg;
                icmp_ln891_reg_695_pp0_iter24_reg <= icmp_ln891_reg_695_pp0_iter23_reg;
                icmp_ln891_reg_695_pp0_iter25_reg <= icmp_ln891_reg_695_pp0_iter24_reg;
                icmp_ln891_reg_695_pp0_iter2_reg <= icmp_ln891_reg_695;
                icmp_ln891_reg_695_pp0_iter3_reg <= icmp_ln891_reg_695_pp0_iter2_reg;
                icmp_ln891_reg_695_pp0_iter4_reg <= icmp_ln891_reg_695_pp0_iter3_reg;
                icmp_ln891_reg_695_pp0_iter5_reg <= icmp_ln891_reg_695_pp0_iter4_reg;
                icmp_ln891_reg_695_pp0_iter6_reg <= icmp_ln891_reg_695_pp0_iter5_reg;
                icmp_ln891_reg_695_pp0_iter7_reg <= icmp_ln891_reg_695_pp0_iter6_reg;
                icmp_ln891_reg_695_pp0_iter8_reg <= icmp_ln891_reg_695_pp0_iter7_reg;
                icmp_ln891_reg_695_pp0_iter9_reg <= icmp_ln891_reg_695_pp0_iter8_reg;
                p_0410_0_reg_150_pp0_iter10_reg <= p_0410_0_reg_150_pp0_iter9_reg;
                p_0410_0_reg_150_pp0_iter11_reg <= p_0410_0_reg_150_pp0_iter10_reg;
                p_0410_0_reg_150_pp0_iter12_reg <= p_0410_0_reg_150_pp0_iter11_reg;
                p_0410_0_reg_150_pp0_iter2_reg <= p_0410_0_reg_150_pp0_iter1_reg;
                p_0410_0_reg_150_pp0_iter3_reg <= p_0410_0_reg_150_pp0_iter2_reg;
                p_0410_0_reg_150_pp0_iter4_reg <= p_0410_0_reg_150_pp0_iter3_reg;
                p_0410_0_reg_150_pp0_iter5_reg <= p_0410_0_reg_150_pp0_iter4_reg;
                p_0410_0_reg_150_pp0_iter6_reg <= p_0410_0_reg_150_pp0_iter5_reg;
                p_0410_0_reg_150_pp0_iter7_reg <= p_0410_0_reg_150_pp0_iter6_reg;
                p_0410_0_reg_150_pp0_iter8_reg <= p_0410_0_reg_150_pp0_iter7_reg;
                p_0410_0_reg_150_pp0_iter9_reg <= p_0410_0_reg_150_pp0_iter8_reg;
                select_ln343_140_reg_704 <= select_ln343_140_fu_529_p3;
                tmp_22_reg_714 <= grp_fu_162_p2;
                tmp_517_reg_624_pp0_iter10_reg <= tmp_517_reg_624_pp0_iter9_reg;
                tmp_517_reg_624_pp0_iter11_reg <= tmp_517_reg_624_pp0_iter10_reg;
                tmp_517_reg_624_pp0_iter12_reg <= tmp_517_reg_624_pp0_iter11_reg;
                tmp_517_reg_624_pp0_iter13_reg <= tmp_517_reg_624_pp0_iter12_reg;
                tmp_517_reg_624_pp0_iter14_reg <= tmp_517_reg_624_pp0_iter13_reg;
                tmp_517_reg_624_pp0_iter15_reg <= tmp_517_reg_624_pp0_iter14_reg;
                tmp_517_reg_624_pp0_iter16_reg <= tmp_517_reg_624_pp0_iter15_reg;
                tmp_517_reg_624_pp0_iter17_reg <= tmp_517_reg_624_pp0_iter16_reg;
                tmp_517_reg_624_pp0_iter18_reg <= tmp_517_reg_624_pp0_iter17_reg;
                tmp_517_reg_624_pp0_iter2_reg <= tmp_517_reg_624;
                tmp_517_reg_624_pp0_iter3_reg <= tmp_517_reg_624_pp0_iter2_reg;
                tmp_517_reg_624_pp0_iter4_reg <= tmp_517_reg_624_pp0_iter3_reg;
                tmp_517_reg_624_pp0_iter5_reg <= tmp_517_reg_624_pp0_iter4_reg;
                tmp_517_reg_624_pp0_iter6_reg <= tmp_517_reg_624_pp0_iter5_reg;
                tmp_517_reg_624_pp0_iter7_reg <= tmp_517_reg_624_pp0_iter6_reg;
                tmp_517_reg_624_pp0_iter8_reg <= tmp_517_reg_624_pp0_iter7_reg;
                tmp_517_reg_624_pp0_iter9_reg <= tmp_517_reg_624_pp0_iter8_reg;
                tmp_519_reg_650_pp0_iter10_reg <= tmp_519_reg_650_pp0_iter9_reg;
                tmp_519_reg_650_pp0_iter11_reg <= tmp_519_reg_650_pp0_iter10_reg;
                tmp_519_reg_650_pp0_iter12_reg <= tmp_519_reg_650_pp0_iter11_reg;
                tmp_519_reg_650_pp0_iter13_reg <= tmp_519_reg_650_pp0_iter12_reg;
                tmp_519_reg_650_pp0_iter14_reg <= tmp_519_reg_650_pp0_iter13_reg;
                tmp_519_reg_650_pp0_iter2_reg <= tmp_519_reg_650;
                tmp_519_reg_650_pp0_iter3_reg <= tmp_519_reg_650_pp0_iter2_reg;
                tmp_519_reg_650_pp0_iter4_reg <= tmp_519_reg_650_pp0_iter3_reg;
                tmp_519_reg_650_pp0_iter5_reg <= tmp_519_reg_650_pp0_iter4_reg;
                tmp_519_reg_650_pp0_iter6_reg <= tmp_519_reg_650_pp0_iter5_reg;
                tmp_519_reg_650_pp0_iter7_reg <= tmp_519_reg_650_pp0_iter6_reg;
                tmp_519_reg_650_pp0_iter8_reg <= tmp_519_reg_650_pp0_iter7_reg;
                tmp_519_reg_650_pp0_iter9_reg <= tmp_519_reg_650_pp0_iter8_reg;
                tmp_s_reg_709 <= grp_fu_166_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln315_fu_174_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                c2_V_reg_619 <= c2_V_fu_186_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln879_reg_615 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln341_106_reg_665 <= icmp_ln341_106_fu_242_p2;
                icmp_ln341_107_reg_670 <= icmp_ln341_107_fu_248_p2;
                icmp_ln341_108_reg_675 <= icmp_ln341_108_fu_254_p2;
                icmp_ln341_109_reg_680 <= icmp_ln341_109_fu_260_p2;
                icmp_ln341_110_reg_685 <= icmp_ln341_110_fu_266_p2;
                icmp_ln341_111_reg_690 <= icmp_ln341_111_fu_272_p2;
                icmp_ln341_reg_660 <= icmp_ln341_fu_236_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln315_fu_174_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln879_reg_615 <= icmp_ln879_fu_180_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_U_tmp_0_1_0356_fu_76 <= select_ln333_fu_218_p3;
                local_prev_V_0_0_0355_fu_72 <= select_ln323_fu_210_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln879_reg_615_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (p_0410_0_reg_150_pp0_iter12_reg = ap_const_lv4_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_509_fu_84 <= tmp_526_fu_360_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln879_reg_615_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (p_0410_0_reg_150_pp0_iter12_reg = ap_const_lv4_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_510_fu_88 <= tmp_526_fu_360_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln879_reg_615_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (p_0410_0_reg_150_pp0_iter12_reg = ap_const_lv4_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_511_fu_92 <= tmp_526_fu_360_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln879_reg_615_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (p_0410_0_reg_150_pp0_iter12_reg = ap_const_lv4_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_512_fu_96 <= tmp_526_fu_360_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln879_reg_615_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (p_0410_0_reg_150_pp0_iter12_reg = ap_const_lv4_8) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_513_fu_100 <= tmp_526_fu_360_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln879_reg_615_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (p_0410_0_reg_150_pp0_iter12_reg = ap_const_lv4_9) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_514_fu_104 <= tmp_526_fu_360_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln879_reg_615_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (p_0410_0_reg_150_pp0_iter12_reg = ap_const_lv4_A) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_515_fu_108 <= tmp_526_fu_360_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((p_0410_0_reg_150_pp0_iter12_reg = ap_const_lv4_A)) and not((p_0410_0_reg_150_pp0_iter12_reg = ap_const_lv4_9)) and not((p_0410_0_reg_150_pp0_iter12_reg = ap_const_lv4_8)) and not((p_0410_0_reg_150_pp0_iter12_reg = ap_const_lv4_7)) and not((p_0410_0_reg_150_pp0_iter12_reg = ap_const_lv4_6)) and not((p_0410_0_reg_150_pp0_iter12_reg = ap_const_lv4_5)) and not((p_0410_0_reg_150_pp0_iter12_reg = ap_const_lv4_4)) and (icmp_ln879_reg_615_pp0_iter12_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_516_fu_112 <= tmp_526_fu_360_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln879_reg_615_pp0_iter12_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_57_reg_699 <= grp_fu_170_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln879_reg_615_pp0_iter12_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_fu_80 <= grp_fu_170_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter26, icmp_ln315_fu_174_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter25)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln315_fu_174_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter26 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter26 = ap_const_logic_1)) or ((icmp_ln315_fu_174_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln323_fu_198_p2 <= std_logic_vector(unsigned(p_0410_0_reg_150) + unsigned(ap_const_lv4_D));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state29 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(fifo_V_in_V_empty_n, fifo_V_out_V_full_n, fifo_U_tmp_1_in_V_empty_n, fifo_U_tmp_1_out_V_full_n, fifo_L_drain_out_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter26, icmp_ln891_reg_695_pp0_iter25_reg, ap_enable_reg_pp0_iter14, icmp_ln879_reg_615_pp0_iter13_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((icmp_ln879_reg_615_pp0_iter13_reg = ap_const_lv1_1) and (fifo_L_drain_out_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((icmp_ln891_reg_695_pp0_iter25_reg = ap_const_lv1_0) and (fifo_V_out_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((fifo_U_tmp_1_out_V_full_n = ap_const_logic_0) or (fifo_U_tmp_1_in_V_empty_n = ap_const_logic_0) or (fifo_V_in_V_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(fifo_V_in_V_empty_n, fifo_V_out_V_full_n, fifo_U_tmp_1_in_V_empty_n, fifo_U_tmp_1_out_V_full_n, fifo_L_drain_out_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter26, icmp_ln891_reg_695_pp0_iter25_reg, ap_enable_reg_pp0_iter14, icmp_ln879_reg_615_pp0_iter13_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((icmp_ln879_reg_615_pp0_iter13_reg = ap_const_lv1_1) and (fifo_L_drain_out_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((icmp_ln891_reg_695_pp0_iter25_reg = ap_const_lv1_0) and (fifo_V_out_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((fifo_U_tmp_1_out_V_full_n = ap_const_logic_0) or (fifo_U_tmp_1_in_V_empty_n = ap_const_logic_0) or (fifo_V_in_V_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(fifo_V_in_V_empty_n, fifo_V_out_V_full_n, fifo_U_tmp_1_in_V_empty_n, fifo_U_tmp_1_out_V_full_n, fifo_L_drain_out_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter26, icmp_ln891_reg_695_pp0_iter25_reg, ap_enable_reg_pp0_iter14, icmp_ln879_reg_615_pp0_iter13_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((icmp_ln879_reg_615_pp0_iter13_reg = ap_const_lv1_1) and (fifo_L_drain_out_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1)) or ((icmp_ln891_reg_695_pp0_iter25_reg = ap_const_lv1_0) and (fifo_V_out_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((fifo_U_tmp_1_out_V_full_n = ap_const_logic_0) or (fifo_U_tmp_1_in_V_empty_n = ap_const_logic_0) or (fifo_V_in_V_empty_n = ap_const_logic_0))));
    end process;

        ap_block_state10_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state16_pp0_stage0_iter14_assign_proc : process(fifo_L_drain_out_V_full_n, icmp_ln879_reg_615_pp0_iter13_reg)
    begin
                ap_block_state16_pp0_stage0_iter14 <= ((icmp_ln879_reg_615_pp0_iter13_reg = ap_const_lv1_1) and (fifo_L_drain_out_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state17_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state28_pp0_stage0_iter26_assign_proc : process(fifo_V_out_V_full_n, icmp_ln891_reg_695_pp0_iter25_reg)
    begin
                ap_block_state28_pp0_stage0_iter26 <= ((icmp_ln891_reg_695_pp0_iter25_reg = ap_const_lv1_0) and (fifo_V_out_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(fifo_V_in_V_empty_n, fifo_U_tmp_1_in_V_empty_n, fifo_U_tmp_1_out_V_full_n)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((fifo_U_tmp_1_out_V_full_n = ap_const_logic_0) or (fifo_U_tmp_1_in_V_empty_n = ap_const_logic_0) or (fifo_V_in_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln315_fu_174_p2)
    begin
        if ((icmp_ln315_fu_174_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_0410_0_phi_fu_154_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, p_0410_0_reg_150, icmp_ln315_reg_611, c2_V_reg_619)
    begin
        if (((icmp_ln315_reg_611 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_p_0410_0_phi_fu_154_p4 <= c2_V_reg_619;
        else 
            ap_phi_mux_p_0410_0_phi_fu_154_p4 <= p_0410_0_reg_150;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    c2_V_fu_186_p2 <= std_logic_vector(unsigned(ap_phi_mux_p_0410_0_phi_fu_154_p4) + unsigned(ap_const_lv4_1));

    fifo_L_drain_out_V_blk_n_assign_proc : process(fifo_L_drain_out_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter14, icmp_ln879_reg_615_pp0_iter13_reg)
    begin
        if (((icmp_ln879_reg_615_pp0_iter13_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1))) then 
            fifo_L_drain_out_V_blk_n <= fifo_L_drain_out_V_full_n;
        else 
            fifo_L_drain_out_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_L_drain_out_V_din <= tmp_57_reg_699;

    fifo_L_drain_out_V_write_assign_proc : process(ap_enable_reg_pp0_iter14, icmp_ln879_reg_615_pp0_iter13_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln879_reg_615_pp0_iter13_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_L_drain_out_V_write <= ap_const_logic_1;
        else 
            fifo_L_drain_out_V_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_U_tmp_1_in_V_blk_n_assign_proc : process(fifo_U_tmp_1_in_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_U_tmp_1_in_V_blk_n <= fifo_U_tmp_1_in_V_empty_n;
        else 
            fifo_U_tmp_1_in_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_U_tmp_1_in_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_U_tmp_1_in_V_read <= ap_const_logic_1;
        else 
            fifo_U_tmp_1_in_V_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_U_tmp_1_out_V_blk_n_assign_proc : process(fifo_U_tmp_1_out_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_U_tmp_1_out_V_blk_n <= fifo_U_tmp_1_out_V_full_n;
        else 
            fifo_U_tmp_1_out_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_U_tmp_1_out_V_din <= fifo_U_tmp_1_in_V_dout;

    fifo_U_tmp_1_out_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_U_tmp_1_out_V_write <= ap_const_logic_1;
        else 
            fifo_U_tmp_1_out_V_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_V_in_V_blk_n_assign_proc : process(fifo_V_in_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_V_in_V_blk_n <= fifo_V_in_V_empty_n;
        else 
            fifo_V_in_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_V_in_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_V_in_V_read <= ap_const_logic_1;
        else 
            fifo_V_in_V_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_V_out_V_blk_n_assign_proc : process(fifo_V_out_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter26, icmp_ln891_reg_695_pp0_iter25_reg)
    begin
        if (((icmp_ln891_reg_695_pp0_iter25_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_1))) then 
            fifo_V_out_V_blk_n <= fifo_V_out_V_full_n;
        else 
            fifo_V_out_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_V_out_V_din <= tmp_22_reg_714;

    fifo_V_out_V_write_assign_proc : process(ap_enable_reg_pp0_iter26, icmp_ln891_reg_695_pp0_iter25_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln891_reg_695_pp0_iter25_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_V_out_V_write <= ap_const_logic_1;
        else 
            fifo_V_out_V_write <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_162_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_162_ce <= ap_const_logic_1;
        else 
            grp_fu_162_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_166_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_166_ce <= ap_const_logic_1;
        else 
            grp_fu_166_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_170_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_170_ce <= ap_const_logic_1;
        else 
            grp_fu_170_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln315_fu_174_p2 <= "1" when (ap_phi_mux_p_0410_0_phi_fu_154_p4 = ap_const_lv4_C) else "0";
    icmp_ln323_fu_204_p2 <= "1" when (add_ln323_fu_198_p2 = ap_const_lv4_0) else "0";
    icmp_ln341_106_fu_242_p2 <= "1" when (p_0410_0_reg_150 = ap_const_lv4_6) else "0";
    icmp_ln341_107_fu_248_p2 <= "1" when (p_0410_0_reg_150 = ap_const_lv4_7) else "0";
    icmp_ln341_108_fu_254_p2 <= "1" when (p_0410_0_reg_150 = ap_const_lv4_8) else "0";
    icmp_ln341_109_fu_260_p2 <= "1" when (p_0410_0_reg_150 = ap_const_lv4_9) else "0";
    icmp_ln341_110_fu_266_p2 <= "1" when (p_0410_0_reg_150 = ap_const_lv4_A) else "0";
    icmp_ln341_111_fu_272_p2 <= "1" when (p_0410_0_reg_150 = ap_const_lv4_4) else "0";
    icmp_ln341_fu_236_p2 <= "1" when (p_0410_0_reg_150 = ap_const_lv4_5) else "0";
    icmp_ln343_104_fu_459_p2 <= "1" when (add_ln323_reg_629_pp0_iter13_reg = ap_const_lv4_2) else "0";
    icmp_ln343_105_fu_472_p2 <= "1" when (add_ln323_reg_629_pp0_iter13_reg = ap_const_lv4_3) else "0";
    icmp_ln343_106_fu_485_p2 <= "1" when (add_ln323_reg_629_pp0_iter13_reg = ap_const_lv4_4) else "0";
    icmp_ln343_107_fu_498_p2 <= "1" when (add_ln323_reg_629_pp0_iter13_reg = ap_const_lv4_5) else "0";
    icmp_ln343_108_fu_511_p2 <= "1" when (add_ln323_reg_629_pp0_iter13_reg = ap_const_lv4_6) else "0";
    icmp_ln343_109_fu_524_p2 <= "1" when (add_ln323_reg_629_pp0_iter13_reg = ap_const_lv4_7) else "0";
    icmp_ln343_fu_446_p2 <= "1" when (add_ln323_reg_629_pp0_iter13_reg = ap_const_lv4_1) else "0";
    icmp_ln879_fu_180_p2 <= "1" when (ap_phi_mux_p_0410_0_phi_fu_154_p4 = ap_const_lv4_3) else "0";
    icmp_ln891_fu_288_p2 <= "1" when (tmp_527_fu_278_p4 = ap_const_lv2_0) else "0";
    select_ln323_fu_210_p3 <= 
        fifo_V_in_V_dout when (icmp_ln323_fu_204_p2(0) = '1') else 
        local_prev_V_0_0_0355_fu_72;
    select_ln333_fu_218_p3 <= 
        fifo_U_tmp_1_in_V_dout when (icmp_ln323_fu_204_p2(0) = '1') else 
        local_U_tmp_0_1_0356_fu_76;
    select_ln343_134_fu_451_p3 <= 
        tmp_509_fu_84 when (icmp_ln343_fu_446_p2(0) = '1') else 
        select_ln343_fu_439_p3;
    select_ln343_135_fu_464_p3 <= 
        tmp_510_fu_88 when (icmp_ln343_104_fu_459_p2(0) = '1') else 
        select_ln343_134_fu_451_p3;
    select_ln343_136_fu_477_p3 <= 
        tmp_511_fu_92 when (icmp_ln343_105_fu_472_p2(0) = '1') else 
        select_ln343_135_fu_464_p3;
    select_ln343_137_fu_490_p3 <= 
        tmp_512_fu_96 when (icmp_ln343_106_fu_485_p2(0) = '1') else 
        select_ln343_136_fu_477_p3;
    select_ln343_138_fu_503_p3 <= 
        tmp_513_fu_100 when (icmp_ln343_107_fu_498_p2(0) = '1') else 
        select_ln343_137_fu_490_p3;
    select_ln343_139_fu_516_p3 <= 
        tmp_514_fu_104 when (icmp_ln343_108_fu_511_p2(0) = '1') else 
        select_ln343_138_fu_503_p3;
    select_ln343_140_fu_529_p3 <= 
        tmp_515_fu_108 when (icmp_ln343_109_fu_524_p2(0) = '1') else 
        select_ln343_139_fu_516_p3;
    select_ln343_fu_439_p3 <= 
        tmp_fu_80 when (icmp_ln323_reg_640_pp0_iter13_reg(0) = '1') else 
        tmp_516_fu_112;
    tmp_520_fu_318_p3 <= 
        tmp_509_fu_84 when (icmp_ln341_reg_660_pp0_iter12_reg(0) = '1') else 
        tmp_515_fu_108;
    tmp_521_fu_325_p3 <= 
        tmp_510_fu_88 when (icmp_ln341_106_reg_665_pp0_iter12_reg(0) = '1') else 
        tmp_520_fu_318_p3;
    tmp_522_fu_332_p3 <= 
        tmp_511_fu_92 when (icmp_ln341_107_reg_670_pp0_iter12_reg(0) = '1') else 
        tmp_521_fu_325_p3;
    tmp_523_fu_339_p3 <= 
        tmp_512_fu_96 when (icmp_ln341_108_reg_675_pp0_iter12_reg(0) = '1') else 
        tmp_522_fu_332_p3;
    tmp_524_fu_346_p3 <= 
        tmp_513_fu_100 when (icmp_ln341_109_reg_680_pp0_iter12_reg(0) = '1') else 
        tmp_523_fu_339_p3;
    tmp_525_fu_353_p3 <= 
        tmp_514_fu_104 when (icmp_ln341_110_reg_685_pp0_iter12_reg(0) = '1') else 
        tmp_524_fu_346_p3;
    tmp_526_fu_360_p3 <= 
        tmp_fu_80 when (icmp_ln341_111_reg_690_pp0_iter12_reg(0) = '1') else 
        tmp_525_fu_353_p3;
    tmp_527_fu_278_p4 <= p_0410_0_reg_150(3 downto 2);
end behav;
