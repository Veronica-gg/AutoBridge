// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _kernel3_A_IO_L2_in209_HH_
#define _kernel3_A_IO_L2_in209_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "kernel3_A_IO_L2_in_inter_trans.h"
#include "kernel3_A_IO_L2_in_intra_trans_1.h"
#include "kernel3_A_IO_L2_in208_local_A.h"

namespace ap_rtl {

struct kernel3_A_IO_L2_in209 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<256> > fifo_A_in_V_V_dout;
    sc_in< sc_logic > fifo_A_in_V_V_empty_n;
    sc_out< sc_logic > fifo_A_in_V_V_read;
    sc_out< sc_lv<256> > fifo_A_out_V_V_din;
    sc_in< sc_logic > fifo_A_out_V_V_full_n;
    sc_out< sc_logic > fifo_A_out_V_V_write;
    sc_out< sc_lv<256> > fifo_A_local_out_V_V_din;
    sc_in< sc_logic > fifo_A_local_out_V_V_full_n;
    sc_out< sc_logic > fifo_A_local_out_V_V_write;
    sc_signal< sc_lv<5> > ap_var_for_const0;


    // Module declarations
    kernel3_A_IO_L2_in209(sc_module_name name);
    SC_HAS_PROCESS(kernel3_A_IO_L2_in209);

    ~kernel3_A_IO_L2_in209();

    sc_trace_file* mVcdFile;

    kernel3_A_IO_L2_in208_local_A* local_A_U;
    kernel3_A_IO_L2_in_inter_trans* grp_A_IO_L2_in_inter_trans_fu_47;
    kernel3_A_IO_L2_in_intra_trans_1* grp_A_IO_L2_in_intra_trans_1_fu_59;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > local_A_ce0;
    sc_signal< sc_lv<256> > local_A_q0;
    sc_signal< sc_logic > local_A_ce1;
    sc_signal< sc_logic > local_A_we1;
    sc_signal< sc_logic > grp_A_IO_L2_in_inter_trans_fu_47_ap_start;
    sc_signal< sc_logic > grp_A_IO_L2_in_inter_trans_fu_47_ap_done;
    sc_signal< sc_logic > grp_A_IO_L2_in_inter_trans_fu_47_ap_idle;
    sc_signal< sc_logic > grp_A_IO_L2_in_inter_trans_fu_47_ap_ready;
    sc_signal< sc_lv<10> > grp_A_IO_L2_in_inter_trans_fu_47_local_A_V_address1;
    sc_signal< sc_logic > grp_A_IO_L2_in_inter_trans_fu_47_local_A_V_ce1;
    sc_signal< sc_logic > grp_A_IO_L2_in_inter_trans_fu_47_local_A_V_we1;
    sc_signal< sc_lv<256> > grp_A_IO_L2_in_inter_trans_fu_47_local_A_V_d1;
    sc_signal< sc_logic > grp_A_IO_L2_in_inter_trans_fu_47_fifo_A_in_V_V_read;
    sc_signal< sc_lv<256> > grp_A_IO_L2_in_inter_trans_fu_47_fifo_A_out_V_V_din;
    sc_signal< sc_logic > grp_A_IO_L2_in_inter_trans_fu_47_fifo_A_out_V_V_write;
    sc_signal< sc_logic > grp_A_IO_L2_in_intra_trans_1_fu_59_ap_start;
    sc_signal< sc_logic > grp_A_IO_L2_in_intra_trans_1_fu_59_ap_done;
    sc_signal< sc_logic > grp_A_IO_L2_in_intra_trans_1_fu_59_ap_idle;
    sc_signal< sc_logic > grp_A_IO_L2_in_intra_trans_1_fu_59_ap_ready;
    sc_signal< sc_lv<10> > grp_A_IO_L2_in_intra_trans_1_fu_59_local_A_V_address0;
    sc_signal< sc_logic > grp_A_IO_L2_in_intra_trans_1_fu_59_local_A_V_ce0;
    sc_signal< sc_lv<256> > grp_A_IO_L2_in_intra_trans_1_fu_59_fifo_A_local_out_V_V_din;
    sc_signal< sc_logic > grp_A_IO_L2_in_intra_trans_1_fu_59_fifo_A_local_out_V_V_write;
    sc_signal< sc_logic > grp_A_IO_L2_in_inter_trans_fu_47_ap_start_reg;
    sc_signal< bool > ap_block_state1_ignore_call7;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > grp_A_IO_L2_in_intra_trans_1_fu_59_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< bool > ap_block_state1;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_state1();
    void thread_ap_block_state1_ignore_call7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_fifo_A_in_V_V_read();
    void thread_fifo_A_local_out_V_V_din();
    void thread_fifo_A_local_out_V_V_write();
    void thread_fifo_A_out_V_V_din();
    void thread_fifo_A_out_V_V_write();
    void thread_grp_A_IO_L2_in_inter_trans_fu_47_ap_start();
    void thread_grp_A_IO_L2_in_intra_trans_1_fu_59_ap_start();
    void thread_local_A_ce0();
    void thread_local_A_ce1();
    void thread_local_A_we1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
