-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel3_kernel3 is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_A_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_A_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_A_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_A_DATA_WIDTH : INTEGER := 512;
    C_M_AXI_GMEM_A_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_A_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_A_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_A_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_B_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_B_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_B_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_B_DATA_WIDTH : INTEGER := 512;
    C_M_AXI_GMEM_B_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_B_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_B_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_B_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_C_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_C_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_C_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_C_DATA_WIDTH : INTEGER := 512;
    C_M_AXI_GMEM_C_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_C_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_C_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_C_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_A_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_A_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_A_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM_B_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_B_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_B_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM_C_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_C_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_C_CACHE_VALUE : INTEGER := 3 );
port (
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    interrupt : OUT STD_LOGIC;
    m_axi_gmem_A_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_A_AWREADY : IN STD_LOGIC;
    m_axi_gmem_A_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_A_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_A_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_A_ID_WIDTH-1 downto 0);
    m_axi_gmem_A_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_A_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_A_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_A_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_A_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_A_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_A_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_A_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_A_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_A_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_A_WVALID : OUT STD_LOGIC;
    m_axi_gmem_A_WREADY : IN STD_LOGIC;
    m_axi_gmem_A_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_A_DATA_WIDTH-1 downto 0);
    m_axi_gmem_A_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_A_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_A_WLAST : OUT STD_LOGIC;
    m_axi_gmem_A_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_A_ID_WIDTH-1 downto 0);
    m_axi_gmem_A_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_A_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_A_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_A_ARREADY : IN STD_LOGIC;
    m_axi_gmem_A_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_A_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_A_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_A_ID_WIDTH-1 downto 0);
    m_axi_gmem_A_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_A_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_A_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_A_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_A_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_A_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_A_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_A_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_A_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_A_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_A_RVALID : IN STD_LOGIC;
    m_axi_gmem_A_RREADY : OUT STD_LOGIC;
    m_axi_gmem_A_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_A_DATA_WIDTH-1 downto 0);
    m_axi_gmem_A_RLAST : IN STD_LOGIC;
    m_axi_gmem_A_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_A_ID_WIDTH-1 downto 0);
    m_axi_gmem_A_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_A_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_A_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_A_BVALID : IN STD_LOGIC;
    m_axi_gmem_A_BREADY : OUT STD_LOGIC;
    m_axi_gmem_A_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_A_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_A_ID_WIDTH-1 downto 0);
    m_axi_gmem_A_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_A_BUSER_WIDTH-1 downto 0);
    m_axi_gmem_B_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_B_AWREADY : IN STD_LOGIC;
    m_axi_gmem_B_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_B_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_B_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_B_ID_WIDTH-1 downto 0);
    m_axi_gmem_B_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_B_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_B_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_B_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_B_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_B_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_B_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_B_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_B_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_B_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_B_WVALID : OUT STD_LOGIC;
    m_axi_gmem_B_WREADY : IN STD_LOGIC;
    m_axi_gmem_B_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_B_DATA_WIDTH-1 downto 0);
    m_axi_gmem_B_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_B_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_B_WLAST : OUT STD_LOGIC;
    m_axi_gmem_B_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_B_ID_WIDTH-1 downto 0);
    m_axi_gmem_B_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_B_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_B_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_B_ARREADY : IN STD_LOGIC;
    m_axi_gmem_B_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_B_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_B_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_B_ID_WIDTH-1 downto 0);
    m_axi_gmem_B_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_B_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_B_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_B_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_B_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_B_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_B_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_B_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_B_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_B_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_B_RVALID : IN STD_LOGIC;
    m_axi_gmem_B_RREADY : OUT STD_LOGIC;
    m_axi_gmem_B_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_B_DATA_WIDTH-1 downto 0);
    m_axi_gmem_B_RLAST : IN STD_LOGIC;
    m_axi_gmem_B_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_B_ID_WIDTH-1 downto 0);
    m_axi_gmem_B_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_B_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_B_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_B_BVALID : IN STD_LOGIC;
    m_axi_gmem_B_BREADY : OUT STD_LOGIC;
    m_axi_gmem_B_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_B_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_B_ID_WIDTH-1 downto 0);
    m_axi_gmem_B_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_B_BUSER_WIDTH-1 downto 0);
    m_axi_gmem_C_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_C_AWREADY : IN STD_LOGIC;
    m_axi_gmem_C_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_C_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_C_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_C_ID_WIDTH-1 downto 0);
    m_axi_gmem_C_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_C_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_C_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_C_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_C_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_C_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_C_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_C_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_C_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_C_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_C_WVALID : OUT STD_LOGIC;
    m_axi_gmem_C_WREADY : IN STD_LOGIC;
    m_axi_gmem_C_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_C_DATA_WIDTH-1 downto 0);
    m_axi_gmem_C_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_C_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_C_WLAST : OUT STD_LOGIC;
    m_axi_gmem_C_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_C_ID_WIDTH-1 downto 0);
    m_axi_gmem_C_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_C_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_C_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_C_ARREADY : IN STD_LOGIC;
    m_axi_gmem_C_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_C_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_C_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_C_ID_WIDTH-1 downto 0);
    m_axi_gmem_C_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_C_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_C_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_C_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_C_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_C_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_C_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_C_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_C_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_C_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_C_RVALID : IN STD_LOGIC;
    m_axi_gmem_C_RREADY : OUT STD_LOGIC;
    m_axi_gmem_C_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_C_DATA_WIDTH-1 downto 0);
    m_axi_gmem_C_RLAST : IN STD_LOGIC;
    m_axi_gmem_C_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_C_ID_WIDTH-1 downto 0);
    m_axi_gmem_C_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_C_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_C_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_C_BVALID : IN STD_LOGIC;
    m_axi_gmem_C_BREADY : OUT STD_LOGIC;
    m_axi_gmem_C_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_C_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_C_ID_WIDTH-1 downto 0);
    m_axi_gmem_C_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_C_BUSER_WIDTH-1 downto 0) );
end;


architecture behav of kernel3_kernel3 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "kernel3_kernel3,hls_ip_2019_2_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcu250-figd2104-2L-e,HLS_INPUT_CLOCK=3.333000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=2.433000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=507,HLS_SYN_DSP=1040,HLS_SYN_FF=166612,HLS_SYN_LUT=143445,HLS_VERSION=2019_2_1}";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_S_AXI_WSTRB_WIDTH : INTEGER range 63 downto 0 := 4;
    constant C_S_AXI_ADDR_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant C_M_AXI_ID_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_ADDR_WIDTH : INTEGER range 63 downto 0 := 40;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_WSTRB_WIDTH : INTEGER range 63 downto 0 := 4;
    constant C_M_AXI_AWUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_ARUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_WUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_RUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_BUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv512_lc_2 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";

attribute shreg_extract : string;
    signal ap_rst_reg_2 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_2 : signal is "no";
    signal ap_rst_reg_1 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_1 : signal is "no";
    signal ap_rst_n_inv : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_n_inv : signal is "no";
    signal ap_start : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal A_V : STD_LOGIC_VECTOR (63 downto 0);
    signal B_V : STD_LOGIC_VECTOR (63 downto 0);
    signal C_V : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_A_AWREADY : STD_LOGIC;
    signal gmem_A_WREADY : STD_LOGIC;
    signal gmem_A_ARREADY : STD_LOGIC;
    signal gmem_A_RVALID : STD_LOGIC;
    signal gmem_A_RDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal gmem_A_RLAST : STD_LOGIC;
    signal gmem_A_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_A_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_A_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_A_BVALID : STD_LOGIC;
    signal gmem_A_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_A_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_A_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_B_AWREADY : STD_LOGIC;
    signal gmem_B_WREADY : STD_LOGIC;
    signal gmem_B_ARREADY : STD_LOGIC;
    signal gmem_B_RVALID : STD_LOGIC;
    signal gmem_B_RDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal gmem_B_RLAST : STD_LOGIC;
    signal gmem_B_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_B_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_B_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_B_BVALID : STD_LOGIC;
    signal gmem_B_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_B_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_B_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_C_AWREADY : STD_LOGIC;
    signal gmem_C_WREADY : STD_LOGIC;
    signal gmem_C_ARREADY : STD_LOGIC;
    signal gmem_C_RVALID : STD_LOGIC;
    signal gmem_C_RDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal gmem_C_RLAST : STD_LOGIC;
    signal gmem_C_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_C_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_C_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_C_BVALID : STD_LOGIC;
    signal gmem_C_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_C_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_C_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal kernel3_entry14_U0_ap_start : STD_LOGIC;
    signal kernel3_entry14_U0_ap_done : STD_LOGIC;
    signal kernel3_entry14_U0_ap_continue : STD_LOGIC;
    signal kernel3_entry14_U0_ap_idle : STD_LOGIC;
    signal kernel3_entry14_U0_ap_ready : STD_LOGIC;
    signal kernel3_entry14_U0_A_V_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal kernel3_entry14_U0_A_V_out_write : STD_LOGIC;
    signal kernel3_entry14_U0_B_V_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal kernel3_entry14_U0_B_V_out_write : STD_LOGIC;
    signal kernel3_entry14_U0_C_V_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal kernel3_entry14_U0_C_V_out_write : STD_LOGIC;
    signal A_IO_L3_in_U0_ap_start : STD_LOGIC;
    signal A_IO_L3_in_U0_ap_done : STD_LOGIC;
    signal A_IO_L3_in_U0_ap_continue : STD_LOGIC;
    signal A_IO_L3_in_U0_ap_idle : STD_LOGIC;
    signal A_IO_L3_in_U0_ap_ready : STD_LOGIC;
    signal A_IO_L3_in_U0_m_axi_A_V_AWVALID : STD_LOGIC;
    signal A_IO_L3_in_U0_m_axi_A_V_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal A_IO_L3_in_U0_m_axi_A_V_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal A_IO_L3_in_U0_m_axi_A_V_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal A_IO_L3_in_U0_m_axi_A_V_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal A_IO_L3_in_U0_m_axi_A_V_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal A_IO_L3_in_U0_m_axi_A_V_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal A_IO_L3_in_U0_m_axi_A_V_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal A_IO_L3_in_U0_m_axi_A_V_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal A_IO_L3_in_U0_m_axi_A_V_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal A_IO_L3_in_U0_m_axi_A_V_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal A_IO_L3_in_U0_m_axi_A_V_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal A_IO_L3_in_U0_m_axi_A_V_WVALID : STD_LOGIC;
    signal A_IO_L3_in_U0_m_axi_A_V_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal A_IO_L3_in_U0_m_axi_A_V_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal A_IO_L3_in_U0_m_axi_A_V_WLAST : STD_LOGIC;
    signal A_IO_L3_in_U0_m_axi_A_V_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal A_IO_L3_in_U0_m_axi_A_V_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal A_IO_L3_in_U0_m_axi_A_V_ARVALID : STD_LOGIC;
    signal A_IO_L3_in_U0_m_axi_A_V_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal A_IO_L3_in_U0_m_axi_A_V_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal A_IO_L3_in_U0_m_axi_A_V_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal A_IO_L3_in_U0_m_axi_A_V_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal A_IO_L3_in_U0_m_axi_A_V_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal A_IO_L3_in_U0_m_axi_A_V_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal A_IO_L3_in_U0_m_axi_A_V_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal A_IO_L3_in_U0_m_axi_A_V_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal A_IO_L3_in_U0_m_axi_A_V_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal A_IO_L3_in_U0_m_axi_A_V_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal A_IO_L3_in_U0_m_axi_A_V_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal A_IO_L3_in_U0_m_axi_A_V_RREADY : STD_LOGIC;
    signal A_IO_L3_in_U0_m_axi_A_V_BREADY : STD_LOGIC;
    signal A_IO_L3_in_U0_A_V_offset_read : STD_LOGIC;
    signal A_IO_L3_in_U0_fifo_A_local_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal A_IO_L3_in_U0_fifo_A_local_out_V_V_write : STD_LOGIC;
    signal A_IO_L2_in208_U0_ap_start : STD_LOGIC;
    signal A_IO_L2_in208_U0_ap_done : STD_LOGIC;
    signal A_IO_L2_in208_U0_ap_continue : STD_LOGIC;
    signal A_IO_L2_in208_U0_ap_idle : STD_LOGIC;
    signal A_IO_L2_in208_U0_ap_ready : STD_LOGIC;
    signal A_IO_L2_in208_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal A_IO_L2_in208_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal A_IO_L2_in208_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal A_IO_L2_in208_U0_fifo_A_local_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal A_IO_L2_in208_U0_fifo_A_local_out_V_V_write : STD_LOGIC;
    signal ap_sync_reg_A_IO_L2_in208_U0_ap_start : STD_LOGIC := '0';
    signal A_IO_L2_in209_U0_ap_start : STD_LOGIC;
    signal A_IO_L2_in209_U0_ap_done : STD_LOGIC;
    signal A_IO_L2_in209_U0_ap_continue : STD_LOGIC;
    signal A_IO_L2_in209_U0_ap_idle : STD_LOGIC;
    signal A_IO_L2_in209_U0_ap_ready : STD_LOGIC;
    signal A_IO_L2_in209_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal A_IO_L2_in209_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal A_IO_L2_in209_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal A_IO_L2_in209_U0_fifo_A_local_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal A_IO_L2_in209_U0_fifo_A_local_out_V_V_write : STD_LOGIC;
    signal ap_sync_reg_A_IO_L2_in209_U0_ap_start : STD_LOGIC := '0';
    signal A_IO_L2_in210_U0_ap_start : STD_LOGIC;
    signal A_IO_L2_in210_U0_ap_done : STD_LOGIC;
    signal A_IO_L2_in210_U0_ap_continue : STD_LOGIC;
    signal A_IO_L2_in210_U0_ap_idle : STD_LOGIC;
    signal A_IO_L2_in210_U0_ap_ready : STD_LOGIC;
    signal A_IO_L2_in210_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal A_IO_L2_in210_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal A_IO_L2_in210_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal A_IO_L2_in210_U0_fifo_A_local_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal A_IO_L2_in210_U0_fifo_A_local_out_V_V_write : STD_LOGIC;
    signal ap_sync_reg_A_IO_L2_in210_U0_ap_start : STD_LOGIC := '0';
    signal A_IO_L2_in211_U0_ap_start : STD_LOGIC;
    signal A_IO_L2_in211_U0_ap_done : STD_LOGIC;
    signal A_IO_L2_in211_U0_ap_continue : STD_LOGIC;
    signal A_IO_L2_in211_U0_ap_idle : STD_LOGIC;
    signal A_IO_L2_in211_U0_ap_ready : STD_LOGIC;
    signal A_IO_L2_in211_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal A_IO_L2_in211_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal A_IO_L2_in211_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal A_IO_L2_in211_U0_fifo_A_local_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal A_IO_L2_in211_U0_fifo_A_local_out_V_V_write : STD_LOGIC;
    signal ap_sync_reg_A_IO_L2_in211_U0_ap_start : STD_LOGIC := '0';
    signal A_IO_L2_in212_U0_ap_start : STD_LOGIC;
    signal A_IO_L2_in212_U0_ap_done : STD_LOGIC;
    signal A_IO_L2_in212_U0_ap_continue : STD_LOGIC;
    signal A_IO_L2_in212_U0_ap_idle : STD_LOGIC;
    signal A_IO_L2_in212_U0_ap_ready : STD_LOGIC;
    signal A_IO_L2_in212_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal A_IO_L2_in212_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal A_IO_L2_in212_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal A_IO_L2_in212_U0_fifo_A_local_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal A_IO_L2_in212_U0_fifo_A_local_out_V_V_write : STD_LOGIC;
    signal ap_sync_reg_A_IO_L2_in212_U0_ap_start : STD_LOGIC := '0';
    signal A_IO_L2_in213_U0_ap_start : STD_LOGIC;
    signal A_IO_L2_in213_U0_ap_done : STD_LOGIC;
    signal A_IO_L2_in213_U0_ap_continue : STD_LOGIC;
    signal A_IO_L2_in213_U0_ap_idle : STD_LOGIC;
    signal A_IO_L2_in213_U0_ap_ready : STD_LOGIC;
    signal A_IO_L2_in213_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal A_IO_L2_in213_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal A_IO_L2_in213_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal A_IO_L2_in213_U0_fifo_A_local_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal A_IO_L2_in213_U0_fifo_A_local_out_V_V_write : STD_LOGIC;
    signal ap_sync_reg_A_IO_L2_in213_U0_ap_start : STD_LOGIC := '0';
    signal A_IO_L2_in214_U0_ap_start : STD_LOGIC;
    signal A_IO_L2_in214_U0_ap_done : STD_LOGIC;
    signal A_IO_L2_in214_U0_ap_continue : STD_LOGIC;
    signal A_IO_L2_in214_U0_ap_idle : STD_LOGIC;
    signal A_IO_L2_in214_U0_ap_ready : STD_LOGIC;
    signal A_IO_L2_in214_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal A_IO_L2_in214_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal A_IO_L2_in214_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal A_IO_L2_in214_U0_fifo_A_local_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal A_IO_L2_in214_U0_fifo_A_local_out_V_V_write : STD_LOGIC;
    signal ap_sync_reg_A_IO_L2_in214_U0_ap_start : STD_LOGIC := '0';
    signal A_IO_L2_in215_U0_ap_start : STD_LOGIC;
    signal A_IO_L2_in215_U0_ap_done : STD_LOGIC;
    signal A_IO_L2_in215_U0_ap_continue : STD_LOGIC;
    signal A_IO_L2_in215_U0_ap_idle : STD_LOGIC;
    signal A_IO_L2_in215_U0_ap_ready : STD_LOGIC;
    signal A_IO_L2_in215_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal A_IO_L2_in215_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal A_IO_L2_in215_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal A_IO_L2_in215_U0_fifo_A_local_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal A_IO_L2_in215_U0_fifo_A_local_out_V_V_write : STD_LOGIC;
    signal ap_sync_reg_A_IO_L2_in215_U0_ap_start : STD_LOGIC := '0';
    signal A_IO_L2_in216_U0_ap_start : STD_LOGIC;
    signal A_IO_L2_in216_U0_ap_done : STD_LOGIC;
    signal A_IO_L2_in216_U0_ap_continue : STD_LOGIC;
    signal A_IO_L2_in216_U0_ap_idle : STD_LOGIC;
    signal A_IO_L2_in216_U0_ap_ready : STD_LOGIC;
    signal A_IO_L2_in216_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal A_IO_L2_in216_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal A_IO_L2_in216_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal A_IO_L2_in216_U0_fifo_A_local_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal A_IO_L2_in216_U0_fifo_A_local_out_V_V_write : STD_LOGIC;
    signal ap_sync_reg_A_IO_L2_in216_U0_ap_start : STD_LOGIC := '0';
    signal A_IO_L2_in217_U0_ap_start : STD_LOGIC;
    signal A_IO_L2_in217_U0_ap_done : STD_LOGIC;
    signal A_IO_L2_in217_U0_ap_continue : STD_LOGIC;
    signal A_IO_L2_in217_U0_ap_idle : STD_LOGIC;
    signal A_IO_L2_in217_U0_ap_ready : STD_LOGIC;
    signal A_IO_L2_in217_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal A_IO_L2_in217_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal A_IO_L2_in217_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal A_IO_L2_in217_U0_fifo_A_local_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal A_IO_L2_in217_U0_fifo_A_local_out_V_V_write : STD_LOGIC;
    signal ap_sync_reg_A_IO_L2_in217_U0_ap_start : STD_LOGIC := '0';
    signal A_IO_L2_in218_U0_ap_start : STD_LOGIC;
    signal A_IO_L2_in218_U0_ap_done : STD_LOGIC;
    signal A_IO_L2_in218_U0_ap_continue : STD_LOGIC;
    signal A_IO_L2_in218_U0_ap_idle : STD_LOGIC;
    signal A_IO_L2_in218_U0_ap_ready : STD_LOGIC;
    signal A_IO_L2_in218_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal A_IO_L2_in218_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal A_IO_L2_in218_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal A_IO_L2_in218_U0_fifo_A_local_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal A_IO_L2_in218_U0_fifo_A_local_out_V_V_write : STD_LOGIC;
    signal ap_sync_reg_A_IO_L2_in218_U0_ap_start : STD_LOGIC := '0';
    signal A_IO_L2_in219_U0_ap_start : STD_LOGIC;
    signal A_IO_L2_in219_U0_ap_done : STD_LOGIC;
    signal A_IO_L2_in219_U0_ap_continue : STD_LOGIC;
    signal A_IO_L2_in219_U0_ap_idle : STD_LOGIC;
    signal A_IO_L2_in219_U0_ap_ready : STD_LOGIC;
    signal A_IO_L2_in219_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal A_IO_L2_in219_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal A_IO_L2_in219_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal A_IO_L2_in219_U0_fifo_A_local_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal A_IO_L2_in219_U0_fifo_A_local_out_V_V_write : STD_LOGIC;
    signal ap_sync_reg_A_IO_L2_in219_U0_ap_start : STD_LOGIC := '0';
    signal A_IO_L2_in_boundary_U0_ap_start : STD_LOGIC;
    signal A_IO_L2_in_boundary_U0_ap_done : STD_LOGIC;
    signal A_IO_L2_in_boundary_U0_ap_continue : STD_LOGIC;
    signal A_IO_L2_in_boundary_U0_ap_idle : STD_LOGIC;
    signal A_IO_L2_in_boundary_U0_ap_ready : STD_LOGIC;
    signal A_IO_L2_in_boundary_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal A_IO_L2_in_boundary_U0_fifo_A_local_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal A_IO_L2_in_boundary_U0_fifo_A_local_out_V_V_write : STD_LOGIC;
    signal ap_sync_reg_A_IO_L2_in_boundary_U0_ap_start : STD_LOGIC := '0';
    signal B_IO_L3_in_U0_ap_start : STD_LOGIC;
    signal B_IO_L3_in_U0_ap_done : STD_LOGIC;
    signal B_IO_L3_in_U0_ap_continue : STD_LOGIC;
    signal B_IO_L3_in_U0_ap_idle : STD_LOGIC;
    signal B_IO_L3_in_U0_ap_ready : STD_LOGIC;
    signal B_IO_L3_in_U0_m_axi_B_V_AWVALID : STD_LOGIC;
    signal B_IO_L3_in_U0_m_axi_B_V_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal B_IO_L3_in_U0_m_axi_B_V_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal B_IO_L3_in_U0_m_axi_B_V_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal B_IO_L3_in_U0_m_axi_B_V_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal B_IO_L3_in_U0_m_axi_B_V_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal B_IO_L3_in_U0_m_axi_B_V_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal B_IO_L3_in_U0_m_axi_B_V_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal B_IO_L3_in_U0_m_axi_B_V_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal B_IO_L3_in_U0_m_axi_B_V_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal B_IO_L3_in_U0_m_axi_B_V_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal B_IO_L3_in_U0_m_axi_B_V_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal B_IO_L3_in_U0_m_axi_B_V_WVALID : STD_LOGIC;
    signal B_IO_L3_in_U0_m_axi_B_V_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal B_IO_L3_in_U0_m_axi_B_V_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal B_IO_L3_in_U0_m_axi_B_V_WLAST : STD_LOGIC;
    signal B_IO_L3_in_U0_m_axi_B_V_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal B_IO_L3_in_U0_m_axi_B_V_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal B_IO_L3_in_U0_m_axi_B_V_ARVALID : STD_LOGIC;
    signal B_IO_L3_in_U0_m_axi_B_V_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal B_IO_L3_in_U0_m_axi_B_V_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal B_IO_L3_in_U0_m_axi_B_V_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal B_IO_L3_in_U0_m_axi_B_V_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal B_IO_L3_in_U0_m_axi_B_V_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal B_IO_L3_in_U0_m_axi_B_V_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal B_IO_L3_in_U0_m_axi_B_V_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal B_IO_L3_in_U0_m_axi_B_V_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal B_IO_L3_in_U0_m_axi_B_V_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal B_IO_L3_in_U0_m_axi_B_V_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal B_IO_L3_in_U0_m_axi_B_V_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal B_IO_L3_in_U0_m_axi_B_V_RREADY : STD_LOGIC;
    signal B_IO_L3_in_U0_m_axi_B_V_BREADY : STD_LOGIC;
    signal B_IO_L3_in_U0_B_V_offset_read : STD_LOGIC;
    signal B_IO_L3_in_U0_fifo_B_local_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal B_IO_L3_in_U0_fifo_B_local_out_V_V_write : STD_LOGIC;
    signal B_IO_L2_in_U0_ap_start : STD_LOGIC;
    signal B_IO_L2_in_U0_ap_done : STD_LOGIC;
    signal B_IO_L2_in_U0_ap_continue : STD_LOGIC;
    signal B_IO_L2_in_U0_ap_idle : STD_LOGIC;
    signal B_IO_L2_in_U0_ap_ready : STD_LOGIC;
    signal B_IO_L2_in_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal B_IO_L2_in_U0_fifo_B_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal B_IO_L2_in_U0_fifo_B_out_V_V_write : STD_LOGIC;
    signal B_IO_L2_in_U0_fifo_B_local_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal B_IO_L2_in_U0_fifo_B_local_out_V_V_write : STD_LOGIC;
    signal ap_sync_reg_B_IO_L2_in_U0_ap_start : STD_LOGIC := '0';
    signal B_IO_L2_in_boundary_U0_ap_start : STD_LOGIC;
    signal B_IO_L2_in_boundary_U0_ap_done : STD_LOGIC;
    signal B_IO_L2_in_boundary_U0_ap_continue : STD_LOGIC;
    signal B_IO_L2_in_boundary_U0_ap_idle : STD_LOGIC;
    signal B_IO_L2_in_boundary_U0_ap_ready : STD_LOGIC;
    signal B_IO_L2_in_boundary_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal B_IO_L2_in_boundary_U0_fifo_B_local_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal B_IO_L2_in_boundary_U0_fifo_B_local_out_V_V_write : STD_LOGIC;
    signal ap_sync_reg_B_IO_L2_in_boundary_U0_ap_start : STD_LOGIC := '0';
    signal PE_wrapper_0_0_U0_ap_start : STD_LOGIC;
    signal PE_wrapper_0_0_U0_ap_done : STD_LOGIC;
    signal PE_wrapper_0_0_U0_ap_continue : STD_LOGIC;
    signal PE_wrapper_0_0_U0_ap_idle : STD_LOGIC;
    signal PE_wrapper_0_0_U0_ap_ready : STD_LOGIC;
    signal PE_wrapper_0_0_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_0_0_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_0_0_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_0_0_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_0_0_U0_fifo_B_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_0_0_U0_fifo_B_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_0_0_U0_fifo_C_drain_out_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PE_wrapper_0_0_U0_fifo_C_drain_out_V_write : STD_LOGIC;
    signal ap_sync_reg_PE_wrapper_0_0_U0_ap_start : STD_LOGIC := '0';
    signal PE_wrapper_0_1_U0_ap_start : STD_LOGIC;
    signal PE_wrapper_0_1_U0_ap_done : STD_LOGIC;
    signal PE_wrapper_0_1_U0_ap_continue : STD_LOGIC;
    signal PE_wrapper_0_1_U0_ap_idle : STD_LOGIC;
    signal PE_wrapper_0_1_U0_ap_ready : STD_LOGIC;
    signal PE_wrapper_0_1_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_0_1_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_0_1_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_0_1_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_0_1_U0_fifo_B_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_0_1_U0_fifo_B_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_0_1_U0_fifo_C_drain_out_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PE_wrapper_0_1_U0_fifo_C_drain_out_V_write : STD_LOGIC;
    signal ap_sync_reg_PE_wrapper_0_1_U0_ap_start : STD_LOGIC := '0';
    signal PE_wrapper_1_0_U0_ap_start : STD_LOGIC;
    signal PE_wrapper_1_0_U0_ap_done : STD_LOGIC;
    signal PE_wrapper_1_0_U0_ap_continue : STD_LOGIC;
    signal PE_wrapper_1_0_U0_ap_idle : STD_LOGIC;
    signal PE_wrapper_1_0_U0_ap_ready : STD_LOGIC;
    signal PE_wrapper_1_0_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_1_0_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_1_0_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_1_0_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_1_0_U0_fifo_B_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_1_0_U0_fifo_B_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_1_0_U0_fifo_C_drain_out_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PE_wrapper_1_0_U0_fifo_C_drain_out_V_write : STD_LOGIC;
    signal ap_sync_reg_PE_wrapper_1_0_U0_ap_start : STD_LOGIC := '0';
    signal PE_wrapper_1_1_U0_ap_start : STD_LOGIC;
    signal PE_wrapper_1_1_U0_ap_done : STD_LOGIC;
    signal PE_wrapper_1_1_U0_ap_continue : STD_LOGIC;
    signal PE_wrapper_1_1_U0_ap_idle : STD_LOGIC;
    signal PE_wrapper_1_1_U0_ap_ready : STD_LOGIC;
    signal PE_wrapper_1_1_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_1_1_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_1_1_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_1_1_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_1_1_U0_fifo_B_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_1_1_U0_fifo_B_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_1_1_U0_fifo_C_drain_out_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PE_wrapper_1_1_U0_fifo_C_drain_out_V_write : STD_LOGIC;
    signal ap_sync_reg_PE_wrapper_1_1_U0_ap_start : STD_LOGIC := '0';
    signal PE_wrapper_2_0_U0_ap_start : STD_LOGIC;
    signal PE_wrapper_2_0_U0_ap_done : STD_LOGIC;
    signal PE_wrapper_2_0_U0_ap_continue : STD_LOGIC;
    signal PE_wrapper_2_0_U0_ap_idle : STD_LOGIC;
    signal PE_wrapper_2_0_U0_ap_ready : STD_LOGIC;
    signal PE_wrapper_2_0_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_2_0_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_2_0_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_2_0_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_2_0_U0_fifo_B_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_2_0_U0_fifo_B_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_2_0_U0_fifo_C_drain_out_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PE_wrapper_2_0_U0_fifo_C_drain_out_V_write : STD_LOGIC;
    signal ap_sync_reg_PE_wrapper_2_0_U0_ap_start : STD_LOGIC := '0';
    signal PE_wrapper_2_1_U0_ap_start : STD_LOGIC;
    signal PE_wrapper_2_1_U0_ap_done : STD_LOGIC;
    signal PE_wrapper_2_1_U0_ap_continue : STD_LOGIC;
    signal PE_wrapper_2_1_U0_ap_idle : STD_LOGIC;
    signal PE_wrapper_2_1_U0_ap_ready : STD_LOGIC;
    signal PE_wrapper_2_1_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_2_1_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_2_1_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_2_1_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_2_1_U0_fifo_B_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_2_1_U0_fifo_B_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_2_1_U0_fifo_C_drain_out_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PE_wrapper_2_1_U0_fifo_C_drain_out_V_write : STD_LOGIC;
    signal ap_sync_reg_PE_wrapper_2_1_U0_ap_start : STD_LOGIC := '0';
    signal PE_wrapper_3_0_U0_ap_start : STD_LOGIC;
    signal PE_wrapper_3_0_U0_ap_done : STD_LOGIC;
    signal PE_wrapper_3_0_U0_ap_continue : STD_LOGIC;
    signal PE_wrapper_3_0_U0_ap_idle : STD_LOGIC;
    signal PE_wrapper_3_0_U0_ap_ready : STD_LOGIC;
    signal PE_wrapper_3_0_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_3_0_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_3_0_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_3_0_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_3_0_U0_fifo_B_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_3_0_U0_fifo_B_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_3_0_U0_fifo_C_drain_out_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PE_wrapper_3_0_U0_fifo_C_drain_out_V_write : STD_LOGIC;
    signal ap_sync_reg_PE_wrapper_3_0_U0_ap_start : STD_LOGIC := '0';
    signal PE_wrapper_3_1_U0_ap_start : STD_LOGIC;
    signal PE_wrapper_3_1_U0_ap_done : STD_LOGIC;
    signal PE_wrapper_3_1_U0_ap_continue : STD_LOGIC;
    signal PE_wrapper_3_1_U0_ap_idle : STD_LOGIC;
    signal PE_wrapper_3_1_U0_ap_ready : STD_LOGIC;
    signal PE_wrapper_3_1_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_3_1_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_3_1_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_3_1_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_3_1_U0_fifo_B_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_3_1_U0_fifo_B_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_3_1_U0_fifo_C_drain_out_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PE_wrapper_3_1_U0_fifo_C_drain_out_V_write : STD_LOGIC;
    signal ap_sync_reg_PE_wrapper_3_1_U0_ap_start : STD_LOGIC := '0';
    signal PE_wrapper_4_0_U0_ap_start : STD_LOGIC;
    signal PE_wrapper_4_0_U0_ap_done : STD_LOGIC;
    signal PE_wrapper_4_0_U0_ap_continue : STD_LOGIC;
    signal PE_wrapper_4_0_U0_ap_idle : STD_LOGIC;
    signal PE_wrapper_4_0_U0_ap_ready : STD_LOGIC;
    signal PE_wrapper_4_0_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_4_0_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_4_0_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_4_0_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_4_0_U0_fifo_B_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_4_0_U0_fifo_B_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_4_0_U0_fifo_C_drain_out_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PE_wrapper_4_0_U0_fifo_C_drain_out_V_write : STD_LOGIC;
    signal ap_sync_reg_PE_wrapper_4_0_U0_ap_start : STD_LOGIC := '0';
    signal PE_wrapper_4_1_U0_ap_start : STD_LOGIC;
    signal PE_wrapper_4_1_U0_ap_done : STD_LOGIC;
    signal PE_wrapper_4_1_U0_ap_continue : STD_LOGIC;
    signal PE_wrapper_4_1_U0_ap_idle : STD_LOGIC;
    signal PE_wrapper_4_1_U0_ap_ready : STD_LOGIC;
    signal PE_wrapper_4_1_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_4_1_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_4_1_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_4_1_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_4_1_U0_fifo_B_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_4_1_U0_fifo_B_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_4_1_U0_fifo_C_drain_out_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PE_wrapper_4_1_U0_fifo_C_drain_out_V_write : STD_LOGIC;
    signal ap_sync_reg_PE_wrapper_4_1_U0_ap_start : STD_LOGIC := '0';
    signal PE_wrapper_5_0_U0_ap_start : STD_LOGIC;
    signal PE_wrapper_5_0_U0_ap_done : STD_LOGIC;
    signal PE_wrapper_5_0_U0_ap_continue : STD_LOGIC;
    signal PE_wrapper_5_0_U0_ap_idle : STD_LOGIC;
    signal PE_wrapper_5_0_U0_ap_ready : STD_LOGIC;
    signal PE_wrapper_5_0_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_5_0_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_5_0_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_5_0_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_5_0_U0_fifo_B_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_5_0_U0_fifo_B_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_5_0_U0_fifo_C_drain_out_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PE_wrapper_5_0_U0_fifo_C_drain_out_V_write : STD_LOGIC;
    signal ap_sync_reg_PE_wrapper_5_0_U0_ap_start : STD_LOGIC := '0';
    signal PE_wrapper_5_1_U0_ap_start : STD_LOGIC;
    signal PE_wrapper_5_1_U0_ap_done : STD_LOGIC;
    signal PE_wrapper_5_1_U0_ap_continue : STD_LOGIC;
    signal PE_wrapper_5_1_U0_ap_idle : STD_LOGIC;
    signal PE_wrapper_5_1_U0_ap_ready : STD_LOGIC;
    signal PE_wrapper_5_1_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_5_1_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_5_1_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_5_1_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_5_1_U0_fifo_B_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_5_1_U0_fifo_B_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_5_1_U0_fifo_C_drain_out_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PE_wrapper_5_1_U0_fifo_C_drain_out_V_write : STD_LOGIC;
    signal ap_sync_reg_PE_wrapper_5_1_U0_ap_start : STD_LOGIC := '0';
    signal PE_wrapper_6_0_U0_ap_start : STD_LOGIC;
    signal PE_wrapper_6_0_U0_ap_done : STD_LOGIC;
    signal PE_wrapper_6_0_U0_ap_continue : STD_LOGIC;
    signal PE_wrapper_6_0_U0_ap_idle : STD_LOGIC;
    signal PE_wrapper_6_0_U0_ap_ready : STD_LOGIC;
    signal PE_wrapper_6_0_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_6_0_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_6_0_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_6_0_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_6_0_U0_fifo_B_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_6_0_U0_fifo_B_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_6_0_U0_fifo_C_drain_out_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PE_wrapper_6_0_U0_fifo_C_drain_out_V_write : STD_LOGIC;
    signal ap_sync_reg_PE_wrapper_6_0_U0_ap_start : STD_LOGIC := '0';
    signal PE_wrapper_6_1_U0_ap_start : STD_LOGIC;
    signal PE_wrapper_6_1_U0_ap_done : STD_LOGIC;
    signal PE_wrapper_6_1_U0_ap_continue : STD_LOGIC;
    signal PE_wrapper_6_1_U0_ap_idle : STD_LOGIC;
    signal PE_wrapper_6_1_U0_ap_ready : STD_LOGIC;
    signal PE_wrapper_6_1_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_6_1_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_6_1_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_6_1_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_6_1_U0_fifo_B_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_6_1_U0_fifo_B_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_6_1_U0_fifo_C_drain_out_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PE_wrapper_6_1_U0_fifo_C_drain_out_V_write : STD_LOGIC;
    signal ap_sync_reg_PE_wrapper_6_1_U0_ap_start : STD_LOGIC := '0';
    signal PE_wrapper_7_0_U0_ap_start : STD_LOGIC;
    signal PE_wrapper_7_0_U0_ap_done : STD_LOGIC;
    signal PE_wrapper_7_0_U0_ap_continue : STD_LOGIC;
    signal PE_wrapper_7_0_U0_ap_idle : STD_LOGIC;
    signal PE_wrapper_7_0_U0_ap_ready : STD_LOGIC;
    signal PE_wrapper_7_0_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_7_0_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_7_0_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_7_0_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_7_0_U0_fifo_B_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_7_0_U0_fifo_B_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_7_0_U0_fifo_C_drain_out_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PE_wrapper_7_0_U0_fifo_C_drain_out_V_write : STD_LOGIC;
    signal ap_sync_reg_PE_wrapper_7_0_U0_ap_start : STD_LOGIC := '0';
    signal PE_wrapper_7_1_U0_ap_start : STD_LOGIC;
    signal PE_wrapper_7_1_U0_ap_done : STD_LOGIC;
    signal PE_wrapper_7_1_U0_ap_continue : STD_LOGIC;
    signal PE_wrapper_7_1_U0_ap_idle : STD_LOGIC;
    signal PE_wrapper_7_1_U0_ap_ready : STD_LOGIC;
    signal PE_wrapper_7_1_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_7_1_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_7_1_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_7_1_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_7_1_U0_fifo_B_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_7_1_U0_fifo_B_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_7_1_U0_fifo_C_drain_out_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PE_wrapper_7_1_U0_fifo_C_drain_out_V_write : STD_LOGIC;
    signal ap_sync_reg_PE_wrapper_7_1_U0_ap_start : STD_LOGIC := '0';
    signal PE_wrapper_8_0_U0_ap_start : STD_LOGIC;
    signal PE_wrapper_8_0_U0_ap_done : STD_LOGIC;
    signal PE_wrapper_8_0_U0_ap_continue : STD_LOGIC;
    signal PE_wrapper_8_0_U0_ap_idle : STD_LOGIC;
    signal PE_wrapper_8_0_U0_ap_ready : STD_LOGIC;
    signal PE_wrapper_8_0_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_8_0_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_8_0_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_8_0_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_8_0_U0_fifo_B_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_8_0_U0_fifo_B_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_8_0_U0_fifo_C_drain_out_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PE_wrapper_8_0_U0_fifo_C_drain_out_V_write : STD_LOGIC;
    signal ap_sync_reg_PE_wrapper_8_0_U0_ap_start : STD_LOGIC := '0';
    signal PE_wrapper_8_1_U0_ap_start : STD_LOGIC;
    signal PE_wrapper_8_1_U0_ap_done : STD_LOGIC;
    signal PE_wrapper_8_1_U0_ap_continue : STD_LOGIC;
    signal PE_wrapper_8_1_U0_ap_idle : STD_LOGIC;
    signal PE_wrapper_8_1_U0_ap_ready : STD_LOGIC;
    signal PE_wrapper_8_1_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_8_1_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_8_1_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_8_1_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_8_1_U0_fifo_B_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_8_1_U0_fifo_B_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_8_1_U0_fifo_C_drain_out_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PE_wrapper_8_1_U0_fifo_C_drain_out_V_write : STD_LOGIC;
    signal ap_sync_reg_PE_wrapper_8_1_U0_ap_start : STD_LOGIC := '0';
    signal PE_wrapper_9_0_U0_ap_start : STD_LOGIC;
    signal PE_wrapper_9_0_U0_ap_done : STD_LOGIC;
    signal PE_wrapper_9_0_U0_ap_continue : STD_LOGIC;
    signal PE_wrapper_9_0_U0_ap_idle : STD_LOGIC;
    signal PE_wrapper_9_0_U0_ap_ready : STD_LOGIC;
    signal PE_wrapper_9_0_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_9_0_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_9_0_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_9_0_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_9_0_U0_fifo_B_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_9_0_U0_fifo_B_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_9_0_U0_fifo_C_drain_out_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PE_wrapper_9_0_U0_fifo_C_drain_out_V_write : STD_LOGIC;
    signal ap_sync_reg_PE_wrapper_9_0_U0_ap_start : STD_LOGIC := '0';
    signal PE_wrapper_9_1_U0_ap_start : STD_LOGIC;
    signal PE_wrapper_9_1_U0_ap_done : STD_LOGIC;
    signal PE_wrapper_9_1_U0_ap_continue : STD_LOGIC;
    signal PE_wrapper_9_1_U0_ap_idle : STD_LOGIC;
    signal PE_wrapper_9_1_U0_ap_ready : STD_LOGIC;
    signal PE_wrapper_9_1_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_9_1_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_9_1_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_9_1_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_9_1_U0_fifo_B_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_9_1_U0_fifo_B_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_9_1_U0_fifo_C_drain_out_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PE_wrapper_9_1_U0_fifo_C_drain_out_V_write : STD_LOGIC;
    signal ap_sync_reg_PE_wrapper_9_1_U0_ap_start : STD_LOGIC := '0';
    signal PE_wrapper_10_0_U0_ap_start : STD_LOGIC;
    signal PE_wrapper_10_0_U0_ap_done : STD_LOGIC;
    signal PE_wrapper_10_0_U0_ap_continue : STD_LOGIC;
    signal PE_wrapper_10_0_U0_ap_idle : STD_LOGIC;
    signal PE_wrapper_10_0_U0_ap_ready : STD_LOGIC;
    signal PE_wrapper_10_0_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_10_0_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_10_0_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_10_0_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_10_0_U0_fifo_B_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_10_0_U0_fifo_B_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_10_0_U0_fifo_C_drain_out_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PE_wrapper_10_0_U0_fifo_C_drain_out_V_write : STD_LOGIC;
    signal ap_sync_reg_PE_wrapper_10_0_U0_ap_start : STD_LOGIC := '0';
    signal PE_wrapper_10_1_U0_ap_start : STD_LOGIC;
    signal PE_wrapper_10_1_U0_ap_done : STD_LOGIC;
    signal PE_wrapper_10_1_U0_ap_continue : STD_LOGIC;
    signal PE_wrapper_10_1_U0_ap_idle : STD_LOGIC;
    signal PE_wrapper_10_1_U0_ap_ready : STD_LOGIC;
    signal PE_wrapper_10_1_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_10_1_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_10_1_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_10_1_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_10_1_U0_fifo_B_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_10_1_U0_fifo_B_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_10_1_U0_fifo_C_drain_out_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PE_wrapper_10_1_U0_fifo_C_drain_out_V_write : STD_LOGIC;
    signal ap_sync_reg_PE_wrapper_10_1_U0_ap_start : STD_LOGIC := '0';
    signal PE_wrapper_11_0_U0_ap_start : STD_LOGIC;
    signal PE_wrapper_11_0_U0_ap_done : STD_LOGIC;
    signal PE_wrapper_11_0_U0_ap_continue : STD_LOGIC;
    signal PE_wrapper_11_0_U0_ap_idle : STD_LOGIC;
    signal PE_wrapper_11_0_U0_ap_ready : STD_LOGIC;
    signal PE_wrapper_11_0_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_11_0_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_11_0_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_11_0_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_11_0_U0_fifo_B_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_11_0_U0_fifo_B_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_11_0_U0_fifo_C_drain_out_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PE_wrapper_11_0_U0_fifo_C_drain_out_V_write : STD_LOGIC;
    signal ap_sync_reg_PE_wrapper_11_0_U0_ap_start : STD_LOGIC := '0';
    signal PE_wrapper_11_1_U0_ap_start : STD_LOGIC;
    signal PE_wrapper_11_1_U0_ap_done : STD_LOGIC;
    signal PE_wrapper_11_1_U0_ap_continue : STD_LOGIC;
    signal PE_wrapper_11_1_U0_ap_idle : STD_LOGIC;
    signal PE_wrapper_11_1_U0_ap_ready : STD_LOGIC;
    signal PE_wrapper_11_1_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_11_1_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_11_1_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_11_1_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_11_1_U0_fifo_B_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_11_1_U0_fifo_B_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_11_1_U0_fifo_C_drain_out_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PE_wrapper_11_1_U0_fifo_C_drain_out_V_write : STD_LOGIC;
    signal ap_sync_reg_PE_wrapper_11_1_U0_ap_start : STD_LOGIC := '0';
    signal PE_wrapper_12_0_U0_ap_start : STD_LOGIC;
    signal PE_wrapper_12_0_U0_ap_done : STD_LOGIC;
    signal PE_wrapper_12_0_U0_ap_continue : STD_LOGIC;
    signal PE_wrapper_12_0_U0_ap_idle : STD_LOGIC;
    signal PE_wrapper_12_0_U0_ap_ready : STD_LOGIC;
    signal PE_wrapper_12_0_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_12_0_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_12_0_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_12_0_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_12_0_U0_fifo_B_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_12_0_U0_fifo_B_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_12_0_U0_fifo_C_drain_out_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PE_wrapper_12_0_U0_fifo_C_drain_out_V_write : STD_LOGIC;
    signal ap_sync_reg_PE_wrapper_12_0_U0_ap_start : STD_LOGIC := '0';
    signal PE_wrapper_12_1_U0_ap_start : STD_LOGIC;
    signal PE_wrapper_12_1_U0_ap_done : STD_LOGIC;
    signal PE_wrapper_12_1_U0_ap_continue : STD_LOGIC;
    signal PE_wrapper_12_1_U0_ap_idle : STD_LOGIC;
    signal PE_wrapper_12_1_U0_ap_ready : STD_LOGIC;
    signal PE_wrapper_12_1_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_12_1_U0_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_12_1_U0_fifo_A_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_12_1_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal PE_wrapper_12_1_U0_fifo_B_out_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal PE_wrapper_12_1_U0_fifo_B_out_V_V_write : STD_LOGIC;
    signal PE_wrapper_12_1_U0_fifo_C_drain_out_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal PE_wrapper_12_1_U0_fifo_C_drain_out_V_write : STD_LOGIC;
    signal ap_sync_reg_PE_wrapper_12_1_U0_ap_start : STD_LOGIC := '0';
    signal A_PE_dummy220_U0_ap_start : STD_LOGIC;
    signal A_PE_dummy220_U0_ap_done : STD_LOGIC;
    signal A_PE_dummy220_U0_ap_continue : STD_LOGIC;
    signal A_PE_dummy220_U0_ap_idle : STD_LOGIC;
    signal A_PE_dummy220_U0_ap_ready : STD_LOGIC;
    signal A_PE_dummy220_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal ap_sync_reg_A_PE_dummy220_U0_ap_start : STD_LOGIC := '0';
    signal ap_sync_continue : STD_LOGIC;
    signal A_PE_dummy221_U0_ap_start : STD_LOGIC;
    signal A_PE_dummy221_U0_ap_done : STD_LOGIC;
    signal A_PE_dummy221_U0_ap_continue : STD_LOGIC;
    signal A_PE_dummy221_U0_ap_idle : STD_LOGIC;
    signal A_PE_dummy221_U0_ap_ready : STD_LOGIC;
    signal A_PE_dummy221_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal ap_sync_reg_A_PE_dummy221_U0_ap_start : STD_LOGIC := '0';
    signal A_PE_dummy222_U0_ap_start : STD_LOGIC;
    signal A_PE_dummy222_U0_ap_done : STD_LOGIC;
    signal A_PE_dummy222_U0_ap_continue : STD_LOGIC;
    signal A_PE_dummy222_U0_ap_idle : STD_LOGIC;
    signal A_PE_dummy222_U0_ap_ready : STD_LOGIC;
    signal A_PE_dummy222_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal ap_sync_reg_A_PE_dummy222_U0_ap_start : STD_LOGIC := '0';
    signal A_PE_dummy223_U0_ap_start : STD_LOGIC;
    signal A_PE_dummy223_U0_ap_done : STD_LOGIC;
    signal A_PE_dummy223_U0_ap_continue : STD_LOGIC;
    signal A_PE_dummy223_U0_ap_idle : STD_LOGIC;
    signal A_PE_dummy223_U0_ap_ready : STD_LOGIC;
    signal A_PE_dummy223_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal ap_sync_reg_A_PE_dummy223_U0_ap_start : STD_LOGIC := '0';
    signal A_PE_dummy224_U0_ap_start : STD_LOGIC;
    signal A_PE_dummy224_U0_ap_done : STD_LOGIC;
    signal A_PE_dummy224_U0_ap_continue : STD_LOGIC;
    signal A_PE_dummy224_U0_ap_idle : STD_LOGIC;
    signal A_PE_dummy224_U0_ap_ready : STD_LOGIC;
    signal A_PE_dummy224_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal ap_sync_reg_A_PE_dummy224_U0_ap_start : STD_LOGIC := '0';
    signal A_PE_dummy225_U0_ap_start : STD_LOGIC;
    signal A_PE_dummy225_U0_ap_done : STD_LOGIC;
    signal A_PE_dummy225_U0_ap_continue : STD_LOGIC;
    signal A_PE_dummy225_U0_ap_idle : STD_LOGIC;
    signal A_PE_dummy225_U0_ap_ready : STD_LOGIC;
    signal A_PE_dummy225_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal ap_sync_reg_A_PE_dummy225_U0_ap_start : STD_LOGIC := '0';
    signal A_PE_dummy226_U0_ap_start : STD_LOGIC;
    signal A_PE_dummy226_U0_ap_done : STD_LOGIC;
    signal A_PE_dummy226_U0_ap_continue : STD_LOGIC;
    signal A_PE_dummy226_U0_ap_idle : STD_LOGIC;
    signal A_PE_dummy226_U0_ap_ready : STD_LOGIC;
    signal A_PE_dummy226_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal ap_sync_reg_A_PE_dummy226_U0_ap_start : STD_LOGIC := '0';
    signal A_PE_dummy227_U0_ap_start : STD_LOGIC;
    signal A_PE_dummy227_U0_ap_done : STD_LOGIC;
    signal A_PE_dummy227_U0_ap_continue : STD_LOGIC;
    signal A_PE_dummy227_U0_ap_idle : STD_LOGIC;
    signal A_PE_dummy227_U0_ap_ready : STD_LOGIC;
    signal A_PE_dummy227_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal ap_sync_reg_A_PE_dummy227_U0_ap_start : STD_LOGIC := '0';
    signal A_PE_dummy228_U0_ap_start : STD_LOGIC;
    signal A_PE_dummy228_U0_ap_done : STD_LOGIC;
    signal A_PE_dummy228_U0_ap_continue : STD_LOGIC;
    signal A_PE_dummy228_U0_ap_idle : STD_LOGIC;
    signal A_PE_dummy228_U0_ap_ready : STD_LOGIC;
    signal A_PE_dummy228_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal ap_sync_reg_A_PE_dummy228_U0_ap_start : STD_LOGIC := '0';
    signal A_PE_dummy229_U0_ap_start : STD_LOGIC;
    signal A_PE_dummy229_U0_ap_done : STD_LOGIC;
    signal A_PE_dummy229_U0_ap_continue : STD_LOGIC;
    signal A_PE_dummy229_U0_ap_idle : STD_LOGIC;
    signal A_PE_dummy229_U0_ap_ready : STD_LOGIC;
    signal A_PE_dummy229_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal ap_sync_reg_A_PE_dummy229_U0_ap_start : STD_LOGIC := '0';
    signal A_PE_dummy230_U0_ap_start : STD_LOGIC;
    signal A_PE_dummy230_U0_ap_done : STD_LOGIC;
    signal A_PE_dummy230_U0_ap_continue : STD_LOGIC;
    signal A_PE_dummy230_U0_ap_idle : STD_LOGIC;
    signal A_PE_dummy230_U0_ap_ready : STD_LOGIC;
    signal A_PE_dummy230_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal ap_sync_reg_A_PE_dummy230_U0_ap_start : STD_LOGIC := '0';
    signal A_PE_dummy231_U0_ap_start : STD_LOGIC;
    signal A_PE_dummy231_U0_ap_done : STD_LOGIC;
    signal A_PE_dummy231_U0_ap_continue : STD_LOGIC;
    signal A_PE_dummy231_U0_ap_idle : STD_LOGIC;
    signal A_PE_dummy231_U0_ap_ready : STD_LOGIC;
    signal A_PE_dummy231_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal ap_sync_reg_A_PE_dummy231_U0_ap_start : STD_LOGIC := '0';
    signal A_PE_dummy_U0_ap_start : STD_LOGIC;
    signal A_PE_dummy_U0_ap_done : STD_LOGIC;
    signal A_PE_dummy_U0_ap_continue : STD_LOGIC;
    signal A_PE_dummy_U0_ap_idle : STD_LOGIC;
    signal A_PE_dummy_U0_ap_ready : STD_LOGIC;
    signal A_PE_dummy_U0_fifo_A_in_V_V_read : STD_LOGIC;
    signal ap_sync_reg_A_PE_dummy_U0_ap_start : STD_LOGIC := '0';
    signal B_PE_dummy232_U0_ap_start : STD_LOGIC;
    signal B_PE_dummy232_U0_ap_done : STD_LOGIC;
    signal B_PE_dummy232_U0_ap_continue : STD_LOGIC;
    signal B_PE_dummy232_U0_ap_idle : STD_LOGIC;
    signal B_PE_dummy232_U0_ap_ready : STD_LOGIC;
    signal B_PE_dummy232_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal ap_sync_reg_B_PE_dummy232_U0_ap_start : STD_LOGIC := '0';
    signal B_PE_dummy_U0_ap_start : STD_LOGIC;
    signal B_PE_dummy_U0_ap_done : STD_LOGIC;
    signal B_PE_dummy_U0_ap_continue : STD_LOGIC;
    signal B_PE_dummy_U0_ap_idle : STD_LOGIC;
    signal B_PE_dummy_U0_ap_ready : STD_LOGIC;
    signal B_PE_dummy_U0_fifo_B_in_V_V_read : STD_LOGIC;
    signal ap_sync_reg_B_PE_dummy_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L1_out_boundary233_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L1_out_boundary233_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L1_out_boundary233_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L1_out_boundary233_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L1_out_boundary233_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L1_out_boundary233_U0_fifo_C_drain_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L1_out_boundary233_U0_fifo_C_drain_out_V_V_write : STD_LOGIC;
    signal C_drain_IO_L1_out_boundary233_U0_fifo_C_drain_local_in_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L1_out_boundary233_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L1_out234_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L1_out234_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L1_out234_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L1_out234_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L1_out234_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L1_out234_U0_fifo_C_drain_in_V_V_read : STD_LOGIC;
    signal C_drain_IO_L1_out234_U0_fifo_C_drain_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L1_out234_U0_fifo_C_drain_out_V_V_write : STD_LOGIC;
    signal C_drain_IO_L1_out234_U0_fifo_C_drain_local_in_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L1_out234_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L1_out235_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L1_out235_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L1_out235_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L1_out235_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L1_out235_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L1_out235_U0_fifo_C_drain_in_V_V_read : STD_LOGIC;
    signal C_drain_IO_L1_out235_U0_fifo_C_drain_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L1_out235_U0_fifo_C_drain_out_V_V_write : STD_LOGIC;
    signal C_drain_IO_L1_out235_U0_fifo_C_drain_local_in_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L1_out235_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L1_out236_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L1_out236_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L1_out236_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L1_out236_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L1_out236_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L1_out236_U0_fifo_C_drain_in_V_V_read : STD_LOGIC;
    signal C_drain_IO_L1_out236_U0_fifo_C_drain_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L1_out236_U0_fifo_C_drain_out_V_V_write : STD_LOGIC;
    signal C_drain_IO_L1_out236_U0_fifo_C_drain_local_in_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L1_out236_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L1_out237_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L1_out237_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L1_out237_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L1_out237_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L1_out237_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L1_out237_U0_fifo_C_drain_in_V_V_read : STD_LOGIC;
    signal C_drain_IO_L1_out237_U0_fifo_C_drain_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L1_out237_U0_fifo_C_drain_out_V_V_write : STD_LOGIC;
    signal C_drain_IO_L1_out237_U0_fifo_C_drain_local_in_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L1_out237_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L1_out238_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L1_out238_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L1_out238_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L1_out238_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L1_out238_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L1_out238_U0_fifo_C_drain_in_V_V_read : STD_LOGIC;
    signal C_drain_IO_L1_out238_U0_fifo_C_drain_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L1_out238_U0_fifo_C_drain_out_V_V_write : STD_LOGIC;
    signal C_drain_IO_L1_out238_U0_fifo_C_drain_local_in_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L1_out238_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L1_out239_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L1_out239_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L1_out239_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L1_out239_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L1_out239_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L1_out239_U0_fifo_C_drain_in_V_V_read : STD_LOGIC;
    signal C_drain_IO_L1_out239_U0_fifo_C_drain_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L1_out239_U0_fifo_C_drain_out_V_V_write : STD_LOGIC;
    signal C_drain_IO_L1_out239_U0_fifo_C_drain_local_in_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L1_out239_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L1_out240_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L1_out240_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L1_out240_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L1_out240_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L1_out240_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L1_out240_U0_fifo_C_drain_in_V_V_read : STD_LOGIC;
    signal C_drain_IO_L1_out240_U0_fifo_C_drain_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L1_out240_U0_fifo_C_drain_out_V_V_write : STD_LOGIC;
    signal C_drain_IO_L1_out240_U0_fifo_C_drain_local_in_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L1_out240_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L1_out241_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L1_out241_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L1_out241_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L1_out241_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L1_out241_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L1_out241_U0_fifo_C_drain_in_V_V_read : STD_LOGIC;
    signal C_drain_IO_L1_out241_U0_fifo_C_drain_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L1_out241_U0_fifo_C_drain_out_V_V_write : STD_LOGIC;
    signal C_drain_IO_L1_out241_U0_fifo_C_drain_local_in_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L1_out241_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L1_out242_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L1_out242_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L1_out242_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L1_out242_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L1_out242_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L1_out242_U0_fifo_C_drain_in_V_V_read : STD_LOGIC;
    signal C_drain_IO_L1_out242_U0_fifo_C_drain_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L1_out242_U0_fifo_C_drain_out_V_V_write : STD_LOGIC;
    signal C_drain_IO_L1_out242_U0_fifo_C_drain_local_in_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L1_out242_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L1_out243_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L1_out243_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L1_out243_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L1_out243_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L1_out243_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L1_out243_U0_fifo_C_drain_in_V_V_read : STD_LOGIC;
    signal C_drain_IO_L1_out243_U0_fifo_C_drain_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L1_out243_U0_fifo_C_drain_out_V_V_write : STD_LOGIC;
    signal C_drain_IO_L1_out243_U0_fifo_C_drain_local_in_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L1_out243_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L1_out244_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L1_out244_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L1_out244_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L1_out244_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L1_out244_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L1_out244_U0_fifo_C_drain_in_V_V_read : STD_LOGIC;
    signal C_drain_IO_L1_out244_U0_fifo_C_drain_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L1_out244_U0_fifo_C_drain_out_V_V_write : STD_LOGIC;
    signal C_drain_IO_L1_out244_U0_fifo_C_drain_local_in_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L1_out244_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L1_out245_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L1_out245_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L1_out245_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L1_out245_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L1_out245_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L1_out245_U0_fifo_C_drain_in_V_V_read : STD_LOGIC;
    signal C_drain_IO_L1_out245_U0_fifo_C_drain_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L1_out245_U0_fifo_C_drain_out_V_V_write : STD_LOGIC;
    signal C_drain_IO_L1_out245_U0_fifo_C_drain_local_in_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L1_out245_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L1_out_boundary_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L1_out_boundary_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L1_out_boundary_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L1_out_boundary_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L1_out_boundary_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L1_out_boundary_U0_fifo_C_drain_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L1_out_boundary_U0_fifo_C_drain_out_V_V_write : STD_LOGIC;
    signal C_drain_IO_L1_out_boundary_U0_fifo_C_drain_local_in_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L1_out_boundary_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L1_out246_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L1_out246_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L1_out246_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L1_out246_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L1_out246_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L1_out246_U0_fifo_C_drain_in_V_V_read : STD_LOGIC;
    signal C_drain_IO_L1_out246_U0_fifo_C_drain_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L1_out246_U0_fifo_C_drain_out_V_V_write : STD_LOGIC;
    signal C_drain_IO_L1_out246_U0_fifo_C_drain_local_in_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L1_out246_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L1_out247_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L1_out247_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L1_out247_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L1_out247_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L1_out247_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L1_out247_U0_fifo_C_drain_in_V_V_read : STD_LOGIC;
    signal C_drain_IO_L1_out247_U0_fifo_C_drain_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L1_out247_U0_fifo_C_drain_out_V_V_write : STD_LOGIC;
    signal C_drain_IO_L1_out247_U0_fifo_C_drain_local_in_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L1_out247_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L1_out248_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L1_out248_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L1_out248_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L1_out248_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L1_out248_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L1_out248_U0_fifo_C_drain_in_V_V_read : STD_LOGIC;
    signal C_drain_IO_L1_out248_U0_fifo_C_drain_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L1_out248_U0_fifo_C_drain_out_V_V_write : STD_LOGIC;
    signal C_drain_IO_L1_out248_U0_fifo_C_drain_local_in_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L1_out248_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L1_out249_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L1_out249_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L1_out249_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L1_out249_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L1_out249_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L1_out249_U0_fifo_C_drain_in_V_V_read : STD_LOGIC;
    signal C_drain_IO_L1_out249_U0_fifo_C_drain_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L1_out249_U0_fifo_C_drain_out_V_V_write : STD_LOGIC;
    signal C_drain_IO_L1_out249_U0_fifo_C_drain_local_in_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L1_out249_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L1_out250_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L1_out250_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L1_out250_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L1_out250_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L1_out250_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L1_out250_U0_fifo_C_drain_in_V_V_read : STD_LOGIC;
    signal C_drain_IO_L1_out250_U0_fifo_C_drain_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L1_out250_U0_fifo_C_drain_out_V_V_write : STD_LOGIC;
    signal C_drain_IO_L1_out250_U0_fifo_C_drain_local_in_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L1_out250_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L1_out251_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L1_out251_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L1_out251_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L1_out251_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L1_out251_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L1_out251_U0_fifo_C_drain_in_V_V_read : STD_LOGIC;
    signal C_drain_IO_L1_out251_U0_fifo_C_drain_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L1_out251_U0_fifo_C_drain_out_V_V_write : STD_LOGIC;
    signal C_drain_IO_L1_out251_U0_fifo_C_drain_local_in_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L1_out251_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L1_out252_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L1_out252_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L1_out252_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L1_out252_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L1_out252_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L1_out252_U0_fifo_C_drain_in_V_V_read : STD_LOGIC;
    signal C_drain_IO_L1_out252_U0_fifo_C_drain_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L1_out252_U0_fifo_C_drain_out_V_V_write : STD_LOGIC;
    signal C_drain_IO_L1_out252_U0_fifo_C_drain_local_in_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L1_out252_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L1_out253_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L1_out253_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L1_out253_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L1_out253_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L1_out253_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L1_out253_U0_fifo_C_drain_in_V_V_read : STD_LOGIC;
    signal C_drain_IO_L1_out253_U0_fifo_C_drain_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L1_out253_U0_fifo_C_drain_out_V_V_write : STD_LOGIC;
    signal C_drain_IO_L1_out253_U0_fifo_C_drain_local_in_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L1_out253_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L1_out254_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L1_out254_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L1_out254_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L1_out254_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L1_out254_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L1_out254_U0_fifo_C_drain_in_V_V_read : STD_LOGIC;
    signal C_drain_IO_L1_out254_U0_fifo_C_drain_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L1_out254_U0_fifo_C_drain_out_V_V_write : STD_LOGIC;
    signal C_drain_IO_L1_out254_U0_fifo_C_drain_local_in_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L1_out254_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L1_out255_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L1_out255_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L1_out255_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L1_out255_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L1_out255_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L1_out255_U0_fifo_C_drain_in_V_V_read : STD_LOGIC;
    signal C_drain_IO_L1_out255_U0_fifo_C_drain_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L1_out255_U0_fifo_C_drain_out_V_V_write : STD_LOGIC;
    signal C_drain_IO_L1_out255_U0_fifo_C_drain_local_in_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L1_out255_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L1_out256_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L1_out256_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L1_out256_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L1_out256_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L1_out256_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L1_out256_U0_fifo_C_drain_in_V_V_read : STD_LOGIC;
    signal C_drain_IO_L1_out256_U0_fifo_C_drain_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L1_out256_U0_fifo_C_drain_out_V_V_write : STD_LOGIC;
    signal C_drain_IO_L1_out256_U0_fifo_C_drain_local_in_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L1_out256_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L1_out257_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L1_out257_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L1_out257_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L1_out257_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L1_out257_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L1_out257_U0_fifo_C_drain_in_V_V_read : STD_LOGIC;
    signal C_drain_IO_L1_out257_U0_fifo_C_drain_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L1_out257_U0_fifo_C_drain_out_V_V_write : STD_LOGIC;
    signal C_drain_IO_L1_out257_U0_fifo_C_drain_local_in_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L1_out257_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L2_out_boundary_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L2_out_boundary_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L2_out_boundary_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L2_out_boundary_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L2_out_boundary_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L2_out_boundary_U0_fifo_C_drain_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L2_out_boundary_U0_fifo_C_drain_out_V_V_write : STD_LOGIC;
    signal C_drain_IO_L2_out_boundary_U0_fifo_C_drain_local_in_V_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L2_out_boundary_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L2_out_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L2_out_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L2_out_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L2_out_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L2_out_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L2_out_U0_fifo_C_drain_in_V_V_read : STD_LOGIC;
    signal C_drain_IO_L2_out_U0_fifo_C_drain_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L2_out_U0_fifo_C_drain_out_V_V_write : STD_LOGIC;
    signal C_drain_IO_L2_out_U0_fifo_C_drain_local_in_V_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L2_out_U0_ap_start : STD_LOGIC := '0';
    signal C_drain_IO_L3_out_U0_ap_start : STD_LOGIC;
    signal C_drain_IO_L3_out_U0_ap_done : STD_LOGIC;
    signal C_drain_IO_L3_out_U0_ap_continue : STD_LOGIC;
    signal C_drain_IO_L3_out_U0_ap_idle : STD_LOGIC;
    signal C_drain_IO_L3_out_U0_ap_ready : STD_LOGIC;
    signal C_drain_IO_L3_out_U0_m_axi_C_V_AWVALID : STD_LOGIC;
    signal C_drain_IO_L3_out_U0_m_axi_C_V_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L3_out_U0_m_axi_C_V_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal C_drain_IO_L3_out_U0_m_axi_C_V_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal C_drain_IO_L3_out_U0_m_axi_C_V_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal C_drain_IO_L3_out_U0_m_axi_C_V_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal C_drain_IO_L3_out_U0_m_axi_C_V_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal C_drain_IO_L3_out_U0_m_axi_C_V_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal C_drain_IO_L3_out_U0_m_axi_C_V_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal C_drain_IO_L3_out_U0_m_axi_C_V_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal C_drain_IO_L3_out_U0_m_axi_C_V_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal C_drain_IO_L3_out_U0_m_axi_C_V_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal C_drain_IO_L3_out_U0_m_axi_C_V_WVALID : STD_LOGIC;
    signal C_drain_IO_L3_out_U0_m_axi_C_V_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal C_drain_IO_L3_out_U0_m_axi_C_V_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L3_out_U0_m_axi_C_V_WLAST : STD_LOGIC;
    signal C_drain_IO_L3_out_U0_m_axi_C_V_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal C_drain_IO_L3_out_U0_m_axi_C_V_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal C_drain_IO_L3_out_U0_m_axi_C_V_ARVALID : STD_LOGIC;
    signal C_drain_IO_L3_out_U0_m_axi_C_V_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal C_drain_IO_L3_out_U0_m_axi_C_V_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal C_drain_IO_L3_out_U0_m_axi_C_V_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal C_drain_IO_L3_out_U0_m_axi_C_V_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal C_drain_IO_L3_out_U0_m_axi_C_V_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal C_drain_IO_L3_out_U0_m_axi_C_V_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal C_drain_IO_L3_out_U0_m_axi_C_V_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal C_drain_IO_L3_out_U0_m_axi_C_V_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal C_drain_IO_L3_out_U0_m_axi_C_V_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal C_drain_IO_L3_out_U0_m_axi_C_V_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal C_drain_IO_L3_out_U0_m_axi_C_V_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal C_drain_IO_L3_out_U0_m_axi_C_V_RREADY : STD_LOGIC;
    signal C_drain_IO_L3_out_U0_m_axi_C_V_BREADY : STD_LOGIC;
    signal C_drain_IO_L3_out_U0_C_V_offset_read : STD_LOGIC;
    signal C_drain_IO_L3_out_U0_fifo_C_drain_local_in_V_V_read : STD_LOGIC;
    signal ap_sync_reg_C_drain_IO_L3_out_U0_ap_start : STD_LOGIC := '0';
    signal A_V_c_full_n : STD_LOGIC;
    signal A_V_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal A_V_c_empty_n : STD_LOGIC;
    signal B_V_c_full_n : STD_LOGIC;
    signal B_V_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal B_V_c_empty_n : STD_LOGIC;
    signal C_V_c_full_n : STD_LOGIC;
    signal C_V_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal C_V_c_empty_n : STD_LOGIC;
    signal fifo_A_A_IO_L2_in_0_V_V_full_n : STD_LOGIC;
    signal fifo_A_A_IO_L2_in_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_A_IO_L2_in_0_V_V_empty_n : STD_LOGIC;
    signal fifo_A_A_IO_L2_in_1_V_V_full_n : STD_LOGIC;
    signal fifo_A_A_IO_L2_in_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_A_IO_L2_in_1_V_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_0_0_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_0_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_0_0_V_V_empty_n : STD_LOGIC;
    signal fifo_A_A_IO_L2_in_2_V_V_full_n : STD_LOGIC;
    signal fifo_A_A_IO_L2_in_2_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_A_IO_L2_in_2_V_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_1_0_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_1_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_1_0_V_V_empty_n : STD_LOGIC;
    signal fifo_A_A_IO_L2_in_3_V_V_full_n : STD_LOGIC;
    signal fifo_A_A_IO_L2_in_3_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_A_IO_L2_in_3_V_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_2_0_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_2_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_2_0_V_V_empty_n : STD_LOGIC;
    signal fifo_A_A_IO_L2_in_4_V_V_full_n : STD_LOGIC;
    signal fifo_A_A_IO_L2_in_4_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_A_IO_L2_in_4_V_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_3_0_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_3_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_3_0_V_V_empty_n : STD_LOGIC;
    signal fifo_A_A_IO_L2_in_5_V_V_full_n : STD_LOGIC;
    signal fifo_A_A_IO_L2_in_5_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_A_IO_L2_in_5_V_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_4_0_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_4_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_4_0_V_V_empty_n : STD_LOGIC;
    signal fifo_A_A_IO_L2_in_6_V_V_full_n : STD_LOGIC;
    signal fifo_A_A_IO_L2_in_6_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_A_IO_L2_in_6_V_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_5_0_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_5_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_5_0_V_V_empty_n : STD_LOGIC;
    signal fifo_A_A_IO_L2_in_7_V_V_full_n : STD_LOGIC;
    signal fifo_A_A_IO_L2_in_7_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_A_IO_L2_in_7_V_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_6_0_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_6_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_6_0_V_V_empty_n : STD_LOGIC;
    signal fifo_A_A_IO_L2_in_8_V_V_full_n : STD_LOGIC;
    signal fifo_A_A_IO_L2_in_8_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_A_IO_L2_in_8_V_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_7_0_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_7_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_7_0_V_V_empty_n : STD_LOGIC;
    signal fifo_A_A_IO_L2_in_9_V_V_full_n : STD_LOGIC;
    signal fifo_A_A_IO_L2_in_9_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_A_IO_L2_in_9_V_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_8_0_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_8_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_8_0_V_V_empty_n : STD_LOGIC;
    signal fifo_A_A_IO_L2_in_10_V_V_full_n : STD_LOGIC;
    signal fifo_A_A_IO_L2_in_10_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_A_IO_L2_in_10_V_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_9_0_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_9_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_9_0_V_V_empty_n : STD_LOGIC;
    signal fifo_A_A_IO_L2_in_11_V_V_full_n : STD_LOGIC;
    signal fifo_A_A_IO_L2_in_11_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_A_IO_L2_in_11_V_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_10_0_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_10_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_10_0_V_V_empty_n : STD_LOGIC;
    signal fifo_A_A_IO_L2_in_12_V_V_full_n : STD_LOGIC;
    signal fifo_A_A_IO_L2_in_12_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_A_IO_L2_in_12_V_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_11_0_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_11_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_11_0_V_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_12_0_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_12_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_12_0_V_V_empty_n : STD_LOGIC;
    signal fifo_B_B_IO_L2_in_0_V_V_full_n : STD_LOGIC;
    signal fifo_B_B_IO_L2_in_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_B_IO_L2_in_0_V_V_empty_n : STD_LOGIC;
    signal fifo_B_B_IO_L2_in_1_V_V_full_n : STD_LOGIC;
    signal fifo_B_B_IO_L2_in_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_B_IO_L2_in_1_V_V_empty_n : STD_LOGIC;
    signal fifo_B_PE_0_0_V_V_full_n : STD_LOGIC;
    signal fifo_B_PE_0_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_PE_0_0_V_V_empty_n : STD_LOGIC;
    signal fifo_B_PE_0_1_V_V_full_n : STD_LOGIC;
    signal fifo_B_PE_0_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_PE_0_1_V_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_0_1_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_0_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_0_1_V_V_empty_n : STD_LOGIC;
    signal fifo_B_PE_1_0_V_V_full_n : STD_LOGIC;
    signal fifo_B_PE_1_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_PE_1_0_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_PE_0_0_V_full_n : STD_LOGIC;
    signal fifo_C_drain_PE_0_0_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal fifo_C_drain_PE_0_0_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_0_2_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_0_2_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_0_2_V_V_empty_n : STD_LOGIC;
    signal fifo_B_PE_1_1_V_V_full_n : STD_LOGIC;
    signal fifo_B_PE_1_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_PE_1_1_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_PE_0_1_V_full_n : STD_LOGIC;
    signal fifo_C_drain_PE_0_1_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal fifo_C_drain_PE_0_1_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_1_1_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_1_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_1_1_V_V_empty_n : STD_LOGIC;
    signal fifo_B_PE_2_0_V_V_full_n : STD_LOGIC;
    signal fifo_B_PE_2_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_PE_2_0_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_PE_1_0_V_full_n : STD_LOGIC;
    signal fifo_C_drain_PE_1_0_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal fifo_C_drain_PE_1_0_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_1_2_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_1_2_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_1_2_V_V_empty_n : STD_LOGIC;
    signal fifo_B_PE_2_1_V_V_full_n : STD_LOGIC;
    signal fifo_B_PE_2_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_PE_2_1_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_PE_1_1_V_full_n : STD_LOGIC;
    signal fifo_C_drain_PE_1_1_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal fifo_C_drain_PE_1_1_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_2_1_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_2_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_2_1_V_V_empty_n : STD_LOGIC;
    signal fifo_B_PE_3_0_V_V_full_n : STD_LOGIC;
    signal fifo_B_PE_3_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_PE_3_0_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_PE_2_0_V_full_n : STD_LOGIC;
    signal fifo_C_drain_PE_2_0_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal fifo_C_drain_PE_2_0_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_2_2_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_2_2_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_2_2_V_V_empty_n : STD_LOGIC;
    signal fifo_B_PE_3_1_V_V_full_n : STD_LOGIC;
    signal fifo_B_PE_3_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_PE_3_1_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_PE_2_1_V_full_n : STD_LOGIC;
    signal fifo_C_drain_PE_2_1_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal fifo_C_drain_PE_2_1_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_3_1_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_3_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_3_1_V_V_empty_n : STD_LOGIC;
    signal fifo_B_PE_4_0_V_V_full_n : STD_LOGIC;
    signal fifo_B_PE_4_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_PE_4_0_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_PE_3_0_V_full_n : STD_LOGIC;
    signal fifo_C_drain_PE_3_0_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal fifo_C_drain_PE_3_0_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_3_2_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_3_2_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_3_2_V_V_empty_n : STD_LOGIC;
    signal fifo_B_PE_4_1_V_V_full_n : STD_LOGIC;
    signal fifo_B_PE_4_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_PE_4_1_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_PE_3_1_V_full_n : STD_LOGIC;
    signal fifo_C_drain_PE_3_1_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal fifo_C_drain_PE_3_1_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_4_1_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_4_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_4_1_V_V_empty_n : STD_LOGIC;
    signal fifo_B_PE_5_0_V_V_full_n : STD_LOGIC;
    signal fifo_B_PE_5_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_PE_5_0_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_PE_4_0_V_full_n : STD_LOGIC;
    signal fifo_C_drain_PE_4_0_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal fifo_C_drain_PE_4_0_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_4_2_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_4_2_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_4_2_V_V_empty_n : STD_LOGIC;
    signal fifo_B_PE_5_1_V_V_full_n : STD_LOGIC;
    signal fifo_B_PE_5_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_PE_5_1_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_PE_4_1_V_full_n : STD_LOGIC;
    signal fifo_C_drain_PE_4_1_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal fifo_C_drain_PE_4_1_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_5_1_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_5_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_5_1_V_V_empty_n : STD_LOGIC;
    signal fifo_B_PE_6_0_V_V_full_n : STD_LOGIC;
    signal fifo_B_PE_6_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_PE_6_0_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_PE_5_0_V_full_n : STD_LOGIC;
    signal fifo_C_drain_PE_5_0_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal fifo_C_drain_PE_5_0_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_5_2_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_5_2_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_5_2_V_V_empty_n : STD_LOGIC;
    signal fifo_B_PE_6_1_V_V_full_n : STD_LOGIC;
    signal fifo_B_PE_6_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_PE_6_1_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_PE_5_1_V_full_n : STD_LOGIC;
    signal fifo_C_drain_PE_5_1_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal fifo_C_drain_PE_5_1_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_6_1_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_6_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_6_1_V_V_empty_n : STD_LOGIC;
    signal fifo_B_PE_7_0_V_V_full_n : STD_LOGIC;
    signal fifo_B_PE_7_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_PE_7_0_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_PE_6_0_V_full_n : STD_LOGIC;
    signal fifo_C_drain_PE_6_0_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal fifo_C_drain_PE_6_0_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_6_2_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_6_2_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_6_2_V_V_empty_n : STD_LOGIC;
    signal fifo_B_PE_7_1_V_V_full_n : STD_LOGIC;
    signal fifo_B_PE_7_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_PE_7_1_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_PE_6_1_V_full_n : STD_LOGIC;
    signal fifo_C_drain_PE_6_1_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal fifo_C_drain_PE_6_1_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_7_1_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_7_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_7_1_V_V_empty_n : STD_LOGIC;
    signal fifo_B_PE_8_0_V_V_full_n : STD_LOGIC;
    signal fifo_B_PE_8_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_PE_8_0_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_PE_7_0_V_full_n : STD_LOGIC;
    signal fifo_C_drain_PE_7_0_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal fifo_C_drain_PE_7_0_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_7_2_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_7_2_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_7_2_V_V_empty_n : STD_LOGIC;
    signal fifo_B_PE_8_1_V_V_full_n : STD_LOGIC;
    signal fifo_B_PE_8_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_PE_8_1_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_PE_7_1_V_full_n : STD_LOGIC;
    signal fifo_C_drain_PE_7_1_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal fifo_C_drain_PE_7_1_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_8_1_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_8_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_8_1_V_V_empty_n : STD_LOGIC;
    signal fifo_B_PE_9_0_V_V_full_n : STD_LOGIC;
    signal fifo_B_PE_9_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_PE_9_0_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_PE_8_0_V_full_n : STD_LOGIC;
    signal fifo_C_drain_PE_8_0_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal fifo_C_drain_PE_8_0_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_8_2_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_8_2_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_8_2_V_V_empty_n : STD_LOGIC;
    signal fifo_B_PE_9_1_V_V_full_n : STD_LOGIC;
    signal fifo_B_PE_9_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_PE_9_1_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_PE_8_1_V_full_n : STD_LOGIC;
    signal fifo_C_drain_PE_8_1_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal fifo_C_drain_PE_8_1_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_9_1_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_9_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_9_1_V_V_empty_n : STD_LOGIC;
    signal fifo_B_PE_10_0_V_V_full_n : STD_LOGIC;
    signal fifo_B_PE_10_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_PE_10_0_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_PE_9_0_V_full_n : STD_LOGIC;
    signal fifo_C_drain_PE_9_0_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal fifo_C_drain_PE_9_0_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_9_2_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_9_2_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_9_2_V_V_empty_n : STD_LOGIC;
    signal fifo_B_PE_10_1_V_V_full_n : STD_LOGIC;
    signal fifo_B_PE_10_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_PE_10_1_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_PE_9_1_V_full_n : STD_LOGIC;
    signal fifo_C_drain_PE_9_1_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal fifo_C_drain_PE_9_1_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_10_1_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_10_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_10_1_V_V_empty_n : STD_LOGIC;
    signal fifo_B_PE_11_0_V_V_full_n : STD_LOGIC;
    signal fifo_B_PE_11_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_PE_11_0_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_PE_10_0_V_full_n : STD_LOGIC;
    signal fifo_C_drain_PE_10_0_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal fifo_C_drain_PE_10_0_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_10_2_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_10_2_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_10_2_V_V_empty_n : STD_LOGIC;
    signal fifo_B_PE_11_1_V_V_full_n : STD_LOGIC;
    signal fifo_B_PE_11_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_PE_11_1_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_PE_10_1_V_full_n : STD_LOGIC;
    signal fifo_C_drain_PE_10_1_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal fifo_C_drain_PE_10_1_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_11_1_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_11_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_11_1_V_V_empty_n : STD_LOGIC;
    signal fifo_B_PE_12_0_V_V_full_n : STD_LOGIC;
    signal fifo_B_PE_12_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_PE_12_0_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_PE_11_0_V_full_n : STD_LOGIC;
    signal fifo_C_drain_PE_11_0_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal fifo_C_drain_PE_11_0_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_11_2_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_11_2_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_11_2_V_V_empty_n : STD_LOGIC;
    signal fifo_B_PE_12_1_V_V_full_n : STD_LOGIC;
    signal fifo_B_PE_12_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_PE_12_1_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_PE_11_1_V_full_n : STD_LOGIC;
    signal fifo_C_drain_PE_11_1_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal fifo_C_drain_PE_11_1_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_12_1_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_12_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_12_1_V_V_empty_n : STD_LOGIC;
    signal fifo_B_PE_13_0_V_V_full_n : STD_LOGIC;
    signal fifo_B_PE_13_0_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_PE_13_0_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_PE_12_0_V_full_n : STD_LOGIC;
    signal fifo_C_drain_PE_12_0_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal fifo_C_drain_PE_12_0_V_empty_n : STD_LOGIC;
    signal fifo_A_PE_12_2_V_V_full_n : STD_LOGIC;
    signal fifo_A_PE_12_2_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_A_PE_12_2_V_V_empty_n : STD_LOGIC;
    signal fifo_B_PE_13_1_V_V_full_n : STD_LOGIC;
    signal fifo_B_PE_13_1_V_V_dout : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_B_PE_13_1_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_PE_12_1_V_full_n : STD_LOGIC;
    signal fifo_C_drain_PE_12_1_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal fifo_C_drain_PE_12_1_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_0_12_V_V_full_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_0_12_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_0_12_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_0_11_V_V_full_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_0_11_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_0_11_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_0_10_V_V_full_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_0_10_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_0_10_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_0_9_V_V_full_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_0_9_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_0_9_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_0_8_V_V_full_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_0_8_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_0_8_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_0_7_V_V_full_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_0_7_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_0_7_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_0_6_V_V_full_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_0_6_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_0_6_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_0_5_V_V_full_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_0_5_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_0_5_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_0_4_V_V_full_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_0_4_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_0_4_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_0_3_V_V_full_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_0_3_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_0_3_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_0_2_V_V_full_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_0_2_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_0_2_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_0_1_V_V_full_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_0_1_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_0_1_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_0_0_V_V_full_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_0_0_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_0_0_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_1_12_V_V_full_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_1_12_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_1_12_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_1_11_V_V_full_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_1_11_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_1_11_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_1_10_V_V_full_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_1_10_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_1_10_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_1_9_V_V_full_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_1_9_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_1_9_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_1_8_V_V_full_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_1_8_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_1_8_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_1_7_V_V_full_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_1_7_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_1_7_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_1_6_V_V_full_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_1_6_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_1_6_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_1_5_V_V_full_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_1_5_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_1_5_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_1_4_V_V_full_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_1_4_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_1_4_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_1_3_V_V_full_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_1_3_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_1_3_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_1_2_V_V_full_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_1_2_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_1_2_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_1_1_V_V_full_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_1_1_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_1_1_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_1_0_V_V_full_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L1_out_1_0_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_C_drain_C_drain_IO_L1_out_1_0_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L2_out_1_V_V_full_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L2_out_1_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_C_drain_C_drain_IO_L2_out_1_V_V_empty_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L2_out_0_V_V_full_n : STD_LOGIC;
    signal fifo_C_drain_C_drain_IO_L2_out_0_V_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_C_drain_C_drain_IO_L2_out_0_V_V_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_kernel3_entry14_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_kernel3_entry14_U0_ap_ready : STD_LOGIC;
    signal kernel3_entry14_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_A_IO_L3_in_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_A_IO_L3_in_U0_ap_ready : STD_LOGIC;
    signal A_IO_L3_in_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_B_IO_L3_in_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_B_IO_L3_in_U0_ap_ready : STD_LOGIC;
    signal B_IO_L3_in_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";

    component kernel3_kernel3_entry14 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        A_V : IN STD_LOGIC_VECTOR (63 downto 0);
        B_V : IN STD_LOGIC_VECTOR (63 downto 0);
        C_V : IN STD_LOGIC_VECTOR (63 downto 0);
        A_V_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        A_V_out_full_n : IN STD_LOGIC;
        A_V_out_write : OUT STD_LOGIC;
        B_V_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        B_V_out_full_n : IN STD_LOGIC;
        B_V_out_write : OUT STD_LOGIC;
        C_V_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        C_V_out_full_n : IN STD_LOGIC;
        C_V_out_write : OUT STD_LOGIC );
    end component;


    component kernel3_A_IO_L3_in IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_A_V_AWVALID : OUT STD_LOGIC;
        m_axi_A_V_AWREADY : IN STD_LOGIC;
        m_axi_A_V_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_A_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_A_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_A_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_A_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_A_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_A_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_A_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_A_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_A_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_A_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_A_V_WVALID : OUT STD_LOGIC;
        m_axi_A_V_WREADY : IN STD_LOGIC;
        m_axi_A_V_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_A_V_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_A_V_WLAST : OUT STD_LOGIC;
        m_axi_A_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_A_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_A_V_ARVALID : OUT STD_LOGIC;
        m_axi_A_V_ARREADY : IN STD_LOGIC;
        m_axi_A_V_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_A_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_A_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_A_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_A_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_A_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_A_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_A_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_A_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_A_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_A_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_A_V_RVALID : IN STD_LOGIC;
        m_axi_A_V_RREADY : OUT STD_LOGIC;
        m_axi_A_V_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_A_V_RLAST : IN STD_LOGIC;
        m_axi_A_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_A_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_A_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_A_V_BVALID : IN STD_LOGIC;
        m_axi_A_V_BREADY : OUT STD_LOGIC;
        m_axi_A_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_A_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_A_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        A_V_offset_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        A_V_offset_empty_n : IN STD_LOGIC;
        A_V_offset_read : OUT STD_LOGIC;
        fifo_A_local_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_local_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_local_out_V_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_A_IO_L2_in208 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_A_local_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_local_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_local_out_V_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_A_IO_L2_in209 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_A_local_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_local_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_local_out_V_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_A_IO_L2_in210 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_A_local_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_local_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_local_out_V_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_A_IO_L2_in211 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_A_local_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_local_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_local_out_V_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_A_IO_L2_in212 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_A_local_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_local_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_local_out_V_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_A_IO_L2_in213 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_A_local_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_local_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_local_out_V_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_A_IO_L2_in214 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_A_local_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_local_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_local_out_V_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_A_IO_L2_in215 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_A_local_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_local_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_local_out_V_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_A_IO_L2_in216 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_A_local_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_local_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_local_out_V_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_A_IO_L2_in217 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_A_local_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_local_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_local_out_V_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_A_IO_L2_in218 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_A_local_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_local_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_local_out_V_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_A_IO_L2_in219 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_A_local_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_local_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_local_out_V_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_A_IO_L2_in_boundary IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_local_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_local_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_local_out_V_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_B_IO_L3_in IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_B_V_AWVALID : OUT STD_LOGIC;
        m_axi_B_V_AWREADY : IN STD_LOGIC;
        m_axi_B_V_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_B_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_B_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_B_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_B_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_B_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_B_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_B_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_B_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_B_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_B_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_B_V_WVALID : OUT STD_LOGIC;
        m_axi_B_V_WREADY : IN STD_LOGIC;
        m_axi_B_V_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_B_V_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_B_V_WLAST : OUT STD_LOGIC;
        m_axi_B_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_B_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_B_V_ARVALID : OUT STD_LOGIC;
        m_axi_B_V_ARREADY : IN STD_LOGIC;
        m_axi_B_V_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_B_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_B_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_B_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_B_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_B_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_B_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_B_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_B_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_B_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_B_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_B_V_RVALID : IN STD_LOGIC;
        m_axi_B_V_RREADY : OUT STD_LOGIC;
        m_axi_B_V_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_B_V_RLAST : IN STD_LOGIC;
        m_axi_B_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_B_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_B_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_B_V_BVALID : IN STD_LOGIC;
        m_axi_B_V_BREADY : OUT STD_LOGIC;
        m_axi_B_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_B_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_B_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        B_V_offset_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        B_V_offset_empty_n : IN STD_LOGIC;
        B_V_offset_read : OUT STD_LOGIC;
        fifo_B_local_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_local_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_local_out_V_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_B_IO_L2_in IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC;
        fifo_B_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_out_V_V_write : OUT STD_LOGIC;
        fifo_B_local_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_local_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_local_out_V_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_B_IO_L2_in_boundary IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC;
        fifo_B_local_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_local_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_local_out_V_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_PE_wrapper_0_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC;
        fifo_B_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_out_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_PE_wrapper_0_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC;
        fifo_B_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_out_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_PE_wrapper_1_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC;
        fifo_B_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_out_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_PE_wrapper_1_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC;
        fifo_B_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_out_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_PE_wrapper_2_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC;
        fifo_B_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_out_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_PE_wrapper_2_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC;
        fifo_B_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_out_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_PE_wrapper_3_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC;
        fifo_B_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_out_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_PE_wrapper_3_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC;
        fifo_B_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_out_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_PE_wrapper_4_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC;
        fifo_B_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_out_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_PE_wrapper_4_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC;
        fifo_B_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_out_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_PE_wrapper_5_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC;
        fifo_B_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_out_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_PE_wrapper_5_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC;
        fifo_B_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_out_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_PE_wrapper_6_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC;
        fifo_B_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_out_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_PE_wrapper_6_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC;
        fifo_B_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_out_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_PE_wrapper_7_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC;
        fifo_B_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_out_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_PE_wrapper_7_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC;
        fifo_B_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_out_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_PE_wrapper_8_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC;
        fifo_B_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_out_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_PE_wrapper_8_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC;
        fifo_B_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_out_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_PE_wrapper_9_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC;
        fifo_B_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_out_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_PE_wrapper_9_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC;
        fifo_B_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_out_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_PE_wrapper_10_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC;
        fifo_B_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_out_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_PE_wrapper_10_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC;
        fifo_B_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_out_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_PE_wrapper_11_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC;
        fifo_B_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_out_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_PE_wrapper_11_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC;
        fifo_B_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_out_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_PE_wrapper_12_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC;
        fifo_B_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_out_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_PE_wrapper_12_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC;
        fifo_B_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_out_V_V_full_n : IN STD_LOGIC;
        fifo_B_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_out_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_out_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_write : OUT STD_LOGIC );
    end component;


    component kernel3_A_PE_dummy220 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_A_PE_dummy221 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_A_PE_dummy222 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_A_PE_dummy223 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_A_PE_dummy224 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_A_PE_dummy225 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_A_PE_dummy226 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_A_PE_dummy227 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_A_PE_dummy228 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_A_PE_dummy229 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_A_PE_dummy230 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_A_PE_dummy231 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_A_PE_dummy IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_B_PE_dummy232 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_B_PE_dummy IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        fifo_B_in_V_V_empty_n : IN STD_LOGIC;
        fifo_B_in_V_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L1_out_boundary233 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L1_out234 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_C_drain_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_in_V_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_in_V_V_read : OUT STD_LOGIC;
        fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L1_out235 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_C_drain_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_in_V_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_in_V_V_read : OUT STD_LOGIC;
        fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L1_out236 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_C_drain_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_in_V_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_in_V_V_read : OUT STD_LOGIC;
        fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L1_out237 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_C_drain_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_in_V_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_in_V_V_read : OUT STD_LOGIC;
        fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L1_out238 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_C_drain_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_in_V_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_in_V_V_read : OUT STD_LOGIC;
        fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L1_out239 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_C_drain_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_in_V_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_in_V_V_read : OUT STD_LOGIC;
        fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L1_out240 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_C_drain_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_in_V_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_in_V_V_read : OUT STD_LOGIC;
        fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L1_out241 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_C_drain_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_in_V_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_in_V_V_read : OUT STD_LOGIC;
        fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L1_out242 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_C_drain_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_in_V_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_in_V_V_read : OUT STD_LOGIC;
        fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L1_out243 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_C_drain_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_in_V_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_in_V_V_read : OUT STD_LOGIC;
        fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L1_out244 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_C_drain_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_in_V_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_in_V_V_read : OUT STD_LOGIC;
        fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L1_out245 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_C_drain_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_in_V_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_in_V_V_read : OUT STD_LOGIC;
        fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L1_out_boundary IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L1_out246 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_C_drain_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_in_V_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_in_V_V_read : OUT STD_LOGIC;
        fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L1_out247 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_C_drain_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_in_V_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_in_V_V_read : OUT STD_LOGIC;
        fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L1_out248 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_C_drain_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_in_V_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_in_V_V_read : OUT STD_LOGIC;
        fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L1_out249 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_C_drain_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_in_V_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_in_V_V_read : OUT STD_LOGIC;
        fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L1_out250 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_C_drain_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_in_V_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_in_V_V_read : OUT STD_LOGIC;
        fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L1_out251 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_C_drain_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_in_V_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_in_V_V_read : OUT STD_LOGIC;
        fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L1_out252 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_C_drain_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_in_V_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_in_V_V_read : OUT STD_LOGIC;
        fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L1_out253 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_C_drain_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_in_V_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_in_V_V_read : OUT STD_LOGIC;
        fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L1_out254 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_C_drain_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_in_V_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_in_V_V_read : OUT STD_LOGIC;
        fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L1_out255 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_C_drain_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_in_V_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_in_V_V_read : OUT STD_LOGIC;
        fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L1_out256 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_C_drain_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_in_V_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_in_V_V_read : OUT STD_LOGIC;
        fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L1_out257 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_C_drain_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_in_V_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_in_V_V_read : OUT STD_LOGIC;
        fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L2_out_boundary IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_local_in_V_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L2_out IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fifo_C_drain_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_in_V_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_in_V_V_read : OUT STD_LOGIC;
        fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
        fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_local_in_V_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_C_drain_IO_L3_out IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_C_V_AWVALID : OUT STD_LOGIC;
        m_axi_C_V_AWREADY : IN STD_LOGIC;
        m_axi_C_V_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_C_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_C_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_C_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_C_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_C_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_C_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_C_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_C_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_C_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_C_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_C_V_WVALID : OUT STD_LOGIC;
        m_axi_C_V_WREADY : IN STD_LOGIC;
        m_axi_C_V_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_C_V_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_C_V_WLAST : OUT STD_LOGIC;
        m_axi_C_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_C_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_C_V_ARVALID : OUT STD_LOGIC;
        m_axi_C_V_ARREADY : IN STD_LOGIC;
        m_axi_C_V_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_C_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_C_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_C_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_C_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_C_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_C_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_C_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_C_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_C_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_C_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_C_V_RVALID : IN STD_LOGIC;
        m_axi_C_V_RREADY : OUT STD_LOGIC;
        m_axi_C_V_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_C_V_RLAST : IN STD_LOGIC;
        m_axi_C_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_C_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_C_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_C_V_BVALID : IN STD_LOGIC;
        m_axi_C_V_BREADY : OUT STD_LOGIC;
        m_axi_C_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_C_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_C_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        C_V_offset_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        C_V_offset_empty_n : IN STD_LOGIC;
        C_V_offset_read : OUT STD_LOGIC;
        fifo_C_drain_local_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        fifo_C_drain_local_in_V_V_empty_n : IN STD_LOGIC;
        fifo_C_drain_local_in_V_V_read : OUT STD_LOGIC );
    end component;


    component kernel3_fifo_w64_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component kernel3_fifo_w64_d33_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component kernel3_fifo_w256_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (255 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (255 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component kernel3_fifo_w32_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component kernel3_kernel3_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        A_V : OUT STD_LOGIC_VECTOR (63 downto 0);
        B_V : OUT STD_LOGIC_VECTOR (63 downto 0);
        C_V : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component kernel3_kernel3_gmem_A_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component kernel3_kernel3_gmem_B_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component kernel3_kernel3_gmem_C_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    kernel3_control_s_axi_U : component kernel3_kernel3_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        A_V => A_V,
        B_V => B_V,
        C_V => C_V);

    kernel3_gmem_A_m_axi_U : component kernel3_kernel3_gmem_A_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_DW => 512,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_A_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_A_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_A_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_A_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_A_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_A_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_A_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_A_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_A_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_A_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_A_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem_A_AWVALID,
        AWREADY => m_axi_gmem_A_AWREADY,
        AWADDR => m_axi_gmem_A_AWADDR,
        AWID => m_axi_gmem_A_AWID,
        AWLEN => m_axi_gmem_A_AWLEN,
        AWSIZE => m_axi_gmem_A_AWSIZE,
        AWBURST => m_axi_gmem_A_AWBURST,
        AWLOCK => m_axi_gmem_A_AWLOCK,
        AWCACHE => m_axi_gmem_A_AWCACHE,
        AWPROT => m_axi_gmem_A_AWPROT,
        AWQOS => m_axi_gmem_A_AWQOS,
        AWREGION => m_axi_gmem_A_AWREGION,
        AWUSER => m_axi_gmem_A_AWUSER,
        WVALID => m_axi_gmem_A_WVALID,
        WREADY => m_axi_gmem_A_WREADY,
        WDATA => m_axi_gmem_A_WDATA,
        WSTRB => m_axi_gmem_A_WSTRB,
        WLAST => m_axi_gmem_A_WLAST,
        WID => m_axi_gmem_A_WID,
        WUSER => m_axi_gmem_A_WUSER,
        ARVALID => m_axi_gmem_A_ARVALID,
        ARREADY => m_axi_gmem_A_ARREADY,
        ARADDR => m_axi_gmem_A_ARADDR,
        ARID => m_axi_gmem_A_ARID,
        ARLEN => m_axi_gmem_A_ARLEN,
        ARSIZE => m_axi_gmem_A_ARSIZE,
        ARBURST => m_axi_gmem_A_ARBURST,
        ARLOCK => m_axi_gmem_A_ARLOCK,
        ARCACHE => m_axi_gmem_A_ARCACHE,
        ARPROT => m_axi_gmem_A_ARPROT,
        ARQOS => m_axi_gmem_A_ARQOS,
        ARREGION => m_axi_gmem_A_ARREGION,
        ARUSER => m_axi_gmem_A_ARUSER,
        RVALID => m_axi_gmem_A_RVALID,
        RREADY => m_axi_gmem_A_RREADY,
        RDATA => m_axi_gmem_A_RDATA,
        RLAST => m_axi_gmem_A_RLAST,
        RID => m_axi_gmem_A_RID,
        RUSER => m_axi_gmem_A_RUSER,
        RRESP => m_axi_gmem_A_RRESP,
        BVALID => m_axi_gmem_A_BVALID,
        BREADY => m_axi_gmem_A_BREADY,
        BRESP => m_axi_gmem_A_BRESP,
        BID => m_axi_gmem_A_BID,
        BUSER => m_axi_gmem_A_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => A_IO_L3_in_U0_m_axi_A_V_ARVALID,
        I_ARREADY => gmem_A_ARREADY,
        I_ARADDR => A_IO_L3_in_U0_m_axi_A_V_ARADDR,
        I_ARID => A_IO_L3_in_U0_m_axi_A_V_ARID,
        I_ARLEN => A_IO_L3_in_U0_m_axi_A_V_ARLEN,
        I_ARSIZE => A_IO_L3_in_U0_m_axi_A_V_ARSIZE,
        I_ARLOCK => A_IO_L3_in_U0_m_axi_A_V_ARLOCK,
        I_ARCACHE => A_IO_L3_in_U0_m_axi_A_V_ARCACHE,
        I_ARQOS => A_IO_L3_in_U0_m_axi_A_V_ARQOS,
        I_ARPROT => A_IO_L3_in_U0_m_axi_A_V_ARPROT,
        I_ARUSER => A_IO_L3_in_U0_m_axi_A_V_ARUSER,
        I_ARBURST => A_IO_L3_in_U0_m_axi_A_V_ARBURST,
        I_ARREGION => A_IO_L3_in_U0_m_axi_A_V_ARREGION,
        I_RVALID => gmem_A_RVALID,
        I_RREADY => A_IO_L3_in_U0_m_axi_A_V_RREADY,
        I_RDATA => gmem_A_RDATA,
        I_RID => gmem_A_RID,
        I_RUSER => gmem_A_RUSER,
        I_RRESP => gmem_A_RRESP,
        I_RLAST => gmem_A_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem_A_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem_A_WREADY,
        I_WDATA => ap_const_lv512_lc_1,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv64_0,
        I_BVALID => gmem_A_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => gmem_A_BRESP,
        I_BID => gmem_A_BID,
        I_BUSER => gmem_A_BUSER);

    kernel3_gmem_B_m_axi_U : component kernel3_kernel3_gmem_B_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_DW => 512,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_B_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_B_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_B_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_B_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_B_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_B_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_B_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_B_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_B_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_B_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_B_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem_B_AWVALID,
        AWREADY => m_axi_gmem_B_AWREADY,
        AWADDR => m_axi_gmem_B_AWADDR,
        AWID => m_axi_gmem_B_AWID,
        AWLEN => m_axi_gmem_B_AWLEN,
        AWSIZE => m_axi_gmem_B_AWSIZE,
        AWBURST => m_axi_gmem_B_AWBURST,
        AWLOCK => m_axi_gmem_B_AWLOCK,
        AWCACHE => m_axi_gmem_B_AWCACHE,
        AWPROT => m_axi_gmem_B_AWPROT,
        AWQOS => m_axi_gmem_B_AWQOS,
        AWREGION => m_axi_gmem_B_AWREGION,
        AWUSER => m_axi_gmem_B_AWUSER,
        WVALID => m_axi_gmem_B_WVALID,
        WREADY => m_axi_gmem_B_WREADY,
        WDATA => m_axi_gmem_B_WDATA,
        WSTRB => m_axi_gmem_B_WSTRB,
        WLAST => m_axi_gmem_B_WLAST,
        WID => m_axi_gmem_B_WID,
        WUSER => m_axi_gmem_B_WUSER,
        ARVALID => m_axi_gmem_B_ARVALID,
        ARREADY => m_axi_gmem_B_ARREADY,
        ARADDR => m_axi_gmem_B_ARADDR,
        ARID => m_axi_gmem_B_ARID,
        ARLEN => m_axi_gmem_B_ARLEN,
        ARSIZE => m_axi_gmem_B_ARSIZE,
        ARBURST => m_axi_gmem_B_ARBURST,
        ARLOCK => m_axi_gmem_B_ARLOCK,
        ARCACHE => m_axi_gmem_B_ARCACHE,
        ARPROT => m_axi_gmem_B_ARPROT,
        ARQOS => m_axi_gmem_B_ARQOS,
        ARREGION => m_axi_gmem_B_ARREGION,
        ARUSER => m_axi_gmem_B_ARUSER,
        RVALID => m_axi_gmem_B_RVALID,
        RREADY => m_axi_gmem_B_RREADY,
        RDATA => m_axi_gmem_B_RDATA,
        RLAST => m_axi_gmem_B_RLAST,
        RID => m_axi_gmem_B_RID,
        RUSER => m_axi_gmem_B_RUSER,
        RRESP => m_axi_gmem_B_RRESP,
        BVALID => m_axi_gmem_B_BVALID,
        BREADY => m_axi_gmem_B_BREADY,
        BRESP => m_axi_gmem_B_BRESP,
        BID => m_axi_gmem_B_BID,
        BUSER => m_axi_gmem_B_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => B_IO_L3_in_U0_m_axi_B_V_ARVALID,
        I_ARREADY => gmem_B_ARREADY,
        I_ARADDR => B_IO_L3_in_U0_m_axi_B_V_ARADDR,
        I_ARID => B_IO_L3_in_U0_m_axi_B_V_ARID,
        I_ARLEN => B_IO_L3_in_U0_m_axi_B_V_ARLEN,
        I_ARSIZE => B_IO_L3_in_U0_m_axi_B_V_ARSIZE,
        I_ARLOCK => B_IO_L3_in_U0_m_axi_B_V_ARLOCK,
        I_ARCACHE => B_IO_L3_in_U0_m_axi_B_V_ARCACHE,
        I_ARQOS => B_IO_L3_in_U0_m_axi_B_V_ARQOS,
        I_ARPROT => B_IO_L3_in_U0_m_axi_B_V_ARPROT,
        I_ARUSER => B_IO_L3_in_U0_m_axi_B_V_ARUSER,
        I_ARBURST => B_IO_L3_in_U0_m_axi_B_V_ARBURST,
        I_ARREGION => B_IO_L3_in_U0_m_axi_B_V_ARREGION,
        I_RVALID => gmem_B_RVALID,
        I_RREADY => B_IO_L3_in_U0_m_axi_B_V_RREADY,
        I_RDATA => gmem_B_RDATA,
        I_RID => gmem_B_RID,
        I_RUSER => gmem_B_RUSER,
        I_RRESP => gmem_B_RRESP,
        I_RLAST => gmem_B_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem_B_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem_B_WREADY,
        I_WDATA => ap_const_lv512_lc_1,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv64_0,
        I_BVALID => gmem_B_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => gmem_B_BRESP,
        I_BID => gmem_B_BID,
        I_BUSER => gmem_B_BUSER);

    kernel3_gmem_C_m_axi_U : component kernel3_kernel3_gmem_C_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_DW => 512,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_C_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_C_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_C_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_C_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_C_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_C_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_C_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_C_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_C_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_C_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_C_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem_C_AWVALID,
        AWREADY => m_axi_gmem_C_AWREADY,
        AWADDR => m_axi_gmem_C_AWADDR,
        AWID => m_axi_gmem_C_AWID,
        AWLEN => m_axi_gmem_C_AWLEN,
        AWSIZE => m_axi_gmem_C_AWSIZE,
        AWBURST => m_axi_gmem_C_AWBURST,
        AWLOCK => m_axi_gmem_C_AWLOCK,
        AWCACHE => m_axi_gmem_C_AWCACHE,
        AWPROT => m_axi_gmem_C_AWPROT,
        AWQOS => m_axi_gmem_C_AWQOS,
        AWREGION => m_axi_gmem_C_AWREGION,
        AWUSER => m_axi_gmem_C_AWUSER,
        WVALID => m_axi_gmem_C_WVALID,
        WREADY => m_axi_gmem_C_WREADY,
        WDATA => m_axi_gmem_C_WDATA,
        WSTRB => m_axi_gmem_C_WSTRB,
        WLAST => m_axi_gmem_C_WLAST,
        WID => m_axi_gmem_C_WID,
        WUSER => m_axi_gmem_C_WUSER,
        ARVALID => m_axi_gmem_C_ARVALID,
        ARREADY => m_axi_gmem_C_ARREADY,
        ARADDR => m_axi_gmem_C_ARADDR,
        ARID => m_axi_gmem_C_ARID,
        ARLEN => m_axi_gmem_C_ARLEN,
        ARSIZE => m_axi_gmem_C_ARSIZE,
        ARBURST => m_axi_gmem_C_ARBURST,
        ARLOCK => m_axi_gmem_C_ARLOCK,
        ARCACHE => m_axi_gmem_C_ARCACHE,
        ARPROT => m_axi_gmem_C_ARPROT,
        ARQOS => m_axi_gmem_C_ARQOS,
        ARREGION => m_axi_gmem_C_ARREGION,
        ARUSER => m_axi_gmem_C_ARUSER,
        RVALID => m_axi_gmem_C_RVALID,
        RREADY => m_axi_gmem_C_RREADY,
        RDATA => m_axi_gmem_C_RDATA,
        RLAST => m_axi_gmem_C_RLAST,
        RID => m_axi_gmem_C_RID,
        RUSER => m_axi_gmem_C_RUSER,
        RRESP => m_axi_gmem_C_RRESP,
        BVALID => m_axi_gmem_C_BVALID,
        BREADY => m_axi_gmem_C_BREADY,
        BRESP => m_axi_gmem_C_BRESP,
        BID => m_axi_gmem_C_BID,
        BUSER => m_axi_gmem_C_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ap_const_logic_0,
        I_ARREADY => gmem_C_ARREADY,
        I_ARADDR => ap_const_lv64_0,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_0,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => gmem_C_RVALID,
        I_RREADY => ap_const_logic_0,
        I_RDATA => gmem_C_RDATA,
        I_RID => gmem_C_RID,
        I_RUSER => gmem_C_RUSER,
        I_RRESP => gmem_C_RRESP,
        I_RLAST => gmem_C_RLAST,
        I_AWVALID => C_drain_IO_L3_out_U0_m_axi_C_V_AWVALID,
        I_AWREADY => gmem_C_AWREADY,
        I_AWADDR => C_drain_IO_L3_out_U0_m_axi_C_V_AWADDR,
        I_AWID => C_drain_IO_L3_out_U0_m_axi_C_V_AWID,
        I_AWLEN => C_drain_IO_L3_out_U0_m_axi_C_V_AWLEN,
        I_AWSIZE => C_drain_IO_L3_out_U0_m_axi_C_V_AWSIZE,
        I_AWLOCK => C_drain_IO_L3_out_U0_m_axi_C_V_AWLOCK,
        I_AWCACHE => C_drain_IO_L3_out_U0_m_axi_C_V_AWCACHE,
        I_AWQOS => C_drain_IO_L3_out_U0_m_axi_C_V_AWQOS,
        I_AWPROT => C_drain_IO_L3_out_U0_m_axi_C_V_AWPROT,
        I_AWUSER => C_drain_IO_L3_out_U0_m_axi_C_V_AWUSER,
        I_AWBURST => C_drain_IO_L3_out_U0_m_axi_C_V_AWBURST,
        I_AWREGION => C_drain_IO_L3_out_U0_m_axi_C_V_AWREGION,
        I_WVALID => C_drain_IO_L3_out_U0_m_axi_C_V_WVALID,
        I_WREADY => gmem_C_WREADY,
        I_WDATA => C_drain_IO_L3_out_U0_m_axi_C_V_WDATA,
        I_WID => C_drain_IO_L3_out_U0_m_axi_C_V_WID,
        I_WUSER => C_drain_IO_L3_out_U0_m_axi_C_V_WUSER,
        I_WLAST => C_drain_IO_L3_out_U0_m_axi_C_V_WLAST,
        I_WSTRB => C_drain_IO_L3_out_U0_m_axi_C_V_WSTRB,
        I_BVALID => gmem_C_BVALID,
        I_BREADY => C_drain_IO_L3_out_U0_m_axi_C_V_BREADY,
        I_BRESP => gmem_C_BRESP,
        I_BID => gmem_C_BID,
        I_BUSER => gmem_C_BUSER);

    kernel3_entry14_U0 : component kernel3_kernel3_entry14
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => kernel3_entry14_U0_ap_start,
        ap_done => kernel3_entry14_U0_ap_done,
        ap_continue => kernel3_entry14_U0_ap_continue,
        ap_idle => kernel3_entry14_U0_ap_idle,
        ap_ready => kernel3_entry14_U0_ap_ready,
        A_V => A_V,
        B_V => B_V,
        C_V => C_V,
        A_V_out_din => kernel3_entry14_U0_A_V_out_din,
        A_V_out_full_n => A_V_c_full_n,
        A_V_out_write => kernel3_entry14_U0_A_V_out_write,
        B_V_out_din => kernel3_entry14_U0_B_V_out_din,
        B_V_out_full_n => B_V_c_full_n,
        B_V_out_write => kernel3_entry14_U0_B_V_out_write,
        C_V_out_din => kernel3_entry14_U0_C_V_out_din,
        C_V_out_full_n => C_V_c_full_n,
        C_V_out_write => kernel3_entry14_U0_C_V_out_write);

    A_IO_L3_in_U0 : component kernel3_A_IO_L3_in
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => A_IO_L3_in_U0_ap_start,
        ap_done => A_IO_L3_in_U0_ap_done,
        ap_continue => A_IO_L3_in_U0_ap_continue,
        ap_idle => A_IO_L3_in_U0_ap_idle,
        ap_ready => A_IO_L3_in_U0_ap_ready,
        m_axi_A_V_AWVALID => A_IO_L3_in_U0_m_axi_A_V_AWVALID,
        m_axi_A_V_AWREADY => ap_const_logic_0,
        m_axi_A_V_AWADDR => A_IO_L3_in_U0_m_axi_A_V_AWADDR,
        m_axi_A_V_AWID => A_IO_L3_in_U0_m_axi_A_V_AWID,
        m_axi_A_V_AWLEN => A_IO_L3_in_U0_m_axi_A_V_AWLEN,
        m_axi_A_V_AWSIZE => A_IO_L3_in_U0_m_axi_A_V_AWSIZE,
        m_axi_A_V_AWBURST => A_IO_L3_in_U0_m_axi_A_V_AWBURST,
        m_axi_A_V_AWLOCK => A_IO_L3_in_U0_m_axi_A_V_AWLOCK,
        m_axi_A_V_AWCACHE => A_IO_L3_in_U0_m_axi_A_V_AWCACHE,
        m_axi_A_V_AWPROT => A_IO_L3_in_U0_m_axi_A_V_AWPROT,
        m_axi_A_V_AWQOS => A_IO_L3_in_U0_m_axi_A_V_AWQOS,
        m_axi_A_V_AWREGION => A_IO_L3_in_U0_m_axi_A_V_AWREGION,
        m_axi_A_V_AWUSER => A_IO_L3_in_U0_m_axi_A_V_AWUSER,
        m_axi_A_V_WVALID => A_IO_L3_in_U0_m_axi_A_V_WVALID,
        m_axi_A_V_WREADY => ap_const_logic_0,
        m_axi_A_V_WDATA => A_IO_L3_in_U0_m_axi_A_V_WDATA,
        m_axi_A_V_WSTRB => A_IO_L3_in_U0_m_axi_A_V_WSTRB,
        m_axi_A_V_WLAST => A_IO_L3_in_U0_m_axi_A_V_WLAST,
        m_axi_A_V_WID => A_IO_L3_in_U0_m_axi_A_V_WID,
        m_axi_A_V_WUSER => A_IO_L3_in_U0_m_axi_A_V_WUSER,
        m_axi_A_V_ARVALID => A_IO_L3_in_U0_m_axi_A_V_ARVALID,
        m_axi_A_V_ARREADY => gmem_A_ARREADY,
        m_axi_A_V_ARADDR => A_IO_L3_in_U0_m_axi_A_V_ARADDR,
        m_axi_A_V_ARID => A_IO_L3_in_U0_m_axi_A_V_ARID,
        m_axi_A_V_ARLEN => A_IO_L3_in_U0_m_axi_A_V_ARLEN,
        m_axi_A_V_ARSIZE => A_IO_L3_in_U0_m_axi_A_V_ARSIZE,
        m_axi_A_V_ARBURST => A_IO_L3_in_U0_m_axi_A_V_ARBURST,
        m_axi_A_V_ARLOCK => A_IO_L3_in_U0_m_axi_A_V_ARLOCK,
        m_axi_A_V_ARCACHE => A_IO_L3_in_U0_m_axi_A_V_ARCACHE,
        m_axi_A_V_ARPROT => A_IO_L3_in_U0_m_axi_A_V_ARPROT,
        m_axi_A_V_ARQOS => A_IO_L3_in_U0_m_axi_A_V_ARQOS,
        m_axi_A_V_ARREGION => A_IO_L3_in_U0_m_axi_A_V_ARREGION,
        m_axi_A_V_ARUSER => A_IO_L3_in_U0_m_axi_A_V_ARUSER,
        m_axi_A_V_RVALID => gmem_A_RVALID,
        m_axi_A_V_RREADY => A_IO_L3_in_U0_m_axi_A_V_RREADY,
        m_axi_A_V_RDATA => gmem_A_RDATA,
        m_axi_A_V_RLAST => gmem_A_RLAST,
        m_axi_A_V_RID => gmem_A_RID,
        m_axi_A_V_RUSER => gmem_A_RUSER,
        m_axi_A_V_RRESP => gmem_A_RRESP,
        m_axi_A_V_BVALID => ap_const_logic_0,
        m_axi_A_V_BREADY => A_IO_L3_in_U0_m_axi_A_V_BREADY,
        m_axi_A_V_BRESP => ap_const_lv2_0,
        m_axi_A_V_BID => ap_const_lv1_0,
        m_axi_A_V_BUSER => ap_const_lv1_0,
        A_V_offset_dout => A_V_c_dout,
        A_V_offset_empty_n => A_V_c_empty_n,
        A_V_offset_read => A_IO_L3_in_U0_A_V_offset_read,
        fifo_A_local_out_V_V_din => A_IO_L3_in_U0_fifo_A_local_out_V_V_din,
        fifo_A_local_out_V_V_full_n => fifo_A_A_IO_L2_in_0_V_V_full_n,
        fifo_A_local_out_V_V_write => A_IO_L3_in_U0_fifo_A_local_out_V_V_write);

    A_IO_L2_in208_U0 : component kernel3_A_IO_L2_in208
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => A_IO_L2_in208_U0_ap_start,
        ap_done => A_IO_L2_in208_U0_ap_done,
        ap_continue => A_IO_L2_in208_U0_ap_continue,
        ap_idle => A_IO_L2_in208_U0_ap_idle,
        ap_ready => A_IO_L2_in208_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_A_IO_L2_in_0_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_A_IO_L2_in_0_V_V_empty_n,
        fifo_A_in_V_V_read => A_IO_L2_in208_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => A_IO_L2_in208_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_A_IO_L2_in_1_V_V_full_n,
        fifo_A_out_V_V_write => A_IO_L2_in208_U0_fifo_A_out_V_V_write,
        fifo_A_local_out_V_V_din => A_IO_L2_in208_U0_fifo_A_local_out_V_V_din,
        fifo_A_local_out_V_V_full_n => fifo_A_PE_0_0_V_V_full_n,
        fifo_A_local_out_V_V_write => A_IO_L2_in208_U0_fifo_A_local_out_V_V_write);

    A_IO_L2_in209_U0 : component kernel3_A_IO_L2_in209
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => A_IO_L2_in209_U0_ap_start,
        ap_done => A_IO_L2_in209_U0_ap_done,
        ap_continue => A_IO_L2_in209_U0_ap_continue,
        ap_idle => A_IO_L2_in209_U0_ap_idle,
        ap_ready => A_IO_L2_in209_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_A_IO_L2_in_1_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_A_IO_L2_in_1_V_V_empty_n,
        fifo_A_in_V_V_read => A_IO_L2_in209_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => A_IO_L2_in209_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_A_IO_L2_in_2_V_V_full_n,
        fifo_A_out_V_V_write => A_IO_L2_in209_U0_fifo_A_out_V_V_write,
        fifo_A_local_out_V_V_din => A_IO_L2_in209_U0_fifo_A_local_out_V_V_din,
        fifo_A_local_out_V_V_full_n => fifo_A_PE_1_0_V_V_full_n,
        fifo_A_local_out_V_V_write => A_IO_L2_in209_U0_fifo_A_local_out_V_V_write);

    A_IO_L2_in210_U0 : component kernel3_A_IO_L2_in210
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => A_IO_L2_in210_U0_ap_start,
        ap_done => A_IO_L2_in210_U0_ap_done,
        ap_continue => A_IO_L2_in210_U0_ap_continue,
        ap_idle => A_IO_L2_in210_U0_ap_idle,
        ap_ready => A_IO_L2_in210_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_A_IO_L2_in_2_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_A_IO_L2_in_2_V_V_empty_n,
        fifo_A_in_V_V_read => A_IO_L2_in210_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => A_IO_L2_in210_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_A_IO_L2_in_3_V_V_full_n,
        fifo_A_out_V_V_write => A_IO_L2_in210_U0_fifo_A_out_V_V_write,
        fifo_A_local_out_V_V_din => A_IO_L2_in210_U0_fifo_A_local_out_V_V_din,
        fifo_A_local_out_V_V_full_n => fifo_A_PE_2_0_V_V_full_n,
        fifo_A_local_out_V_V_write => A_IO_L2_in210_U0_fifo_A_local_out_V_V_write);

    A_IO_L2_in211_U0 : component kernel3_A_IO_L2_in211
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => A_IO_L2_in211_U0_ap_start,
        ap_done => A_IO_L2_in211_U0_ap_done,
        ap_continue => A_IO_L2_in211_U0_ap_continue,
        ap_idle => A_IO_L2_in211_U0_ap_idle,
        ap_ready => A_IO_L2_in211_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_A_IO_L2_in_3_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_A_IO_L2_in_3_V_V_empty_n,
        fifo_A_in_V_V_read => A_IO_L2_in211_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => A_IO_L2_in211_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_A_IO_L2_in_4_V_V_full_n,
        fifo_A_out_V_V_write => A_IO_L2_in211_U0_fifo_A_out_V_V_write,
        fifo_A_local_out_V_V_din => A_IO_L2_in211_U0_fifo_A_local_out_V_V_din,
        fifo_A_local_out_V_V_full_n => fifo_A_PE_3_0_V_V_full_n,
        fifo_A_local_out_V_V_write => A_IO_L2_in211_U0_fifo_A_local_out_V_V_write);

    A_IO_L2_in212_U0 : component kernel3_A_IO_L2_in212
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => A_IO_L2_in212_U0_ap_start,
        ap_done => A_IO_L2_in212_U0_ap_done,
        ap_continue => A_IO_L2_in212_U0_ap_continue,
        ap_idle => A_IO_L2_in212_U0_ap_idle,
        ap_ready => A_IO_L2_in212_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_A_IO_L2_in_4_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_A_IO_L2_in_4_V_V_empty_n,
        fifo_A_in_V_V_read => A_IO_L2_in212_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => A_IO_L2_in212_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_A_IO_L2_in_5_V_V_full_n,
        fifo_A_out_V_V_write => A_IO_L2_in212_U0_fifo_A_out_V_V_write,
        fifo_A_local_out_V_V_din => A_IO_L2_in212_U0_fifo_A_local_out_V_V_din,
        fifo_A_local_out_V_V_full_n => fifo_A_PE_4_0_V_V_full_n,
        fifo_A_local_out_V_V_write => A_IO_L2_in212_U0_fifo_A_local_out_V_V_write);

    A_IO_L2_in213_U0 : component kernel3_A_IO_L2_in213
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => A_IO_L2_in213_U0_ap_start,
        ap_done => A_IO_L2_in213_U0_ap_done,
        ap_continue => A_IO_L2_in213_U0_ap_continue,
        ap_idle => A_IO_L2_in213_U0_ap_idle,
        ap_ready => A_IO_L2_in213_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_A_IO_L2_in_5_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_A_IO_L2_in_5_V_V_empty_n,
        fifo_A_in_V_V_read => A_IO_L2_in213_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => A_IO_L2_in213_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_A_IO_L2_in_6_V_V_full_n,
        fifo_A_out_V_V_write => A_IO_L2_in213_U0_fifo_A_out_V_V_write,
        fifo_A_local_out_V_V_din => A_IO_L2_in213_U0_fifo_A_local_out_V_V_din,
        fifo_A_local_out_V_V_full_n => fifo_A_PE_5_0_V_V_full_n,
        fifo_A_local_out_V_V_write => A_IO_L2_in213_U0_fifo_A_local_out_V_V_write);

    A_IO_L2_in214_U0 : component kernel3_A_IO_L2_in214
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => A_IO_L2_in214_U0_ap_start,
        ap_done => A_IO_L2_in214_U0_ap_done,
        ap_continue => A_IO_L2_in214_U0_ap_continue,
        ap_idle => A_IO_L2_in214_U0_ap_idle,
        ap_ready => A_IO_L2_in214_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_A_IO_L2_in_6_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_A_IO_L2_in_6_V_V_empty_n,
        fifo_A_in_V_V_read => A_IO_L2_in214_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => A_IO_L2_in214_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_A_IO_L2_in_7_V_V_full_n,
        fifo_A_out_V_V_write => A_IO_L2_in214_U0_fifo_A_out_V_V_write,
        fifo_A_local_out_V_V_din => A_IO_L2_in214_U0_fifo_A_local_out_V_V_din,
        fifo_A_local_out_V_V_full_n => fifo_A_PE_6_0_V_V_full_n,
        fifo_A_local_out_V_V_write => A_IO_L2_in214_U0_fifo_A_local_out_V_V_write);

    A_IO_L2_in215_U0 : component kernel3_A_IO_L2_in215
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => A_IO_L2_in215_U0_ap_start,
        ap_done => A_IO_L2_in215_U0_ap_done,
        ap_continue => A_IO_L2_in215_U0_ap_continue,
        ap_idle => A_IO_L2_in215_U0_ap_idle,
        ap_ready => A_IO_L2_in215_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_A_IO_L2_in_7_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_A_IO_L2_in_7_V_V_empty_n,
        fifo_A_in_V_V_read => A_IO_L2_in215_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => A_IO_L2_in215_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_A_IO_L2_in_8_V_V_full_n,
        fifo_A_out_V_V_write => A_IO_L2_in215_U0_fifo_A_out_V_V_write,
        fifo_A_local_out_V_V_din => A_IO_L2_in215_U0_fifo_A_local_out_V_V_din,
        fifo_A_local_out_V_V_full_n => fifo_A_PE_7_0_V_V_full_n,
        fifo_A_local_out_V_V_write => A_IO_L2_in215_U0_fifo_A_local_out_V_V_write);

    A_IO_L2_in216_U0 : component kernel3_A_IO_L2_in216
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => A_IO_L2_in216_U0_ap_start,
        ap_done => A_IO_L2_in216_U0_ap_done,
        ap_continue => A_IO_L2_in216_U0_ap_continue,
        ap_idle => A_IO_L2_in216_U0_ap_idle,
        ap_ready => A_IO_L2_in216_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_A_IO_L2_in_8_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_A_IO_L2_in_8_V_V_empty_n,
        fifo_A_in_V_V_read => A_IO_L2_in216_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => A_IO_L2_in216_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_A_IO_L2_in_9_V_V_full_n,
        fifo_A_out_V_V_write => A_IO_L2_in216_U0_fifo_A_out_V_V_write,
        fifo_A_local_out_V_V_din => A_IO_L2_in216_U0_fifo_A_local_out_V_V_din,
        fifo_A_local_out_V_V_full_n => fifo_A_PE_8_0_V_V_full_n,
        fifo_A_local_out_V_V_write => A_IO_L2_in216_U0_fifo_A_local_out_V_V_write);

    A_IO_L2_in217_U0 : component kernel3_A_IO_L2_in217
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => A_IO_L2_in217_U0_ap_start,
        ap_done => A_IO_L2_in217_U0_ap_done,
        ap_continue => A_IO_L2_in217_U0_ap_continue,
        ap_idle => A_IO_L2_in217_U0_ap_idle,
        ap_ready => A_IO_L2_in217_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_A_IO_L2_in_9_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_A_IO_L2_in_9_V_V_empty_n,
        fifo_A_in_V_V_read => A_IO_L2_in217_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => A_IO_L2_in217_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_A_IO_L2_in_10_V_V_full_n,
        fifo_A_out_V_V_write => A_IO_L2_in217_U0_fifo_A_out_V_V_write,
        fifo_A_local_out_V_V_din => A_IO_L2_in217_U0_fifo_A_local_out_V_V_din,
        fifo_A_local_out_V_V_full_n => fifo_A_PE_9_0_V_V_full_n,
        fifo_A_local_out_V_V_write => A_IO_L2_in217_U0_fifo_A_local_out_V_V_write);

    A_IO_L2_in218_U0 : component kernel3_A_IO_L2_in218
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => A_IO_L2_in218_U0_ap_start,
        ap_done => A_IO_L2_in218_U0_ap_done,
        ap_continue => A_IO_L2_in218_U0_ap_continue,
        ap_idle => A_IO_L2_in218_U0_ap_idle,
        ap_ready => A_IO_L2_in218_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_A_IO_L2_in_10_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_A_IO_L2_in_10_V_V_empty_n,
        fifo_A_in_V_V_read => A_IO_L2_in218_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => A_IO_L2_in218_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_A_IO_L2_in_11_V_V_full_n,
        fifo_A_out_V_V_write => A_IO_L2_in218_U0_fifo_A_out_V_V_write,
        fifo_A_local_out_V_V_din => A_IO_L2_in218_U0_fifo_A_local_out_V_V_din,
        fifo_A_local_out_V_V_full_n => fifo_A_PE_10_0_V_V_full_n,
        fifo_A_local_out_V_V_write => A_IO_L2_in218_U0_fifo_A_local_out_V_V_write);

    A_IO_L2_in219_U0 : component kernel3_A_IO_L2_in219
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => A_IO_L2_in219_U0_ap_start,
        ap_done => A_IO_L2_in219_U0_ap_done,
        ap_continue => A_IO_L2_in219_U0_ap_continue,
        ap_idle => A_IO_L2_in219_U0_ap_idle,
        ap_ready => A_IO_L2_in219_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_A_IO_L2_in_11_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_A_IO_L2_in_11_V_V_empty_n,
        fifo_A_in_V_V_read => A_IO_L2_in219_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => A_IO_L2_in219_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_A_IO_L2_in_12_V_V_full_n,
        fifo_A_out_V_V_write => A_IO_L2_in219_U0_fifo_A_out_V_V_write,
        fifo_A_local_out_V_V_din => A_IO_L2_in219_U0_fifo_A_local_out_V_V_din,
        fifo_A_local_out_V_V_full_n => fifo_A_PE_11_0_V_V_full_n,
        fifo_A_local_out_V_V_write => A_IO_L2_in219_U0_fifo_A_local_out_V_V_write);

    A_IO_L2_in_boundary_U0 : component kernel3_A_IO_L2_in_boundary
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => A_IO_L2_in_boundary_U0_ap_start,
        ap_done => A_IO_L2_in_boundary_U0_ap_done,
        ap_continue => A_IO_L2_in_boundary_U0_ap_continue,
        ap_idle => A_IO_L2_in_boundary_U0_ap_idle,
        ap_ready => A_IO_L2_in_boundary_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_A_IO_L2_in_12_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_A_IO_L2_in_12_V_V_empty_n,
        fifo_A_in_V_V_read => A_IO_L2_in_boundary_U0_fifo_A_in_V_V_read,
        fifo_A_local_out_V_V_din => A_IO_L2_in_boundary_U0_fifo_A_local_out_V_V_din,
        fifo_A_local_out_V_V_full_n => fifo_A_PE_12_0_V_V_full_n,
        fifo_A_local_out_V_V_write => A_IO_L2_in_boundary_U0_fifo_A_local_out_V_V_write);

    B_IO_L3_in_U0 : component kernel3_B_IO_L3_in
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => B_IO_L3_in_U0_ap_start,
        ap_done => B_IO_L3_in_U0_ap_done,
        ap_continue => B_IO_L3_in_U0_ap_continue,
        ap_idle => B_IO_L3_in_U0_ap_idle,
        ap_ready => B_IO_L3_in_U0_ap_ready,
        m_axi_B_V_AWVALID => B_IO_L3_in_U0_m_axi_B_V_AWVALID,
        m_axi_B_V_AWREADY => ap_const_logic_0,
        m_axi_B_V_AWADDR => B_IO_L3_in_U0_m_axi_B_V_AWADDR,
        m_axi_B_V_AWID => B_IO_L3_in_U0_m_axi_B_V_AWID,
        m_axi_B_V_AWLEN => B_IO_L3_in_U0_m_axi_B_V_AWLEN,
        m_axi_B_V_AWSIZE => B_IO_L3_in_U0_m_axi_B_V_AWSIZE,
        m_axi_B_V_AWBURST => B_IO_L3_in_U0_m_axi_B_V_AWBURST,
        m_axi_B_V_AWLOCK => B_IO_L3_in_U0_m_axi_B_V_AWLOCK,
        m_axi_B_V_AWCACHE => B_IO_L3_in_U0_m_axi_B_V_AWCACHE,
        m_axi_B_V_AWPROT => B_IO_L3_in_U0_m_axi_B_V_AWPROT,
        m_axi_B_V_AWQOS => B_IO_L3_in_U0_m_axi_B_V_AWQOS,
        m_axi_B_V_AWREGION => B_IO_L3_in_U0_m_axi_B_V_AWREGION,
        m_axi_B_V_AWUSER => B_IO_L3_in_U0_m_axi_B_V_AWUSER,
        m_axi_B_V_WVALID => B_IO_L3_in_U0_m_axi_B_V_WVALID,
        m_axi_B_V_WREADY => ap_const_logic_0,
        m_axi_B_V_WDATA => B_IO_L3_in_U0_m_axi_B_V_WDATA,
        m_axi_B_V_WSTRB => B_IO_L3_in_U0_m_axi_B_V_WSTRB,
        m_axi_B_V_WLAST => B_IO_L3_in_U0_m_axi_B_V_WLAST,
        m_axi_B_V_WID => B_IO_L3_in_U0_m_axi_B_V_WID,
        m_axi_B_V_WUSER => B_IO_L3_in_U0_m_axi_B_V_WUSER,
        m_axi_B_V_ARVALID => B_IO_L3_in_U0_m_axi_B_V_ARVALID,
        m_axi_B_V_ARREADY => gmem_B_ARREADY,
        m_axi_B_V_ARADDR => B_IO_L3_in_U0_m_axi_B_V_ARADDR,
        m_axi_B_V_ARID => B_IO_L3_in_U0_m_axi_B_V_ARID,
        m_axi_B_V_ARLEN => B_IO_L3_in_U0_m_axi_B_V_ARLEN,
        m_axi_B_V_ARSIZE => B_IO_L3_in_U0_m_axi_B_V_ARSIZE,
        m_axi_B_V_ARBURST => B_IO_L3_in_U0_m_axi_B_V_ARBURST,
        m_axi_B_V_ARLOCK => B_IO_L3_in_U0_m_axi_B_V_ARLOCK,
        m_axi_B_V_ARCACHE => B_IO_L3_in_U0_m_axi_B_V_ARCACHE,
        m_axi_B_V_ARPROT => B_IO_L3_in_U0_m_axi_B_V_ARPROT,
        m_axi_B_V_ARQOS => B_IO_L3_in_U0_m_axi_B_V_ARQOS,
        m_axi_B_V_ARREGION => B_IO_L3_in_U0_m_axi_B_V_ARREGION,
        m_axi_B_V_ARUSER => B_IO_L3_in_U0_m_axi_B_V_ARUSER,
        m_axi_B_V_RVALID => gmem_B_RVALID,
        m_axi_B_V_RREADY => B_IO_L3_in_U0_m_axi_B_V_RREADY,
        m_axi_B_V_RDATA => gmem_B_RDATA,
        m_axi_B_V_RLAST => gmem_B_RLAST,
        m_axi_B_V_RID => gmem_B_RID,
        m_axi_B_V_RUSER => gmem_B_RUSER,
        m_axi_B_V_RRESP => gmem_B_RRESP,
        m_axi_B_V_BVALID => ap_const_logic_0,
        m_axi_B_V_BREADY => B_IO_L3_in_U0_m_axi_B_V_BREADY,
        m_axi_B_V_BRESP => ap_const_lv2_0,
        m_axi_B_V_BID => ap_const_lv1_0,
        m_axi_B_V_BUSER => ap_const_lv1_0,
        B_V_offset_dout => B_V_c_dout,
        B_V_offset_empty_n => B_V_c_empty_n,
        B_V_offset_read => B_IO_L3_in_U0_B_V_offset_read,
        fifo_B_local_out_V_V_din => B_IO_L3_in_U0_fifo_B_local_out_V_V_din,
        fifo_B_local_out_V_V_full_n => fifo_B_B_IO_L2_in_0_V_V_full_n,
        fifo_B_local_out_V_V_write => B_IO_L3_in_U0_fifo_B_local_out_V_V_write);

    B_IO_L2_in_U0 : component kernel3_B_IO_L2_in
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => B_IO_L2_in_U0_ap_start,
        ap_done => B_IO_L2_in_U0_ap_done,
        ap_continue => B_IO_L2_in_U0_ap_continue,
        ap_idle => B_IO_L2_in_U0_ap_idle,
        ap_ready => B_IO_L2_in_U0_ap_ready,
        fifo_B_in_V_V_dout => fifo_B_B_IO_L2_in_0_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_B_IO_L2_in_0_V_V_empty_n,
        fifo_B_in_V_V_read => B_IO_L2_in_U0_fifo_B_in_V_V_read,
        fifo_B_out_V_V_din => B_IO_L2_in_U0_fifo_B_out_V_V_din,
        fifo_B_out_V_V_full_n => fifo_B_B_IO_L2_in_1_V_V_full_n,
        fifo_B_out_V_V_write => B_IO_L2_in_U0_fifo_B_out_V_V_write,
        fifo_B_local_out_V_V_din => B_IO_L2_in_U0_fifo_B_local_out_V_V_din,
        fifo_B_local_out_V_V_full_n => fifo_B_PE_0_0_V_V_full_n,
        fifo_B_local_out_V_V_write => B_IO_L2_in_U0_fifo_B_local_out_V_V_write);

    B_IO_L2_in_boundary_U0 : component kernel3_B_IO_L2_in_boundary
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => B_IO_L2_in_boundary_U0_ap_start,
        ap_done => B_IO_L2_in_boundary_U0_ap_done,
        ap_continue => B_IO_L2_in_boundary_U0_ap_continue,
        ap_idle => B_IO_L2_in_boundary_U0_ap_idle,
        ap_ready => B_IO_L2_in_boundary_U0_ap_ready,
        fifo_B_in_V_V_dout => fifo_B_B_IO_L2_in_1_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_B_IO_L2_in_1_V_V_empty_n,
        fifo_B_in_V_V_read => B_IO_L2_in_boundary_U0_fifo_B_in_V_V_read,
        fifo_B_local_out_V_V_din => B_IO_L2_in_boundary_U0_fifo_B_local_out_V_V_din,
        fifo_B_local_out_V_V_full_n => fifo_B_PE_0_1_V_V_full_n,
        fifo_B_local_out_V_V_write => B_IO_L2_in_boundary_U0_fifo_B_local_out_V_V_write);

    PE_wrapper_0_0_U0 : component kernel3_PE_wrapper_0_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PE_wrapper_0_0_U0_ap_start,
        ap_done => PE_wrapper_0_0_U0_ap_done,
        ap_continue => PE_wrapper_0_0_U0_ap_continue,
        ap_idle => PE_wrapper_0_0_U0_ap_idle,
        ap_ready => PE_wrapper_0_0_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_0_0_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_0_0_V_V_empty_n,
        fifo_A_in_V_V_read => PE_wrapper_0_0_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => PE_wrapper_0_0_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_PE_0_1_V_V_full_n,
        fifo_A_out_V_V_write => PE_wrapper_0_0_U0_fifo_A_out_V_V_write,
        fifo_B_in_V_V_dout => fifo_B_PE_0_0_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_PE_0_0_V_V_empty_n,
        fifo_B_in_V_V_read => PE_wrapper_0_0_U0_fifo_B_in_V_V_read,
        fifo_B_out_V_V_din => PE_wrapper_0_0_U0_fifo_B_out_V_V_din,
        fifo_B_out_V_V_full_n => fifo_B_PE_1_0_V_V_full_n,
        fifo_B_out_V_V_write => PE_wrapper_0_0_U0_fifo_B_out_V_V_write,
        fifo_C_drain_out_V_din => PE_wrapper_0_0_U0_fifo_C_drain_out_V_din,
        fifo_C_drain_out_V_full_n => fifo_C_drain_PE_0_0_V_full_n,
        fifo_C_drain_out_V_write => PE_wrapper_0_0_U0_fifo_C_drain_out_V_write);

    PE_wrapper_0_1_U0 : component kernel3_PE_wrapper_0_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PE_wrapper_0_1_U0_ap_start,
        ap_done => PE_wrapper_0_1_U0_ap_done,
        ap_continue => PE_wrapper_0_1_U0_ap_continue,
        ap_idle => PE_wrapper_0_1_U0_ap_idle,
        ap_ready => PE_wrapper_0_1_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_0_1_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_0_1_V_V_empty_n,
        fifo_A_in_V_V_read => PE_wrapper_0_1_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => PE_wrapper_0_1_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_PE_0_2_V_V_full_n,
        fifo_A_out_V_V_write => PE_wrapper_0_1_U0_fifo_A_out_V_V_write,
        fifo_B_in_V_V_dout => fifo_B_PE_0_1_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_PE_0_1_V_V_empty_n,
        fifo_B_in_V_V_read => PE_wrapper_0_1_U0_fifo_B_in_V_V_read,
        fifo_B_out_V_V_din => PE_wrapper_0_1_U0_fifo_B_out_V_V_din,
        fifo_B_out_V_V_full_n => fifo_B_PE_1_1_V_V_full_n,
        fifo_B_out_V_V_write => PE_wrapper_0_1_U0_fifo_B_out_V_V_write,
        fifo_C_drain_out_V_din => PE_wrapper_0_1_U0_fifo_C_drain_out_V_din,
        fifo_C_drain_out_V_full_n => fifo_C_drain_PE_0_1_V_full_n,
        fifo_C_drain_out_V_write => PE_wrapper_0_1_U0_fifo_C_drain_out_V_write);

    PE_wrapper_1_0_U0 : component kernel3_PE_wrapper_1_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PE_wrapper_1_0_U0_ap_start,
        ap_done => PE_wrapper_1_0_U0_ap_done,
        ap_continue => PE_wrapper_1_0_U0_ap_continue,
        ap_idle => PE_wrapper_1_0_U0_ap_idle,
        ap_ready => PE_wrapper_1_0_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_1_0_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_1_0_V_V_empty_n,
        fifo_A_in_V_V_read => PE_wrapper_1_0_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => PE_wrapper_1_0_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_PE_1_1_V_V_full_n,
        fifo_A_out_V_V_write => PE_wrapper_1_0_U0_fifo_A_out_V_V_write,
        fifo_B_in_V_V_dout => fifo_B_PE_1_0_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_PE_1_0_V_V_empty_n,
        fifo_B_in_V_V_read => PE_wrapper_1_0_U0_fifo_B_in_V_V_read,
        fifo_B_out_V_V_din => PE_wrapper_1_0_U0_fifo_B_out_V_V_din,
        fifo_B_out_V_V_full_n => fifo_B_PE_2_0_V_V_full_n,
        fifo_B_out_V_V_write => PE_wrapper_1_0_U0_fifo_B_out_V_V_write,
        fifo_C_drain_out_V_din => PE_wrapper_1_0_U0_fifo_C_drain_out_V_din,
        fifo_C_drain_out_V_full_n => fifo_C_drain_PE_1_0_V_full_n,
        fifo_C_drain_out_V_write => PE_wrapper_1_0_U0_fifo_C_drain_out_V_write);

    PE_wrapper_1_1_U0 : component kernel3_PE_wrapper_1_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PE_wrapper_1_1_U0_ap_start,
        ap_done => PE_wrapper_1_1_U0_ap_done,
        ap_continue => PE_wrapper_1_1_U0_ap_continue,
        ap_idle => PE_wrapper_1_1_U0_ap_idle,
        ap_ready => PE_wrapper_1_1_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_1_1_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_1_1_V_V_empty_n,
        fifo_A_in_V_V_read => PE_wrapper_1_1_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => PE_wrapper_1_1_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_PE_1_2_V_V_full_n,
        fifo_A_out_V_V_write => PE_wrapper_1_1_U0_fifo_A_out_V_V_write,
        fifo_B_in_V_V_dout => fifo_B_PE_1_1_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_PE_1_1_V_V_empty_n,
        fifo_B_in_V_V_read => PE_wrapper_1_1_U0_fifo_B_in_V_V_read,
        fifo_B_out_V_V_din => PE_wrapper_1_1_U0_fifo_B_out_V_V_din,
        fifo_B_out_V_V_full_n => fifo_B_PE_2_1_V_V_full_n,
        fifo_B_out_V_V_write => PE_wrapper_1_1_U0_fifo_B_out_V_V_write,
        fifo_C_drain_out_V_din => PE_wrapper_1_1_U0_fifo_C_drain_out_V_din,
        fifo_C_drain_out_V_full_n => fifo_C_drain_PE_1_1_V_full_n,
        fifo_C_drain_out_V_write => PE_wrapper_1_1_U0_fifo_C_drain_out_V_write);

    PE_wrapper_2_0_U0 : component kernel3_PE_wrapper_2_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PE_wrapper_2_0_U0_ap_start,
        ap_done => PE_wrapper_2_0_U0_ap_done,
        ap_continue => PE_wrapper_2_0_U0_ap_continue,
        ap_idle => PE_wrapper_2_0_U0_ap_idle,
        ap_ready => PE_wrapper_2_0_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_2_0_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_2_0_V_V_empty_n,
        fifo_A_in_V_V_read => PE_wrapper_2_0_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => PE_wrapper_2_0_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_PE_2_1_V_V_full_n,
        fifo_A_out_V_V_write => PE_wrapper_2_0_U0_fifo_A_out_V_V_write,
        fifo_B_in_V_V_dout => fifo_B_PE_2_0_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_PE_2_0_V_V_empty_n,
        fifo_B_in_V_V_read => PE_wrapper_2_0_U0_fifo_B_in_V_V_read,
        fifo_B_out_V_V_din => PE_wrapper_2_0_U0_fifo_B_out_V_V_din,
        fifo_B_out_V_V_full_n => fifo_B_PE_3_0_V_V_full_n,
        fifo_B_out_V_V_write => PE_wrapper_2_0_U0_fifo_B_out_V_V_write,
        fifo_C_drain_out_V_din => PE_wrapper_2_0_U0_fifo_C_drain_out_V_din,
        fifo_C_drain_out_V_full_n => fifo_C_drain_PE_2_0_V_full_n,
        fifo_C_drain_out_V_write => PE_wrapper_2_0_U0_fifo_C_drain_out_V_write);

    PE_wrapper_2_1_U0 : component kernel3_PE_wrapper_2_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PE_wrapper_2_1_U0_ap_start,
        ap_done => PE_wrapper_2_1_U0_ap_done,
        ap_continue => PE_wrapper_2_1_U0_ap_continue,
        ap_idle => PE_wrapper_2_1_U0_ap_idle,
        ap_ready => PE_wrapper_2_1_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_2_1_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_2_1_V_V_empty_n,
        fifo_A_in_V_V_read => PE_wrapper_2_1_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => PE_wrapper_2_1_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_PE_2_2_V_V_full_n,
        fifo_A_out_V_V_write => PE_wrapper_2_1_U0_fifo_A_out_V_V_write,
        fifo_B_in_V_V_dout => fifo_B_PE_2_1_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_PE_2_1_V_V_empty_n,
        fifo_B_in_V_V_read => PE_wrapper_2_1_U0_fifo_B_in_V_V_read,
        fifo_B_out_V_V_din => PE_wrapper_2_1_U0_fifo_B_out_V_V_din,
        fifo_B_out_V_V_full_n => fifo_B_PE_3_1_V_V_full_n,
        fifo_B_out_V_V_write => PE_wrapper_2_1_U0_fifo_B_out_V_V_write,
        fifo_C_drain_out_V_din => PE_wrapper_2_1_U0_fifo_C_drain_out_V_din,
        fifo_C_drain_out_V_full_n => fifo_C_drain_PE_2_1_V_full_n,
        fifo_C_drain_out_V_write => PE_wrapper_2_1_U0_fifo_C_drain_out_V_write);

    PE_wrapper_3_0_U0 : component kernel3_PE_wrapper_3_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PE_wrapper_3_0_U0_ap_start,
        ap_done => PE_wrapper_3_0_U0_ap_done,
        ap_continue => PE_wrapper_3_0_U0_ap_continue,
        ap_idle => PE_wrapper_3_0_U0_ap_idle,
        ap_ready => PE_wrapper_3_0_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_3_0_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_3_0_V_V_empty_n,
        fifo_A_in_V_V_read => PE_wrapper_3_0_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => PE_wrapper_3_0_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_PE_3_1_V_V_full_n,
        fifo_A_out_V_V_write => PE_wrapper_3_0_U0_fifo_A_out_V_V_write,
        fifo_B_in_V_V_dout => fifo_B_PE_3_0_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_PE_3_0_V_V_empty_n,
        fifo_B_in_V_V_read => PE_wrapper_3_0_U0_fifo_B_in_V_V_read,
        fifo_B_out_V_V_din => PE_wrapper_3_0_U0_fifo_B_out_V_V_din,
        fifo_B_out_V_V_full_n => fifo_B_PE_4_0_V_V_full_n,
        fifo_B_out_V_V_write => PE_wrapper_3_0_U0_fifo_B_out_V_V_write,
        fifo_C_drain_out_V_din => PE_wrapper_3_0_U0_fifo_C_drain_out_V_din,
        fifo_C_drain_out_V_full_n => fifo_C_drain_PE_3_0_V_full_n,
        fifo_C_drain_out_V_write => PE_wrapper_3_0_U0_fifo_C_drain_out_V_write);

    PE_wrapper_3_1_U0 : component kernel3_PE_wrapper_3_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PE_wrapper_3_1_U0_ap_start,
        ap_done => PE_wrapper_3_1_U0_ap_done,
        ap_continue => PE_wrapper_3_1_U0_ap_continue,
        ap_idle => PE_wrapper_3_1_U0_ap_idle,
        ap_ready => PE_wrapper_3_1_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_3_1_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_3_1_V_V_empty_n,
        fifo_A_in_V_V_read => PE_wrapper_3_1_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => PE_wrapper_3_1_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_PE_3_2_V_V_full_n,
        fifo_A_out_V_V_write => PE_wrapper_3_1_U0_fifo_A_out_V_V_write,
        fifo_B_in_V_V_dout => fifo_B_PE_3_1_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_PE_3_1_V_V_empty_n,
        fifo_B_in_V_V_read => PE_wrapper_3_1_U0_fifo_B_in_V_V_read,
        fifo_B_out_V_V_din => PE_wrapper_3_1_U0_fifo_B_out_V_V_din,
        fifo_B_out_V_V_full_n => fifo_B_PE_4_1_V_V_full_n,
        fifo_B_out_V_V_write => PE_wrapper_3_1_U0_fifo_B_out_V_V_write,
        fifo_C_drain_out_V_din => PE_wrapper_3_1_U0_fifo_C_drain_out_V_din,
        fifo_C_drain_out_V_full_n => fifo_C_drain_PE_3_1_V_full_n,
        fifo_C_drain_out_V_write => PE_wrapper_3_1_U0_fifo_C_drain_out_V_write);

    PE_wrapper_4_0_U0 : component kernel3_PE_wrapper_4_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PE_wrapper_4_0_U0_ap_start,
        ap_done => PE_wrapper_4_0_U0_ap_done,
        ap_continue => PE_wrapper_4_0_U0_ap_continue,
        ap_idle => PE_wrapper_4_0_U0_ap_idle,
        ap_ready => PE_wrapper_4_0_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_4_0_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_4_0_V_V_empty_n,
        fifo_A_in_V_V_read => PE_wrapper_4_0_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => PE_wrapper_4_0_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_PE_4_1_V_V_full_n,
        fifo_A_out_V_V_write => PE_wrapper_4_0_U0_fifo_A_out_V_V_write,
        fifo_B_in_V_V_dout => fifo_B_PE_4_0_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_PE_4_0_V_V_empty_n,
        fifo_B_in_V_V_read => PE_wrapper_4_0_U0_fifo_B_in_V_V_read,
        fifo_B_out_V_V_din => PE_wrapper_4_0_U0_fifo_B_out_V_V_din,
        fifo_B_out_V_V_full_n => fifo_B_PE_5_0_V_V_full_n,
        fifo_B_out_V_V_write => PE_wrapper_4_0_U0_fifo_B_out_V_V_write,
        fifo_C_drain_out_V_din => PE_wrapper_4_0_U0_fifo_C_drain_out_V_din,
        fifo_C_drain_out_V_full_n => fifo_C_drain_PE_4_0_V_full_n,
        fifo_C_drain_out_V_write => PE_wrapper_4_0_U0_fifo_C_drain_out_V_write);

    PE_wrapper_4_1_U0 : component kernel3_PE_wrapper_4_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PE_wrapper_4_1_U0_ap_start,
        ap_done => PE_wrapper_4_1_U0_ap_done,
        ap_continue => PE_wrapper_4_1_U0_ap_continue,
        ap_idle => PE_wrapper_4_1_U0_ap_idle,
        ap_ready => PE_wrapper_4_1_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_4_1_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_4_1_V_V_empty_n,
        fifo_A_in_V_V_read => PE_wrapper_4_1_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => PE_wrapper_4_1_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_PE_4_2_V_V_full_n,
        fifo_A_out_V_V_write => PE_wrapper_4_1_U0_fifo_A_out_V_V_write,
        fifo_B_in_V_V_dout => fifo_B_PE_4_1_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_PE_4_1_V_V_empty_n,
        fifo_B_in_V_V_read => PE_wrapper_4_1_U0_fifo_B_in_V_V_read,
        fifo_B_out_V_V_din => PE_wrapper_4_1_U0_fifo_B_out_V_V_din,
        fifo_B_out_V_V_full_n => fifo_B_PE_5_1_V_V_full_n,
        fifo_B_out_V_V_write => PE_wrapper_4_1_U0_fifo_B_out_V_V_write,
        fifo_C_drain_out_V_din => PE_wrapper_4_1_U0_fifo_C_drain_out_V_din,
        fifo_C_drain_out_V_full_n => fifo_C_drain_PE_4_1_V_full_n,
        fifo_C_drain_out_V_write => PE_wrapper_4_1_U0_fifo_C_drain_out_V_write);

    PE_wrapper_5_0_U0 : component kernel3_PE_wrapper_5_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PE_wrapper_5_0_U0_ap_start,
        ap_done => PE_wrapper_5_0_U0_ap_done,
        ap_continue => PE_wrapper_5_0_U0_ap_continue,
        ap_idle => PE_wrapper_5_0_U0_ap_idle,
        ap_ready => PE_wrapper_5_0_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_5_0_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_5_0_V_V_empty_n,
        fifo_A_in_V_V_read => PE_wrapper_5_0_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => PE_wrapper_5_0_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_PE_5_1_V_V_full_n,
        fifo_A_out_V_V_write => PE_wrapper_5_0_U0_fifo_A_out_V_V_write,
        fifo_B_in_V_V_dout => fifo_B_PE_5_0_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_PE_5_0_V_V_empty_n,
        fifo_B_in_V_V_read => PE_wrapper_5_0_U0_fifo_B_in_V_V_read,
        fifo_B_out_V_V_din => PE_wrapper_5_0_U0_fifo_B_out_V_V_din,
        fifo_B_out_V_V_full_n => fifo_B_PE_6_0_V_V_full_n,
        fifo_B_out_V_V_write => PE_wrapper_5_0_U0_fifo_B_out_V_V_write,
        fifo_C_drain_out_V_din => PE_wrapper_5_0_U0_fifo_C_drain_out_V_din,
        fifo_C_drain_out_V_full_n => fifo_C_drain_PE_5_0_V_full_n,
        fifo_C_drain_out_V_write => PE_wrapper_5_0_U0_fifo_C_drain_out_V_write);

    PE_wrapper_5_1_U0 : component kernel3_PE_wrapper_5_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PE_wrapper_5_1_U0_ap_start,
        ap_done => PE_wrapper_5_1_U0_ap_done,
        ap_continue => PE_wrapper_5_1_U0_ap_continue,
        ap_idle => PE_wrapper_5_1_U0_ap_idle,
        ap_ready => PE_wrapper_5_1_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_5_1_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_5_1_V_V_empty_n,
        fifo_A_in_V_V_read => PE_wrapper_5_1_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => PE_wrapper_5_1_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_PE_5_2_V_V_full_n,
        fifo_A_out_V_V_write => PE_wrapper_5_1_U0_fifo_A_out_V_V_write,
        fifo_B_in_V_V_dout => fifo_B_PE_5_1_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_PE_5_1_V_V_empty_n,
        fifo_B_in_V_V_read => PE_wrapper_5_1_U0_fifo_B_in_V_V_read,
        fifo_B_out_V_V_din => PE_wrapper_5_1_U0_fifo_B_out_V_V_din,
        fifo_B_out_V_V_full_n => fifo_B_PE_6_1_V_V_full_n,
        fifo_B_out_V_V_write => PE_wrapper_5_1_U0_fifo_B_out_V_V_write,
        fifo_C_drain_out_V_din => PE_wrapper_5_1_U0_fifo_C_drain_out_V_din,
        fifo_C_drain_out_V_full_n => fifo_C_drain_PE_5_1_V_full_n,
        fifo_C_drain_out_V_write => PE_wrapper_5_1_U0_fifo_C_drain_out_V_write);

    PE_wrapper_6_0_U0 : component kernel3_PE_wrapper_6_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PE_wrapper_6_0_U0_ap_start,
        ap_done => PE_wrapper_6_0_U0_ap_done,
        ap_continue => PE_wrapper_6_0_U0_ap_continue,
        ap_idle => PE_wrapper_6_0_U0_ap_idle,
        ap_ready => PE_wrapper_6_0_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_6_0_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_6_0_V_V_empty_n,
        fifo_A_in_V_V_read => PE_wrapper_6_0_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => PE_wrapper_6_0_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_PE_6_1_V_V_full_n,
        fifo_A_out_V_V_write => PE_wrapper_6_0_U0_fifo_A_out_V_V_write,
        fifo_B_in_V_V_dout => fifo_B_PE_6_0_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_PE_6_0_V_V_empty_n,
        fifo_B_in_V_V_read => PE_wrapper_6_0_U0_fifo_B_in_V_V_read,
        fifo_B_out_V_V_din => PE_wrapper_6_0_U0_fifo_B_out_V_V_din,
        fifo_B_out_V_V_full_n => fifo_B_PE_7_0_V_V_full_n,
        fifo_B_out_V_V_write => PE_wrapper_6_0_U0_fifo_B_out_V_V_write,
        fifo_C_drain_out_V_din => PE_wrapper_6_0_U0_fifo_C_drain_out_V_din,
        fifo_C_drain_out_V_full_n => fifo_C_drain_PE_6_0_V_full_n,
        fifo_C_drain_out_V_write => PE_wrapper_6_0_U0_fifo_C_drain_out_V_write);

    PE_wrapper_6_1_U0 : component kernel3_PE_wrapper_6_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PE_wrapper_6_1_U0_ap_start,
        ap_done => PE_wrapper_6_1_U0_ap_done,
        ap_continue => PE_wrapper_6_1_U0_ap_continue,
        ap_idle => PE_wrapper_6_1_U0_ap_idle,
        ap_ready => PE_wrapper_6_1_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_6_1_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_6_1_V_V_empty_n,
        fifo_A_in_V_V_read => PE_wrapper_6_1_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => PE_wrapper_6_1_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_PE_6_2_V_V_full_n,
        fifo_A_out_V_V_write => PE_wrapper_6_1_U0_fifo_A_out_V_V_write,
        fifo_B_in_V_V_dout => fifo_B_PE_6_1_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_PE_6_1_V_V_empty_n,
        fifo_B_in_V_V_read => PE_wrapper_6_1_U0_fifo_B_in_V_V_read,
        fifo_B_out_V_V_din => PE_wrapper_6_1_U0_fifo_B_out_V_V_din,
        fifo_B_out_V_V_full_n => fifo_B_PE_7_1_V_V_full_n,
        fifo_B_out_V_V_write => PE_wrapper_6_1_U0_fifo_B_out_V_V_write,
        fifo_C_drain_out_V_din => PE_wrapper_6_1_U0_fifo_C_drain_out_V_din,
        fifo_C_drain_out_V_full_n => fifo_C_drain_PE_6_1_V_full_n,
        fifo_C_drain_out_V_write => PE_wrapper_6_1_U0_fifo_C_drain_out_V_write);

    PE_wrapper_7_0_U0 : component kernel3_PE_wrapper_7_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PE_wrapper_7_0_U0_ap_start,
        ap_done => PE_wrapper_7_0_U0_ap_done,
        ap_continue => PE_wrapper_7_0_U0_ap_continue,
        ap_idle => PE_wrapper_7_0_U0_ap_idle,
        ap_ready => PE_wrapper_7_0_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_7_0_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_7_0_V_V_empty_n,
        fifo_A_in_V_V_read => PE_wrapper_7_0_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => PE_wrapper_7_0_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_PE_7_1_V_V_full_n,
        fifo_A_out_V_V_write => PE_wrapper_7_0_U0_fifo_A_out_V_V_write,
        fifo_B_in_V_V_dout => fifo_B_PE_7_0_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_PE_7_0_V_V_empty_n,
        fifo_B_in_V_V_read => PE_wrapper_7_0_U0_fifo_B_in_V_V_read,
        fifo_B_out_V_V_din => PE_wrapper_7_0_U0_fifo_B_out_V_V_din,
        fifo_B_out_V_V_full_n => fifo_B_PE_8_0_V_V_full_n,
        fifo_B_out_V_V_write => PE_wrapper_7_0_U0_fifo_B_out_V_V_write,
        fifo_C_drain_out_V_din => PE_wrapper_7_0_U0_fifo_C_drain_out_V_din,
        fifo_C_drain_out_V_full_n => fifo_C_drain_PE_7_0_V_full_n,
        fifo_C_drain_out_V_write => PE_wrapper_7_0_U0_fifo_C_drain_out_V_write);

    PE_wrapper_7_1_U0 : component kernel3_PE_wrapper_7_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PE_wrapper_7_1_U0_ap_start,
        ap_done => PE_wrapper_7_1_U0_ap_done,
        ap_continue => PE_wrapper_7_1_U0_ap_continue,
        ap_idle => PE_wrapper_7_1_U0_ap_idle,
        ap_ready => PE_wrapper_7_1_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_7_1_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_7_1_V_V_empty_n,
        fifo_A_in_V_V_read => PE_wrapper_7_1_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => PE_wrapper_7_1_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_PE_7_2_V_V_full_n,
        fifo_A_out_V_V_write => PE_wrapper_7_1_U0_fifo_A_out_V_V_write,
        fifo_B_in_V_V_dout => fifo_B_PE_7_1_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_PE_7_1_V_V_empty_n,
        fifo_B_in_V_V_read => PE_wrapper_7_1_U0_fifo_B_in_V_V_read,
        fifo_B_out_V_V_din => PE_wrapper_7_1_U0_fifo_B_out_V_V_din,
        fifo_B_out_V_V_full_n => fifo_B_PE_8_1_V_V_full_n,
        fifo_B_out_V_V_write => PE_wrapper_7_1_U0_fifo_B_out_V_V_write,
        fifo_C_drain_out_V_din => PE_wrapper_7_1_U0_fifo_C_drain_out_V_din,
        fifo_C_drain_out_V_full_n => fifo_C_drain_PE_7_1_V_full_n,
        fifo_C_drain_out_V_write => PE_wrapper_7_1_U0_fifo_C_drain_out_V_write);

    PE_wrapper_8_0_U0 : component kernel3_PE_wrapper_8_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PE_wrapper_8_0_U0_ap_start,
        ap_done => PE_wrapper_8_0_U0_ap_done,
        ap_continue => PE_wrapper_8_0_U0_ap_continue,
        ap_idle => PE_wrapper_8_0_U0_ap_idle,
        ap_ready => PE_wrapper_8_0_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_8_0_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_8_0_V_V_empty_n,
        fifo_A_in_V_V_read => PE_wrapper_8_0_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => PE_wrapper_8_0_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_PE_8_1_V_V_full_n,
        fifo_A_out_V_V_write => PE_wrapper_8_0_U0_fifo_A_out_V_V_write,
        fifo_B_in_V_V_dout => fifo_B_PE_8_0_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_PE_8_0_V_V_empty_n,
        fifo_B_in_V_V_read => PE_wrapper_8_0_U0_fifo_B_in_V_V_read,
        fifo_B_out_V_V_din => PE_wrapper_8_0_U0_fifo_B_out_V_V_din,
        fifo_B_out_V_V_full_n => fifo_B_PE_9_0_V_V_full_n,
        fifo_B_out_V_V_write => PE_wrapper_8_0_U0_fifo_B_out_V_V_write,
        fifo_C_drain_out_V_din => PE_wrapper_8_0_U0_fifo_C_drain_out_V_din,
        fifo_C_drain_out_V_full_n => fifo_C_drain_PE_8_0_V_full_n,
        fifo_C_drain_out_V_write => PE_wrapper_8_0_U0_fifo_C_drain_out_V_write);

    PE_wrapper_8_1_U0 : component kernel3_PE_wrapper_8_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PE_wrapper_8_1_U0_ap_start,
        ap_done => PE_wrapper_8_1_U0_ap_done,
        ap_continue => PE_wrapper_8_1_U0_ap_continue,
        ap_idle => PE_wrapper_8_1_U0_ap_idle,
        ap_ready => PE_wrapper_8_1_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_8_1_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_8_1_V_V_empty_n,
        fifo_A_in_V_V_read => PE_wrapper_8_1_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => PE_wrapper_8_1_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_PE_8_2_V_V_full_n,
        fifo_A_out_V_V_write => PE_wrapper_8_1_U0_fifo_A_out_V_V_write,
        fifo_B_in_V_V_dout => fifo_B_PE_8_1_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_PE_8_1_V_V_empty_n,
        fifo_B_in_V_V_read => PE_wrapper_8_1_U0_fifo_B_in_V_V_read,
        fifo_B_out_V_V_din => PE_wrapper_8_1_U0_fifo_B_out_V_V_din,
        fifo_B_out_V_V_full_n => fifo_B_PE_9_1_V_V_full_n,
        fifo_B_out_V_V_write => PE_wrapper_8_1_U0_fifo_B_out_V_V_write,
        fifo_C_drain_out_V_din => PE_wrapper_8_1_U0_fifo_C_drain_out_V_din,
        fifo_C_drain_out_V_full_n => fifo_C_drain_PE_8_1_V_full_n,
        fifo_C_drain_out_V_write => PE_wrapper_8_1_U0_fifo_C_drain_out_V_write);

    PE_wrapper_9_0_U0 : component kernel3_PE_wrapper_9_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PE_wrapper_9_0_U0_ap_start,
        ap_done => PE_wrapper_9_0_U0_ap_done,
        ap_continue => PE_wrapper_9_0_U0_ap_continue,
        ap_idle => PE_wrapper_9_0_U0_ap_idle,
        ap_ready => PE_wrapper_9_0_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_9_0_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_9_0_V_V_empty_n,
        fifo_A_in_V_V_read => PE_wrapper_9_0_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => PE_wrapper_9_0_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_PE_9_1_V_V_full_n,
        fifo_A_out_V_V_write => PE_wrapper_9_0_U0_fifo_A_out_V_V_write,
        fifo_B_in_V_V_dout => fifo_B_PE_9_0_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_PE_9_0_V_V_empty_n,
        fifo_B_in_V_V_read => PE_wrapper_9_0_U0_fifo_B_in_V_V_read,
        fifo_B_out_V_V_din => PE_wrapper_9_0_U0_fifo_B_out_V_V_din,
        fifo_B_out_V_V_full_n => fifo_B_PE_10_0_V_V_full_n,
        fifo_B_out_V_V_write => PE_wrapper_9_0_U0_fifo_B_out_V_V_write,
        fifo_C_drain_out_V_din => PE_wrapper_9_0_U0_fifo_C_drain_out_V_din,
        fifo_C_drain_out_V_full_n => fifo_C_drain_PE_9_0_V_full_n,
        fifo_C_drain_out_V_write => PE_wrapper_9_0_U0_fifo_C_drain_out_V_write);

    PE_wrapper_9_1_U0 : component kernel3_PE_wrapper_9_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PE_wrapper_9_1_U0_ap_start,
        ap_done => PE_wrapper_9_1_U0_ap_done,
        ap_continue => PE_wrapper_9_1_U0_ap_continue,
        ap_idle => PE_wrapper_9_1_U0_ap_idle,
        ap_ready => PE_wrapper_9_1_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_9_1_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_9_1_V_V_empty_n,
        fifo_A_in_V_V_read => PE_wrapper_9_1_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => PE_wrapper_9_1_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_PE_9_2_V_V_full_n,
        fifo_A_out_V_V_write => PE_wrapper_9_1_U0_fifo_A_out_V_V_write,
        fifo_B_in_V_V_dout => fifo_B_PE_9_1_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_PE_9_1_V_V_empty_n,
        fifo_B_in_V_V_read => PE_wrapper_9_1_U0_fifo_B_in_V_V_read,
        fifo_B_out_V_V_din => PE_wrapper_9_1_U0_fifo_B_out_V_V_din,
        fifo_B_out_V_V_full_n => fifo_B_PE_10_1_V_V_full_n,
        fifo_B_out_V_V_write => PE_wrapper_9_1_U0_fifo_B_out_V_V_write,
        fifo_C_drain_out_V_din => PE_wrapper_9_1_U0_fifo_C_drain_out_V_din,
        fifo_C_drain_out_V_full_n => fifo_C_drain_PE_9_1_V_full_n,
        fifo_C_drain_out_V_write => PE_wrapper_9_1_U0_fifo_C_drain_out_V_write);

    PE_wrapper_10_0_U0 : component kernel3_PE_wrapper_10_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PE_wrapper_10_0_U0_ap_start,
        ap_done => PE_wrapper_10_0_U0_ap_done,
        ap_continue => PE_wrapper_10_0_U0_ap_continue,
        ap_idle => PE_wrapper_10_0_U0_ap_idle,
        ap_ready => PE_wrapper_10_0_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_10_0_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_10_0_V_V_empty_n,
        fifo_A_in_V_V_read => PE_wrapper_10_0_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => PE_wrapper_10_0_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_PE_10_1_V_V_full_n,
        fifo_A_out_V_V_write => PE_wrapper_10_0_U0_fifo_A_out_V_V_write,
        fifo_B_in_V_V_dout => fifo_B_PE_10_0_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_PE_10_0_V_V_empty_n,
        fifo_B_in_V_V_read => PE_wrapper_10_0_U0_fifo_B_in_V_V_read,
        fifo_B_out_V_V_din => PE_wrapper_10_0_U0_fifo_B_out_V_V_din,
        fifo_B_out_V_V_full_n => fifo_B_PE_11_0_V_V_full_n,
        fifo_B_out_V_V_write => PE_wrapper_10_0_U0_fifo_B_out_V_V_write,
        fifo_C_drain_out_V_din => PE_wrapper_10_0_U0_fifo_C_drain_out_V_din,
        fifo_C_drain_out_V_full_n => fifo_C_drain_PE_10_0_V_full_n,
        fifo_C_drain_out_V_write => PE_wrapper_10_0_U0_fifo_C_drain_out_V_write);

    PE_wrapper_10_1_U0 : component kernel3_PE_wrapper_10_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PE_wrapper_10_1_U0_ap_start,
        ap_done => PE_wrapper_10_1_U0_ap_done,
        ap_continue => PE_wrapper_10_1_U0_ap_continue,
        ap_idle => PE_wrapper_10_1_U0_ap_idle,
        ap_ready => PE_wrapper_10_1_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_10_1_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_10_1_V_V_empty_n,
        fifo_A_in_V_V_read => PE_wrapper_10_1_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => PE_wrapper_10_1_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_PE_10_2_V_V_full_n,
        fifo_A_out_V_V_write => PE_wrapper_10_1_U0_fifo_A_out_V_V_write,
        fifo_B_in_V_V_dout => fifo_B_PE_10_1_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_PE_10_1_V_V_empty_n,
        fifo_B_in_V_V_read => PE_wrapper_10_1_U0_fifo_B_in_V_V_read,
        fifo_B_out_V_V_din => PE_wrapper_10_1_U0_fifo_B_out_V_V_din,
        fifo_B_out_V_V_full_n => fifo_B_PE_11_1_V_V_full_n,
        fifo_B_out_V_V_write => PE_wrapper_10_1_U0_fifo_B_out_V_V_write,
        fifo_C_drain_out_V_din => PE_wrapper_10_1_U0_fifo_C_drain_out_V_din,
        fifo_C_drain_out_V_full_n => fifo_C_drain_PE_10_1_V_full_n,
        fifo_C_drain_out_V_write => PE_wrapper_10_1_U0_fifo_C_drain_out_V_write);

    PE_wrapper_11_0_U0 : component kernel3_PE_wrapper_11_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PE_wrapper_11_0_U0_ap_start,
        ap_done => PE_wrapper_11_0_U0_ap_done,
        ap_continue => PE_wrapper_11_0_U0_ap_continue,
        ap_idle => PE_wrapper_11_0_U0_ap_idle,
        ap_ready => PE_wrapper_11_0_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_11_0_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_11_0_V_V_empty_n,
        fifo_A_in_V_V_read => PE_wrapper_11_0_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => PE_wrapper_11_0_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_PE_11_1_V_V_full_n,
        fifo_A_out_V_V_write => PE_wrapper_11_0_U0_fifo_A_out_V_V_write,
        fifo_B_in_V_V_dout => fifo_B_PE_11_0_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_PE_11_0_V_V_empty_n,
        fifo_B_in_V_V_read => PE_wrapper_11_0_U0_fifo_B_in_V_V_read,
        fifo_B_out_V_V_din => PE_wrapper_11_0_U0_fifo_B_out_V_V_din,
        fifo_B_out_V_V_full_n => fifo_B_PE_12_0_V_V_full_n,
        fifo_B_out_V_V_write => PE_wrapper_11_0_U0_fifo_B_out_V_V_write,
        fifo_C_drain_out_V_din => PE_wrapper_11_0_U0_fifo_C_drain_out_V_din,
        fifo_C_drain_out_V_full_n => fifo_C_drain_PE_11_0_V_full_n,
        fifo_C_drain_out_V_write => PE_wrapper_11_0_U0_fifo_C_drain_out_V_write);

    PE_wrapper_11_1_U0 : component kernel3_PE_wrapper_11_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PE_wrapper_11_1_U0_ap_start,
        ap_done => PE_wrapper_11_1_U0_ap_done,
        ap_continue => PE_wrapper_11_1_U0_ap_continue,
        ap_idle => PE_wrapper_11_1_U0_ap_idle,
        ap_ready => PE_wrapper_11_1_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_11_1_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_11_1_V_V_empty_n,
        fifo_A_in_V_V_read => PE_wrapper_11_1_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => PE_wrapper_11_1_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_PE_11_2_V_V_full_n,
        fifo_A_out_V_V_write => PE_wrapper_11_1_U0_fifo_A_out_V_V_write,
        fifo_B_in_V_V_dout => fifo_B_PE_11_1_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_PE_11_1_V_V_empty_n,
        fifo_B_in_V_V_read => PE_wrapper_11_1_U0_fifo_B_in_V_V_read,
        fifo_B_out_V_V_din => PE_wrapper_11_1_U0_fifo_B_out_V_V_din,
        fifo_B_out_V_V_full_n => fifo_B_PE_12_1_V_V_full_n,
        fifo_B_out_V_V_write => PE_wrapper_11_1_U0_fifo_B_out_V_V_write,
        fifo_C_drain_out_V_din => PE_wrapper_11_1_U0_fifo_C_drain_out_V_din,
        fifo_C_drain_out_V_full_n => fifo_C_drain_PE_11_1_V_full_n,
        fifo_C_drain_out_V_write => PE_wrapper_11_1_U0_fifo_C_drain_out_V_write);

    PE_wrapper_12_0_U0 : component kernel3_PE_wrapper_12_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PE_wrapper_12_0_U0_ap_start,
        ap_done => PE_wrapper_12_0_U0_ap_done,
        ap_continue => PE_wrapper_12_0_U0_ap_continue,
        ap_idle => PE_wrapper_12_0_U0_ap_idle,
        ap_ready => PE_wrapper_12_0_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_12_0_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_12_0_V_V_empty_n,
        fifo_A_in_V_V_read => PE_wrapper_12_0_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => PE_wrapper_12_0_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_PE_12_1_V_V_full_n,
        fifo_A_out_V_V_write => PE_wrapper_12_0_U0_fifo_A_out_V_V_write,
        fifo_B_in_V_V_dout => fifo_B_PE_12_0_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_PE_12_0_V_V_empty_n,
        fifo_B_in_V_V_read => PE_wrapper_12_0_U0_fifo_B_in_V_V_read,
        fifo_B_out_V_V_din => PE_wrapper_12_0_U0_fifo_B_out_V_V_din,
        fifo_B_out_V_V_full_n => fifo_B_PE_13_0_V_V_full_n,
        fifo_B_out_V_V_write => PE_wrapper_12_0_U0_fifo_B_out_V_V_write,
        fifo_C_drain_out_V_din => PE_wrapper_12_0_U0_fifo_C_drain_out_V_din,
        fifo_C_drain_out_V_full_n => fifo_C_drain_PE_12_0_V_full_n,
        fifo_C_drain_out_V_write => PE_wrapper_12_0_U0_fifo_C_drain_out_V_write);

    PE_wrapper_12_1_U0 : component kernel3_PE_wrapper_12_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => PE_wrapper_12_1_U0_ap_start,
        ap_done => PE_wrapper_12_1_U0_ap_done,
        ap_continue => PE_wrapper_12_1_U0_ap_continue,
        ap_idle => PE_wrapper_12_1_U0_ap_idle,
        ap_ready => PE_wrapper_12_1_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_12_1_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_12_1_V_V_empty_n,
        fifo_A_in_V_V_read => PE_wrapper_12_1_U0_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => PE_wrapper_12_1_U0_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_PE_12_2_V_V_full_n,
        fifo_A_out_V_V_write => PE_wrapper_12_1_U0_fifo_A_out_V_V_write,
        fifo_B_in_V_V_dout => fifo_B_PE_12_1_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_PE_12_1_V_V_empty_n,
        fifo_B_in_V_V_read => PE_wrapper_12_1_U0_fifo_B_in_V_V_read,
        fifo_B_out_V_V_din => PE_wrapper_12_1_U0_fifo_B_out_V_V_din,
        fifo_B_out_V_V_full_n => fifo_B_PE_13_1_V_V_full_n,
        fifo_B_out_V_V_write => PE_wrapper_12_1_U0_fifo_B_out_V_V_write,
        fifo_C_drain_out_V_din => PE_wrapper_12_1_U0_fifo_C_drain_out_V_din,
        fifo_C_drain_out_V_full_n => fifo_C_drain_PE_12_1_V_full_n,
        fifo_C_drain_out_V_write => PE_wrapper_12_1_U0_fifo_C_drain_out_V_write);

    A_PE_dummy220_U0 : component kernel3_A_PE_dummy220
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => A_PE_dummy220_U0_ap_start,
        ap_done => A_PE_dummy220_U0_ap_done,
        ap_continue => A_PE_dummy220_U0_ap_continue,
        ap_idle => A_PE_dummy220_U0_ap_idle,
        ap_ready => A_PE_dummy220_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_0_2_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_0_2_V_V_empty_n,
        fifo_A_in_V_V_read => A_PE_dummy220_U0_fifo_A_in_V_V_read);

    A_PE_dummy221_U0 : component kernel3_A_PE_dummy221
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => A_PE_dummy221_U0_ap_start,
        ap_done => A_PE_dummy221_U0_ap_done,
        ap_continue => A_PE_dummy221_U0_ap_continue,
        ap_idle => A_PE_dummy221_U0_ap_idle,
        ap_ready => A_PE_dummy221_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_1_2_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_1_2_V_V_empty_n,
        fifo_A_in_V_V_read => A_PE_dummy221_U0_fifo_A_in_V_V_read);

    A_PE_dummy222_U0 : component kernel3_A_PE_dummy222
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => A_PE_dummy222_U0_ap_start,
        ap_done => A_PE_dummy222_U0_ap_done,
        ap_continue => A_PE_dummy222_U0_ap_continue,
        ap_idle => A_PE_dummy222_U0_ap_idle,
        ap_ready => A_PE_dummy222_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_2_2_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_2_2_V_V_empty_n,
        fifo_A_in_V_V_read => A_PE_dummy222_U0_fifo_A_in_V_V_read);

    A_PE_dummy223_U0 : component kernel3_A_PE_dummy223
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => A_PE_dummy223_U0_ap_start,
        ap_done => A_PE_dummy223_U0_ap_done,
        ap_continue => A_PE_dummy223_U0_ap_continue,
        ap_idle => A_PE_dummy223_U0_ap_idle,
        ap_ready => A_PE_dummy223_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_3_2_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_3_2_V_V_empty_n,
        fifo_A_in_V_V_read => A_PE_dummy223_U0_fifo_A_in_V_V_read);

    A_PE_dummy224_U0 : component kernel3_A_PE_dummy224
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => A_PE_dummy224_U0_ap_start,
        ap_done => A_PE_dummy224_U0_ap_done,
        ap_continue => A_PE_dummy224_U0_ap_continue,
        ap_idle => A_PE_dummy224_U0_ap_idle,
        ap_ready => A_PE_dummy224_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_4_2_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_4_2_V_V_empty_n,
        fifo_A_in_V_V_read => A_PE_dummy224_U0_fifo_A_in_V_V_read);

    A_PE_dummy225_U0 : component kernel3_A_PE_dummy225
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => A_PE_dummy225_U0_ap_start,
        ap_done => A_PE_dummy225_U0_ap_done,
        ap_continue => A_PE_dummy225_U0_ap_continue,
        ap_idle => A_PE_dummy225_U0_ap_idle,
        ap_ready => A_PE_dummy225_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_5_2_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_5_2_V_V_empty_n,
        fifo_A_in_V_V_read => A_PE_dummy225_U0_fifo_A_in_V_V_read);

    A_PE_dummy226_U0 : component kernel3_A_PE_dummy226
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => A_PE_dummy226_U0_ap_start,
        ap_done => A_PE_dummy226_U0_ap_done,
        ap_continue => A_PE_dummy226_U0_ap_continue,
        ap_idle => A_PE_dummy226_U0_ap_idle,
        ap_ready => A_PE_dummy226_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_6_2_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_6_2_V_V_empty_n,
        fifo_A_in_V_V_read => A_PE_dummy226_U0_fifo_A_in_V_V_read);

    A_PE_dummy227_U0 : component kernel3_A_PE_dummy227
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => A_PE_dummy227_U0_ap_start,
        ap_done => A_PE_dummy227_U0_ap_done,
        ap_continue => A_PE_dummy227_U0_ap_continue,
        ap_idle => A_PE_dummy227_U0_ap_idle,
        ap_ready => A_PE_dummy227_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_7_2_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_7_2_V_V_empty_n,
        fifo_A_in_V_V_read => A_PE_dummy227_U0_fifo_A_in_V_V_read);

    A_PE_dummy228_U0 : component kernel3_A_PE_dummy228
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => A_PE_dummy228_U0_ap_start,
        ap_done => A_PE_dummy228_U0_ap_done,
        ap_continue => A_PE_dummy228_U0_ap_continue,
        ap_idle => A_PE_dummy228_U0_ap_idle,
        ap_ready => A_PE_dummy228_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_8_2_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_8_2_V_V_empty_n,
        fifo_A_in_V_V_read => A_PE_dummy228_U0_fifo_A_in_V_V_read);

    A_PE_dummy229_U0 : component kernel3_A_PE_dummy229
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => A_PE_dummy229_U0_ap_start,
        ap_done => A_PE_dummy229_U0_ap_done,
        ap_continue => A_PE_dummy229_U0_ap_continue,
        ap_idle => A_PE_dummy229_U0_ap_idle,
        ap_ready => A_PE_dummy229_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_9_2_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_9_2_V_V_empty_n,
        fifo_A_in_V_V_read => A_PE_dummy229_U0_fifo_A_in_V_V_read);

    A_PE_dummy230_U0 : component kernel3_A_PE_dummy230
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => A_PE_dummy230_U0_ap_start,
        ap_done => A_PE_dummy230_U0_ap_done,
        ap_continue => A_PE_dummy230_U0_ap_continue,
        ap_idle => A_PE_dummy230_U0_ap_idle,
        ap_ready => A_PE_dummy230_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_10_2_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_10_2_V_V_empty_n,
        fifo_A_in_V_V_read => A_PE_dummy230_U0_fifo_A_in_V_V_read);

    A_PE_dummy231_U0 : component kernel3_A_PE_dummy231
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => A_PE_dummy231_U0_ap_start,
        ap_done => A_PE_dummy231_U0_ap_done,
        ap_continue => A_PE_dummy231_U0_ap_continue,
        ap_idle => A_PE_dummy231_U0_ap_idle,
        ap_ready => A_PE_dummy231_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_11_2_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_11_2_V_V_empty_n,
        fifo_A_in_V_V_read => A_PE_dummy231_U0_fifo_A_in_V_V_read);

    A_PE_dummy_U0 : component kernel3_A_PE_dummy
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => A_PE_dummy_U0_ap_start,
        ap_done => A_PE_dummy_U0_ap_done,
        ap_continue => A_PE_dummy_U0_ap_continue,
        ap_idle => A_PE_dummy_U0_ap_idle,
        ap_ready => A_PE_dummy_U0_ap_ready,
        fifo_A_in_V_V_dout => fifo_A_PE_12_2_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_PE_12_2_V_V_empty_n,
        fifo_A_in_V_V_read => A_PE_dummy_U0_fifo_A_in_V_V_read);

    B_PE_dummy232_U0 : component kernel3_B_PE_dummy232
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => B_PE_dummy232_U0_ap_start,
        ap_done => B_PE_dummy232_U0_ap_done,
        ap_continue => B_PE_dummy232_U0_ap_continue,
        ap_idle => B_PE_dummy232_U0_ap_idle,
        ap_ready => B_PE_dummy232_U0_ap_ready,
        fifo_B_in_V_V_dout => fifo_B_PE_13_0_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_PE_13_0_V_V_empty_n,
        fifo_B_in_V_V_read => B_PE_dummy232_U0_fifo_B_in_V_V_read);

    B_PE_dummy_U0 : component kernel3_B_PE_dummy
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => B_PE_dummy_U0_ap_start,
        ap_done => B_PE_dummy_U0_ap_done,
        ap_continue => B_PE_dummy_U0_ap_continue,
        ap_idle => B_PE_dummy_U0_ap_idle,
        ap_ready => B_PE_dummy_U0_ap_ready,
        fifo_B_in_V_V_dout => fifo_B_PE_13_1_V_V_dout,
        fifo_B_in_V_V_empty_n => fifo_B_PE_13_1_V_V_empty_n,
        fifo_B_in_V_V_read => B_PE_dummy_U0_fifo_B_in_V_V_read);

    C_drain_IO_L1_out_boundary233_U0 : component kernel3_C_drain_IO_L1_out_boundary233
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L1_out_boundary233_U0_ap_start,
        ap_done => C_drain_IO_L1_out_boundary233_U0_ap_done,
        ap_continue => C_drain_IO_L1_out_boundary233_U0_ap_continue,
        ap_idle => C_drain_IO_L1_out_boundary233_U0_ap_idle,
        ap_ready => C_drain_IO_L1_out_boundary233_U0_ap_ready,
        fifo_C_drain_out_V_V_din => C_drain_IO_L1_out_boundary233_U0_fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n => fifo_C_drain_C_drain_IO_L1_out_0_12_V_V_full_n,
        fifo_C_drain_out_V_V_write => C_drain_IO_L1_out_boundary233_U0_fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_dout => fifo_C_drain_PE_12_0_V_dout,
        fifo_C_drain_local_in_V_empty_n => fifo_C_drain_PE_12_0_V_empty_n,
        fifo_C_drain_local_in_V_read => C_drain_IO_L1_out_boundary233_U0_fifo_C_drain_local_in_V_read);

    C_drain_IO_L1_out234_U0 : component kernel3_C_drain_IO_L1_out234
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L1_out234_U0_ap_start,
        ap_done => C_drain_IO_L1_out234_U0_ap_done,
        ap_continue => C_drain_IO_L1_out234_U0_ap_continue,
        ap_idle => C_drain_IO_L1_out234_U0_ap_idle,
        ap_ready => C_drain_IO_L1_out234_U0_ap_ready,
        fifo_C_drain_in_V_V_dout => fifo_C_drain_C_drain_IO_L1_out_0_12_V_V_dout,
        fifo_C_drain_in_V_V_empty_n => fifo_C_drain_C_drain_IO_L1_out_0_12_V_V_empty_n,
        fifo_C_drain_in_V_V_read => C_drain_IO_L1_out234_U0_fifo_C_drain_in_V_V_read,
        fifo_C_drain_out_V_V_din => C_drain_IO_L1_out234_U0_fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n => fifo_C_drain_C_drain_IO_L1_out_0_11_V_V_full_n,
        fifo_C_drain_out_V_V_write => C_drain_IO_L1_out234_U0_fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_dout => fifo_C_drain_PE_11_0_V_dout,
        fifo_C_drain_local_in_V_empty_n => fifo_C_drain_PE_11_0_V_empty_n,
        fifo_C_drain_local_in_V_read => C_drain_IO_L1_out234_U0_fifo_C_drain_local_in_V_read);

    C_drain_IO_L1_out235_U0 : component kernel3_C_drain_IO_L1_out235
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L1_out235_U0_ap_start,
        ap_done => C_drain_IO_L1_out235_U0_ap_done,
        ap_continue => C_drain_IO_L1_out235_U0_ap_continue,
        ap_idle => C_drain_IO_L1_out235_U0_ap_idle,
        ap_ready => C_drain_IO_L1_out235_U0_ap_ready,
        fifo_C_drain_in_V_V_dout => fifo_C_drain_C_drain_IO_L1_out_0_11_V_V_dout,
        fifo_C_drain_in_V_V_empty_n => fifo_C_drain_C_drain_IO_L1_out_0_11_V_V_empty_n,
        fifo_C_drain_in_V_V_read => C_drain_IO_L1_out235_U0_fifo_C_drain_in_V_V_read,
        fifo_C_drain_out_V_V_din => C_drain_IO_L1_out235_U0_fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n => fifo_C_drain_C_drain_IO_L1_out_0_10_V_V_full_n,
        fifo_C_drain_out_V_V_write => C_drain_IO_L1_out235_U0_fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_dout => fifo_C_drain_PE_10_0_V_dout,
        fifo_C_drain_local_in_V_empty_n => fifo_C_drain_PE_10_0_V_empty_n,
        fifo_C_drain_local_in_V_read => C_drain_IO_L1_out235_U0_fifo_C_drain_local_in_V_read);

    C_drain_IO_L1_out236_U0 : component kernel3_C_drain_IO_L1_out236
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L1_out236_U0_ap_start,
        ap_done => C_drain_IO_L1_out236_U0_ap_done,
        ap_continue => C_drain_IO_L1_out236_U0_ap_continue,
        ap_idle => C_drain_IO_L1_out236_U0_ap_idle,
        ap_ready => C_drain_IO_L1_out236_U0_ap_ready,
        fifo_C_drain_in_V_V_dout => fifo_C_drain_C_drain_IO_L1_out_0_10_V_V_dout,
        fifo_C_drain_in_V_V_empty_n => fifo_C_drain_C_drain_IO_L1_out_0_10_V_V_empty_n,
        fifo_C_drain_in_V_V_read => C_drain_IO_L1_out236_U0_fifo_C_drain_in_V_V_read,
        fifo_C_drain_out_V_V_din => C_drain_IO_L1_out236_U0_fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n => fifo_C_drain_C_drain_IO_L1_out_0_9_V_V_full_n,
        fifo_C_drain_out_V_V_write => C_drain_IO_L1_out236_U0_fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_dout => fifo_C_drain_PE_9_0_V_dout,
        fifo_C_drain_local_in_V_empty_n => fifo_C_drain_PE_9_0_V_empty_n,
        fifo_C_drain_local_in_V_read => C_drain_IO_L1_out236_U0_fifo_C_drain_local_in_V_read);

    C_drain_IO_L1_out237_U0 : component kernel3_C_drain_IO_L1_out237
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L1_out237_U0_ap_start,
        ap_done => C_drain_IO_L1_out237_U0_ap_done,
        ap_continue => C_drain_IO_L1_out237_U0_ap_continue,
        ap_idle => C_drain_IO_L1_out237_U0_ap_idle,
        ap_ready => C_drain_IO_L1_out237_U0_ap_ready,
        fifo_C_drain_in_V_V_dout => fifo_C_drain_C_drain_IO_L1_out_0_9_V_V_dout,
        fifo_C_drain_in_V_V_empty_n => fifo_C_drain_C_drain_IO_L1_out_0_9_V_V_empty_n,
        fifo_C_drain_in_V_V_read => C_drain_IO_L1_out237_U0_fifo_C_drain_in_V_V_read,
        fifo_C_drain_out_V_V_din => C_drain_IO_L1_out237_U0_fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n => fifo_C_drain_C_drain_IO_L1_out_0_8_V_V_full_n,
        fifo_C_drain_out_V_V_write => C_drain_IO_L1_out237_U0_fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_dout => fifo_C_drain_PE_8_0_V_dout,
        fifo_C_drain_local_in_V_empty_n => fifo_C_drain_PE_8_0_V_empty_n,
        fifo_C_drain_local_in_V_read => C_drain_IO_L1_out237_U0_fifo_C_drain_local_in_V_read);

    C_drain_IO_L1_out238_U0 : component kernel3_C_drain_IO_L1_out238
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L1_out238_U0_ap_start,
        ap_done => C_drain_IO_L1_out238_U0_ap_done,
        ap_continue => C_drain_IO_L1_out238_U0_ap_continue,
        ap_idle => C_drain_IO_L1_out238_U0_ap_idle,
        ap_ready => C_drain_IO_L1_out238_U0_ap_ready,
        fifo_C_drain_in_V_V_dout => fifo_C_drain_C_drain_IO_L1_out_0_8_V_V_dout,
        fifo_C_drain_in_V_V_empty_n => fifo_C_drain_C_drain_IO_L1_out_0_8_V_V_empty_n,
        fifo_C_drain_in_V_V_read => C_drain_IO_L1_out238_U0_fifo_C_drain_in_V_V_read,
        fifo_C_drain_out_V_V_din => C_drain_IO_L1_out238_U0_fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n => fifo_C_drain_C_drain_IO_L1_out_0_7_V_V_full_n,
        fifo_C_drain_out_V_V_write => C_drain_IO_L1_out238_U0_fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_dout => fifo_C_drain_PE_7_0_V_dout,
        fifo_C_drain_local_in_V_empty_n => fifo_C_drain_PE_7_0_V_empty_n,
        fifo_C_drain_local_in_V_read => C_drain_IO_L1_out238_U0_fifo_C_drain_local_in_V_read);

    C_drain_IO_L1_out239_U0 : component kernel3_C_drain_IO_L1_out239
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L1_out239_U0_ap_start,
        ap_done => C_drain_IO_L1_out239_U0_ap_done,
        ap_continue => C_drain_IO_L1_out239_U0_ap_continue,
        ap_idle => C_drain_IO_L1_out239_U0_ap_idle,
        ap_ready => C_drain_IO_L1_out239_U0_ap_ready,
        fifo_C_drain_in_V_V_dout => fifo_C_drain_C_drain_IO_L1_out_0_7_V_V_dout,
        fifo_C_drain_in_V_V_empty_n => fifo_C_drain_C_drain_IO_L1_out_0_7_V_V_empty_n,
        fifo_C_drain_in_V_V_read => C_drain_IO_L1_out239_U0_fifo_C_drain_in_V_V_read,
        fifo_C_drain_out_V_V_din => C_drain_IO_L1_out239_U0_fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n => fifo_C_drain_C_drain_IO_L1_out_0_6_V_V_full_n,
        fifo_C_drain_out_V_V_write => C_drain_IO_L1_out239_U0_fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_dout => fifo_C_drain_PE_6_0_V_dout,
        fifo_C_drain_local_in_V_empty_n => fifo_C_drain_PE_6_0_V_empty_n,
        fifo_C_drain_local_in_V_read => C_drain_IO_L1_out239_U0_fifo_C_drain_local_in_V_read);

    C_drain_IO_L1_out240_U0 : component kernel3_C_drain_IO_L1_out240
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L1_out240_U0_ap_start,
        ap_done => C_drain_IO_L1_out240_U0_ap_done,
        ap_continue => C_drain_IO_L1_out240_U0_ap_continue,
        ap_idle => C_drain_IO_L1_out240_U0_ap_idle,
        ap_ready => C_drain_IO_L1_out240_U0_ap_ready,
        fifo_C_drain_in_V_V_dout => fifo_C_drain_C_drain_IO_L1_out_0_6_V_V_dout,
        fifo_C_drain_in_V_V_empty_n => fifo_C_drain_C_drain_IO_L1_out_0_6_V_V_empty_n,
        fifo_C_drain_in_V_V_read => C_drain_IO_L1_out240_U0_fifo_C_drain_in_V_V_read,
        fifo_C_drain_out_V_V_din => C_drain_IO_L1_out240_U0_fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n => fifo_C_drain_C_drain_IO_L1_out_0_5_V_V_full_n,
        fifo_C_drain_out_V_V_write => C_drain_IO_L1_out240_U0_fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_dout => fifo_C_drain_PE_5_0_V_dout,
        fifo_C_drain_local_in_V_empty_n => fifo_C_drain_PE_5_0_V_empty_n,
        fifo_C_drain_local_in_V_read => C_drain_IO_L1_out240_U0_fifo_C_drain_local_in_V_read);

    C_drain_IO_L1_out241_U0 : component kernel3_C_drain_IO_L1_out241
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L1_out241_U0_ap_start,
        ap_done => C_drain_IO_L1_out241_U0_ap_done,
        ap_continue => C_drain_IO_L1_out241_U0_ap_continue,
        ap_idle => C_drain_IO_L1_out241_U0_ap_idle,
        ap_ready => C_drain_IO_L1_out241_U0_ap_ready,
        fifo_C_drain_in_V_V_dout => fifo_C_drain_C_drain_IO_L1_out_0_5_V_V_dout,
        fifo_C_drain_in_V_V_empty_n => fifo_C_drain_C_drain_IO_L1_out_0_5_V_V_empty_n,
        fifo_C_drain_in_V_V_read => C_drain_IO_L1_out241_U0_fifo_C_drain_in_V_V_read,
        fifo_C_drain_out_V_V_din => C_drain_IO_L1_out241_U0_fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n => fifo_C_drain_C_drain_IO_L1_out_0_4_V_V_full_n,
        fifo_C_drain_out_V_V_write => C_drain_IO_L1_out241_U0_fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_dout => fifo_C_drain_PE_4_0_V_dout,
        fifo_C_drain_local_in_V_empty_n => fifo_C_drain_PE_4_0_V_empty_n,
        fifo_C_drain_local_in_V_read => C_drain_IO_L1_out241_U0_fifo_C_drain_local_in_V_read);

    C_drain_IO_L1_out242_U0 : component kernel3_C_drain_IO_L1_out242
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L1_out242_U0_ap_start,
        ap_done => C_drain_IO_L1_out242_U0_ap_done,
        ap_continue => C_drain_IO_L1_out242_U0_ap_continue,
        ap_idle => C_drain_IO_L1_out242_U0_ap_idle,
        ap_ready => C_drain_IO_L1_out242_U0_ap_ready,
        fifo_C_drain_in_V_V_dout => fifo_C_drain_C_drain_IO_L1_out_0_4_V_V_dout,
        fifo_C_drain_in_V_V_empty_n => fifo_C_drain_C_drain_IO_L1_out_0_4_V_V_empty_n,
        fifo_C_drain_in_V_V_read => C_drain_IO_L1_out242_U0_fifo_C_drain_in_V_V_read,
        fifo_C_drain_out_V_V_din => C_drain_IO_L1_out242_U0_fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n => fifo_C_drain_C_drain_IO_L1_out_0_3_V_V_full_n,
        fifo_C_drain_out_V_V_write => C_drain_IO_L1_out242_U0_fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_dout => fifo_C_drain_PE_3_0_V_dout,
        fifo_C_drain_local_in_V_empty_n => fifo_C_drain_PE_3_0_V_empty_n,
        fifo_C_drain_local_in_V_read => C_drain_IO_L1_out242_U0_fifo_C_drain_local_in_V_read);

    C_drain_IO_L1_out243_U0 : component kernel3_C_drain_IO_L1_out243
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L1_out243_U0_ap_start,
        ap_done => C_drain_IO_L1_out243_U0_ap_done,
        ap_continue => C_drain_IO_L1_out243_U0_ap_continue,
        ap_idle => C_drain_IO_L1_out243_U0_ap_idle,
        ap_ready => C_drain_IO_L1_out243_U0_ap_ready,
        fifo_C_drain_in_V_V_dout => fifo_C_drain_C_drain_IO_L1_out_0_3_V_V_dout,
        fifo_C_drain_in_V_V_empty_n => fifo_C_drain_C_drain_IO_L1_out_0_3_V_V_empty_n,
        fifo_C_drain_in_V_V_read => C_drain_IO_L1_out243_U0_fifo_C_drain_in_V_V_read,
        fifo_C_drain_out_V_V_din => C_drain_IO_L1_out243_U0_fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n => fifo_C_drain_C_drain_IO_L1_out_0_2_V_V_full_n,
        fifo_C_drain_out_V_V_write => C_drain_IO_L1_out243_U0_fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_dout => fifo_C_drain_PE_2_0_V_dout,
        fifo_C_drain_local_in_V_empty_n => fifo_C_drain_PE_2_0_V_empty_n,
        fifo_C_drain_local_in_V_read => C_drain_IO_L1_out243_U0_fifo_C_drain_local_in_V_read);

    C_drain_IO_L1_out244_U0 : component kernel3_C_drain_IO_L1_out244
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L1_out244_U0_ap_start,
        ap_done => C_drain_IO_L1_out244_U0_ap_done,
        ap_continue => C_drain_IO_L1_out244_U0_ap_continue,
        ap_idle => C_drain_IO_L1_out244_U0_ap_idle,
        ap_ready => C_drain_IO_L1_out244_U0_ap_ready,
        fifo_C_drain_in_V_V_dout => fifo_C_drain_C_drain_IO_L1_out_0_2_V_V_dout,
        fifo_C_drain_in_V_V_empty_n => fifo_C_drain_C_drain_IO_L1_out_0_2_V_V_empty_n,
        fifo_C_drain_in_V_V_read => C_drain_IO_L1_out244_U0_fifo_C_drain_in_V_V_read,
        fifo_C_drain_out_V_V_din => C_drain_IO_L1_out244_U0_fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n => fifo_C_drain_C_drain_IO_L1_out_0_1_V_V_full_n,
        fifo_C_drain_out_V_V_write => C_drain_IO_L1_out244_U0_fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_dout => fifo_C_drain_PE_1_0_V_dout,
        fifo_C_drain_local_in_V_empty_n => fifo_C_drain_PE_1_0_V_empty_n,
        fifo_C_drain_local_in_V_read => C_drain_IO_L1_out244_U0_fifo_C_drain_local_in_V_read);

    C_drain_IO_L1_out245_U0 : component kernel3_C_drain_IO_L1_out245
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L1_out245_U0_ap_start,
        ap_done => C_drain_IO_L1_out245_U0_ap_done,
        ap_continue => C_drain_IO_L1_out245_U0_ap_continue,
        ap_idle => C_drain_IO_L1_out245_U0_ap_idle,
        ap_ready => C_drain_IO_L1_out245_U0_ap_ready,
        fifo_C_drain_in_V_V_dout => fifo_C_drain_C_drain_IO_L1_out_0_1_V_V_dout,
        fifo_C_drain_in_V_V_empty_n => fifo_C_drain_C_drain_IO_L1_out_0_1_V_V_empty_n,
        fifo_C_drain_in_V_V_read => C_drain_IO_L1_out245_U0_fifo_C_drain_in_V_V_read,
        fifo_C_drain_out_V_V_din => C_drain_IO_L1_out245_U0_fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n => fifo_C_drain_C_drain_IO_L1_out_0_0_V_V_full_n,
        fifo_C_drain_out_V_V_write => C_drain_IO_L1_out245_U0_fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_dout => fifo_C_drain_PE_0_0_V_dout,
        fifo_C_drain_local_in_V_empty_n => fifo_C_drain_PE_0_0_V_empty_n,
        fifo_C_drain_local_in_V_read => C_drain_IO_L1_out245_U0_fifo_C_drain_local_in_V_read);

    C_drain_IO_L1_out_boundary_U0 : component kernel3_C_drain_IO_L1_out_boundary
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L1_out_boundary_U0_ap_start,
        ap_done => C_drain_IO_L1_out_boundary_U0_ap_done,
        ap_continue => C_drain_IO_L1_out_boundary_U0_ap_continue,
        ap_idle => C_drain_IO_L1_out_boundary_U0_ap_idle,
        ap_ready => C_drain_IO_L1_out_boundary_U0_ap_ready,
        fifo_C_drain_out_V_V_din => C_drain_IO_L1_out_boundary_U0_fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n => fifo_C_drain_C_drain_IO_L1_out_1_12_V_V_full_n,
        fifo_C_drain_out_V_V_write => C_drain_IO_L1_out_boundary_U0_fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_dout => fifo_C_drain_PE_12_1_V_dout,
        fifo_C_drain_local_in_V_empty_n => fifo_C_drain_PE_12_1_V_empty_n,
        fifo_C_drain_local_in_V_read => C_drain_IO_L1_out_boundary_U0_fifo_C_drain_local_in_V_read);

    C_drain_IO_L1_out246_U0 : component kernel3_C_drain_IO_L1_out246
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L1_out246_U0_ap_start,
        ap_done => C_drain_IO_L1_out246_U0_ap_done,
        ap_continue => C_drain_IO_L1_out246_U0_ap_continue,
        ap_idle => C_drain_IO_L1_out246_U0_ap_idle,
        ap_ready => C_drain_IO_L1_out246_U0_ap_ready,
        fifo_C_drain_in_V_V_dout => fifo_C_drain_C_drain_IO_L1_out_1_12_V_V_dout,
        fifo_C_drain_in_V_V_empty_n => fifo_C_drain_C_drain_IO_L1_out_1_12_V_V_empty_n,
        fifo_C_drain_in_V_V_read => C_drain_IO_L1_out246_U0_fifo_C_drain_in_V_V_read,
        fifo_C_drain_out_V_V_din => C_drain_IO_L1_out246_U0_fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n => fifo_C_drain_C_drain_IO_L1_out_1_11_V_V_full_n,
        fifo_C_drain_out_V_V_write => C_drain_IO_L1_out246_U0_fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_dout => fifo_C_drain_PE_11_1_V_dout,
        fifo_C_drain_local_in_V_empty_n => fifo_C_drain_PE_11_1_V_empty_n,
        fifo_C_drain_local_in_V_read => C_drain_IO_L1_out246_U0_fifo_C_drain_local_in_V_read);

    C_drain_IO_L1_out247_U0 : component kernel3_C_drain_IO_L1_out247
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L1_out247_U0_ap_start,
        ap_done => C_drain_IO_L1_out247_U0_ap_done,
        ap_continue => C_drain_IO_L1_out247_U0_ap_continue,
        ap_idle => C_drain_IO_L1_out247_U0_ap_idle,
        ap_ready => C_drain_IO_L1_out247_U0_ap_ready,
        fifo_C_drain_in_V_V_dout => fifo_C_drain_C_drain_IO_L1_out_1_11_V_V_dout,
        fifo_C_drain_in_V_V_empty_n => fifo_C_drain_C_drain_IO_L1_out_1_11_V_V_empty_n,
        fifo_C_drain_in_V_V_read => C_drain_IO_L1_out247_U0_fifo_C_drain_in_V_V_read,
        fifo_C_drain_out_V_V_din => C_drain_IO_L1_out247_U0_fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n => fifo_C_drain_C_drain_IO_L1_out_1_10_V_V_full_n,
        fifo_C_drain_out_V_V_write => C_drain_IO_L1_out247_U0_fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_dout => fifo_C_drain_PE_10_1_V_dout,
        fifo_C_drain_local_in_V_empty_n => fifo_C_drain_PE_10_1_V_empty_n,
        fifo_C_drain_local_in_V_read => C_drain_IO_L1_out247_U0_fifo_C_drain_local_in_V_read);

    C_drain_IO_L1_out248_U0 : component kernel3_C_drain_IO_L1_out248
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L1_out248_U0_ap_start,
        ap_done => C_drain_IO_L1_out248_U0_ap_done,
        ap_continue => C_drain_IO_L1_out248_U0_ap_continue,
        ap_idle => C_drain_IO_L1_out248_U0_ap_idle,
        ap_ready => C_drain_IO_L1_out248_U0_ap_ready,
        fifo_C_drain_in_V_V_dout => fifo_C_drain_C_drain_IO_L1_out_1_10_V_V_dout,
        fifo_C_drain_in_V_V_empty_n => fifo_C_drain_C_drain_IO_L1_out_1_10_V_V_empty_n,
        fifo_C_drain_in_V_V_read => C_drain_IO_L1_out248_U0_fifo_C_drain_in_V_V_read,
        fifo_C_drain_out_V_V_din => C_drain_IO_L1_out248_U0_fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n => fifo_C_drain_C_drain_IO_L1_out_1_9_V_V_full_n,
        fifo_C_drain_out_V_V_write => C_drain_IO_L1_out248_U0_fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_dout => fifo_C_drain_PE_9_1_V_dout,
        fifo_C_drain_local_in_V_empty_n => fifo_C_drain_PE_9_1_V_empty_n,
        fifo_C_drain_local_in_V_read => C_drain_IO_L1_out248_U0_fifo_C_drain_local_in_V_read);

    C_drain_IO_L1_out249_U0 : component kernel3_C_drain_IO_L1_out249
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L1_out249_U0_ap_start,
        ap_done => C_drain_IO_L1_out249_U0_ap_done,
        ap_continue => C_drain_IO_L1_out249_U0_ap_continue,
        ap_idle => C_drain_IO_L1_out249_U0_ap_idle,
        ap_ready => C_drain_IO_L1_out249_U0_ap_ready,
        fifo_C_drain_in_V_V_dout => fifo_C_drain_C_drain_IO_L1_out_1_9_V_V_dout,
        fifo_C_drain_in_V_V_empty_n => fifo_C_drain_C_drain_IO_L1_out_1_9_V_V_empty_n,
        fifo_C_drain_in_V_V_read => C_drain_IO_L1_out249_U0_fifo_C_drain_in_V_V_read,
        fifo_C_drain_out_V_V_din => C_drain_IO_L1_out249_U0_fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n => fifo_C_drain_C_drain_IO_L1_out_1_8_V_V_full_n,
        fifo_C_drain_out_V_V_write => C_drain_IO_L1_out249_U0_fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_dout => fifo_C_drain_PE_8_1_V_dout,
        fifo_C_drain_local_in_V_empty_n => fifo_C_drain_PE_8_1_V_empty_n,
        fifo_C_drain_local_in_V_read => C_drain_IO_L1_out249_U0_fifo_C_drain_local_in_V_read);

    C_drain_IO_L1_out250_U0 : component kernel3_C_drain_IO_L1_out250
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L1_out250_U0_ap_start,
        ap_done => C_drain_IO_L1_out250_U0_ap_done,
        ap_continue => C_drain_IO_L1_out250_U0_ap_continue,
        ap_idle => C_drain_IO_L1_out250_U0_ap_idle,
        ap_ready => C_drain_IO_L1_out250_U0_ap_ready,
        fifo_C_drain_in_V_V_dout => fifo_C_drain_C_drain_IO_L1_out_1_8_V_V_dout,
        fifo_C_drain_in_V_V_empty_n => fifo_C_drain_C_drain_IO_L1_out_1_8_V_V_empty_n,
        fifo_C_drain_in_V_V_read => C_drain_IO_L1_out250_U0_fifo_C_drain_in_V_V_read,
        fifo_C_drain_out_V_V_din => C_drain_IO_L1_out250_U0_fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n => fifo_C_drain_C_drain_IO_L1_out_1_7_V_V_full_n,
        fifo_C_drain_out_V_V_write => C_drain_IO_L1_out250_U0_fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_dout => fifo_C_drain_PE_7_1_V_dout,
        fifo_C_drain_local_in_V_empty_n => fifo_C_drain_PE_7_1_V_empty_n,
        fifo_C_drain_local_in_V_read => C_drain_IO_L1_out250_U0_fifo_C_drain_local_in_V_read);

    C_drain_IO_L1_out251_U0 : component kernel3_C_drain_IO_L1_out251
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L1_out251_U0_ap_start,
        ap_done => C_drain_IO_L1_out251_U0_ap_done,
        ap_continue => C_drain_IO_L1_out251_U0_ap_continue,
        ap_idle => C_drain_IO_L1_out251_U0_ap_idle,
        ap_ready => C_drain_IO_L1_out251_U0_ap_ready,
        fifo_C_drain_in_V_V_dout => fifo_C_drain_C_drain_IO_L1_out_1_7_V_V_dout,
        fifo_C_drain_in_V_V_empty_n => fifo_C_drain_C_drain_IO_L1_out_1_7_V_V_empty_n,
        fifo_C_drain_in_V_V_read => C_drain_IO_L1_out251_U0_fifo_C_drain_in_V_V_read,
        fifo_C_drain_out_V_V_din => C_drain_IO_L1_out251_U0_fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n => fifo_C_drain_C_drain_IO_L1_out_1_6_V_V_full_n,
        fifo_C_drain_out_V_V_write => C_drain_IO_L1_out251_U0_fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_dout => fifo_C_drain_PE_6_1_V_dout,
        fifo_C_drain_local_in_V_empty_n => fifo_C_drain_PE_6_1_V_empty_n,
        fifo_C_drain_local_in_V_read => C_drain_IO_L1_out251_U0_fifo_C_drain_local_in_V_read);

    C_drain_IO_L1_out252_U0 : component kernel3_C_drain_IO_L1_out252
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L1_out252_U0_ap_start,
        ap_done => C_drain_IO_L1_out252_U0_ap_done,
        ap_continue => C_drain_IO_L1_out252_U0_ap_continue,
        ap_idle => C_drain_IO_L1_out252_U0_ap_idle,
        ap_ready => C_drain_IO_L1_out252_U0_ap_ready,
        fifo_C_drain_in_V_V_dout => fifo_C_drain_C_drain_IO_L1_out_1_6_V_V_dout,
        fifo_C_drain_in_V_V_empty_n => fifo_C_drain_C_drain_IO_L1_out_1_6_V_V_empty_n,
        fifo_C_drain_in_V_V_read => C_drain_IO_L1_out252_U0_fifo_C_drain_in_V_V_read,
        fifo_C_drain_out_V_V_din => C_drain_IO_L1_out252_U0_fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n => fifo_C_drain_C_drain_IO_L1_out_1_5_V_V_full_n,
        fifo_C_drain_out_V_V_write => C_drain_IO_L1_out252_U0_fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_dout => fifo_C_drain_PE_5_1_V_dout,
        fifo_C_drain_local_in_V_empty_n => fifo_C_drain_PE_5_1_V_empty_n,
        fifo_C_drain_local_in_V_read => C_drain_IO_L1_out252_U0_fifo_C_drain_local_in_V_read);

    C_drain_IO_L1_out253_U0 : component kernel3_C_drain_IO_L1_out253
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L1_out253_U0_ap_start,
        ap_done => C_drain_IO_L1_out253_U0_ap_done,
        ap_continue => C_drain_IO_L1_out253_U0_ap_continue,
        ap_idle => C_drain_IO_L1_out253_U0_ap_idle,
        ap_ready => C_drain_IO_L1_out253_U0_ap_ready,
        fifo_C_drain_in_V_V_dout => fifo_C_drain_C_drain_IO_L1_out_1_5_V_V_dout,
        fifo_C_drain_in_V_V_empty_n => fifo_C_drain_C_drain_IO_L1_out_1_5_V_V_empty_n,
        fifo_C_drain_in_V_V_read => C_drain_IO_L1_out253_U0_fifo_C_drain_in_V_V_read,
        fifo_C_drain_out_V_V_din => C_drain_IO_L1_out253_U0_fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n => fifo_C_drain_C_drain_IO_L1_out_1_4_V_V_full_n,
        fifo_C_drain_out_V_V_write => C_drain_IO_L1_out253_U0_fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_dout => fifo_C_drain_PE_4_1_V_dout,
        fifo_C_drain_local_in_V_empty_n => fifo_C_drain_PE_4_1_V_empty_n,
        fifo_C_drain_local_in_V_read => C_drain_IO_L1_out253_U0_fifo_C_drain_local_in_V_read);

    C_drain_IO_L1_out254_U0 : component kernel3_C_drain_IO_L1_out254
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L1_out254_U0_ap_start,
        ap_done => C_drain_IO_L1_out254_U0_ap_done,
        ap_continue => C_drain_IO_L1_out254_U0_ap_continue,
        ap_idle => C_drain_IO_L1_out254_U0_ap_idle,
        ap_ready => C_drain_IO_L1_out254_U0_ap_ready,
        fifo_C_drain_in_V_V_dout => fifo_C_drain_C_drain_IO_L1_out_1_4_V_V_dout,
        fifo_C_drain_in_V_V_empty_n => fifo_C_drain_C_drain_IO_L1_out_1_4_V_V_empty_n,
        fifo_C_drain_in_V_V_read => C_drain_IO_L1_out254_U0_fifo_C_drain_in_V_V_read,
        fifo_C_drain_out_V_V_din => C_drain_IO_L1_out254_U0_fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n => fifo_C_drain_C_drain_IO_L1_out_1_3_V_V_full_n,
        fifo_C_drain_out_V_V_write => C_drain_IO_L1_out254_U0_fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_dout => fifo_C_drain_PE_3_1_V_dout,
        fifo_C_drain_local_in_V_empty_n => fifo_C_drain_PE_3_1_V_empty_n,
        fifo_C_drain_local_in_V_read => C_drain_IO_L1_out254_U0_fifo_C_drain_local_in_V_read);

    C_drain_IO_L1_out255_U0 : component kernel3_C_drain_IO_L1_out255
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L1_out255_U0_ap_start,
        ap_done => C_drain_IO_L1_out255_U0_ap_done,
        ap_continue => C_drain_IO_L1_out255_U0_ap_continue,
        ap_idle => C_drain_IO_L1_out255_U0_ap_idle,
        ap_ready => C_drain_IO_L1_out255_U0_ap_ready,
        fifo_C_drain_in_V_V_dout => fifo_C_drain_C_drain_IO_L1_out_1_3_V_V_dout,
        fifo_C_drain_in_V_V_empty_n => fifo_C_drain_C_drain_IO_L1_out_1_3_V_V_empty_n,
        fifo_C_drain_in_V_V_read => C_drain_IO_L1_out255_U0_fifo_C_drain_in_V_V_read,
        fifo_C_drain_out_V_V_din => C_drain_IO_L1_out255_U0_fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n => fifo_C_drain_C_drain_IO_L1_out_1_2_V_V_full_n,
        fifo_C_drain_out_V_V_write => C_drain_IO_L1_out255_U0_fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_dout => fifo_C_drain_PE_2_1_V_dout,
        fifo_C_drain_local_in_V_empty_n => fifo_C_drain_PE_2_1_V_empty_n,
        fifo_C_drain_local_in_V_read => C_drain_IO_L1_out255_U0_fifo_C_drain_local_in_V_read);

    C_drain_IO_L1_out256_U0 : component kernel3_C_drain_IO_L1_out256
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L1_out256_U0_ap_start,
        ap_done => C_drain_IO_L1_out256_U0_ap_done,
        ap_continue => C_drain_IO_L1_out256_U0_ap_continue,
        ap_idle => C_drain_IO_L1_out256_U0_ap_idle,
        ap_ready => C_drain_IO_L1_out256_U0_ap_ready,
        fifo_C_drain_in_V_V_dout => fifo_C_drain_C_drain_IO_L1_out_1_2_V_V_dout,
        fifo_C_drain_in_V_V_empty_n => fifo_C_drain_C_drain_IO_L1_out_1_2_V_V_empty_n,
        fifo_C_drain_in_V_V_read => C_drain_IO_L1_out256_U0_fifo_C_drain_in_V_V_read,
        fifo_C_drain_out_V_V_din => C_drain_IO_L1_out256_U0_fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n => fifo_C_drain_C_drain_IO_L1_out_1_1_V_V_full_n,
        fifo_C_drain_out_V_V_write => C_drain_IO_L1_out256_U0_fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_dout => fifo_C_drain_PE_1_1_V_dout,
        fifo_C_drain_local_in_V_empty_n => fifo_C_drain_PE_1_1_V_empty_n,
        fifo_C_drain_local_in_V_read => C_drain_IO_L1_out256_U0_fifo_C_drain_local_in_V_read);

    C_drain_IO_L1_out257_U0 : component kernel3_C_drain_IO_L1_out257
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L1_out257_U0_ap_start,
        ap_done => C_drain_IO_L1_out257_U0_ap_done,
        ap_continue => C_drain_IO_L1_out257_U0_ap_continue,
        ap_idle => C_drain_IO_L1_out257_U0_ap_idle,
        ap_ready => C_drain_IO_L1_out257_U0_ap_ready,
        fifo_C_drain_in_V_V_dout => fifo_C_drain_C_drain_IO_L1_out_1_1_V_V_dout,
        fifo_C_drain_in_V_V_empty_n => fifo_C_drain_C_drain_IO_L1_out_1_1_V_V_empty_n,
        fifo_C_drain_in_V_V_read => C_drain_IO_L1_out257_U0_fifo_C_drain_in_V_V_read,
        fifo_C_drain_out_V_V_din => C_drain_IO_L1_out257_U0_fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n => fifo_C_drain_C_drain_IO_L1_out_1_0_V_V_full_n,
        fifo_C_drain_out_V_V_write => C_drain_IO_L1_out257_U0_fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_dout => fifo_C_drain_PE_0_1_V_dout,
        fifo_C_drain_local_in_V_empty_n => fifo_C_drain_PE_0_1_V_empty_n,
        fifo_C_drain_local_in_V_read => C_drain_IO_L1_out257_U0_fifo_C_drain_local_in_V_read);

    C_drain_IO_L2_out_boundary_U0 : component kernel3_C_drain_IO_L2_out_boundary
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L2_out_boundary_U0_ap_start,
        ap_done => C_drain_IO_L2_out_boundary_U0_ap_done,
        ap_continue => C_drain_IO_L2_out_boundary_U0_ap_continue,
        ap_idle => C_drain_IO_L2_out_boundary_U0_ap_idle,
        ap_ready => C_drain_IO_L2_out_boundary_U0_ap_ready,
        fifo_C_drain_out_V_V_din => C_drain_IO_L2_out_boundary_U0_fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n => fifo_C_drain_C_drain_IO_L2_out_1_V_V_full_n,
        fifo_C_drain_out_V_V_write => C_drain_IO_L2_out_boundary_U0_fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_V_dout => fifo_C_drain_C_drain_IO_L1_out_1_0_V_V_dout,
        fifo_C_drain_local_in_V_V_empty_n => fifo_C_drain_C_drain_IO_L1_out_1_0_V_V_empty_n,
        fifo_C_drain_local_in_V_V_read => C_drain_IO_L2_out_boundary_U0_fifo_C_drain_local_in_V_V_read);

    C_drain_IO_L2_out_U0 : component kernel3_C_drain_IO_L2_out
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L2_out_U0_ap_start,
        ap_done => C_drain_IO_L2_out_U0_ap_done,
        ap_continue => C_drain_IO_L2_out_U0_ap_continue,
        ap_idle => C_drain_IO_L2_out_U0_ap_idle,
        ap_ready => C_drain_IO_L2_out_U0_ap_ready,
        fifo_C_drain_in_V_V_dout => fifo_C_drain_C_drain_IO_L2_out_1_V_V_dout,
        fifo_C_drain_in_V_V_empty_n => fifo_C_drain_C_drain_IO_L2_out_1_V_V_empty_n,
        fifo_C_drain_in_V_V_read => C_drain_IO_L2_out_U0_fifo_C_drain_in_V_V_read,
        fifo_C_drain_out_V_V_din => C_drain_IO_L2_out_U0_fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n => fifo_C_drain_C_drain_IO_L2_out_0_V_V_full_n,
        fifo_C_drain_out_V_V_write => C_drain_IO_L2_out_U0_fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_V_dout => fifo_C_drain_C_drain_IO_L1_out_0_0_V_V_dout,
        fifo_C_drain_local_in_V_V_empty_n => fifo_C_drain_C_drain_IO_L1_out_0_0_V_V_empty_n,
        fifo_C_drain_local_in_V_V_read => C_drain_IO_L2_out_U0_fifo_C_drain_local_in_V_V_read);

    C_drain_IO_L3_out_U0 : component kernel3_C_drain_IO_L3_out
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => C_drain_IO_L3_out_U0_ap_start,
        ap_done => C_drain_IO_L3_out_U0_ap_done,
        ap_continue => C_drain_IO_L3_out_U0_ap_continue,
        ap_idle => C_drain_IO_L3_out_U0_ap_idle,
        ap_ready => C_drain_IO_L3_out_U0_ap_ready,
        m_axi_C_V_AWVALID => C_drain_IO_L3_out_U0_m_axi_C_V_AWVALID,
        m_axi_C_V_AWREADY => gmem_C_AWREADY,
        m_axi_C_V_AWADDR => C_drain_IO_L3_out_U0_m_axi_C_V_AWADDR,
        m_axi_C_V_AWID => C_drain_IO_L3_out_U0_m_axi_C_V_AWID,
        m_axi_C_V_AWLEN => C_drain_IO_L3_out_U0_m_axi_C_V_AWLEN,
        m_axi_C_V_AWSIZE => C_drain_IO_L3_out_U0_m_axi_C_V_AWSIZE,
        m_axi_C_V_AWBURST => C_drain_IO_L3_out_U0_m_axi_C_V_AWBURST,
        m_axi_C_V_AWLOCK => C_drain_IO_L3_out_U0_m_axi_C_V_AWLOCK,
        m_axi_C_V_AWCACHE => C_drain_IO_L3_out_U0_m_axi_C_V_AWCACHE,
        m_axi_C_V_AWPROT => C_drain_IO_L3_out_U0_m_axi_C_V_AWPROT,
        m_axi_C_V_AWQOS => C_drain_IO_L3_out_U0_m_axi_C_V_AWQOS,
        m_axi_C_V_AWREGION => C_drain_IO_L3_out_U0_m_axi_C_V_AWREGION,
        m_axi_C_V_AWUSER => C_drain_IO_L3_out_U0_m_axi_C_V_AWUSER,
        m_axi_C_V_WVALID => C_drain_IO_L3_out_U0_m_axi_C_V_WVALID,
        m_axi_C_V_WREADY => gmem_C_WREADY,
        m_axi_C_V_WDATA => C_drain_IO_L3_out_U0_m_axi_C_V_WDATA,
        m_axi_C_V_WSTRB => C_drain_IO_L3_out_U0_m_axi_C_V_WSTRB,
        m_axi_C_V_WLAST => C_drain_IO_L3_out_U0_m_axi_C_V_WLAST,
        m_axi_C_V_WID => C_drain_IO_L3_out_U0_m_axi_C_V_WID,
        m_axi_C_V_WUSER => C_drain_IO_L3_out_U0_m_axi_C_V_WUSER,
        m_axi_C_V_ARVALID => C_drain_IO_L3_out_U0_m_axi_C_V_ARVALID,
        m_axi_C_V_ARREADY => ap_const_logic_0,
        m_axi_C_V_ARADDR => C_drain_IO_L3_out_U0_m_axi_C_V_ARADDR,
        m_axi_C_V_ARID => C_drain_IO_L3_out_U0_m_axi_C_V_ARID,
        m_axi_C_V_ARLEN => C_drain_IO_L3_out_U0_m_axi_C_V_ARLEN,
        m_axi_C_V_ARSIZE => C_drain_IO_L3_out_U0_m_axi_C_V_ARSIZE,
        m_axi_C_V_ARBURST => C_drain_IO_L3_out_U0_m_axi_C_V_ARBURST,
        m_axi_C_V_ARLOCK => C_drain_IO_L3_out_U0_m_axi_C_V_ARLOCK,
        m_axi_C_V_ARCACHE => C_drain_IO_L3_out_U0_m_axi_C_V_ARCACHE,
        m_axi_C_V_ARPROT => C_drain_IO_L3_out_U0_m_axi_C_V_ARPROT,
        m_axi_C_V_ARQOS => C_drain_IO_L3_out_U0_m_axi_C_V_ARQOS,
        m_axi_C_V_ARREGION => C_drain_IO_L3_out_U0_m_axi_C_V_ARREGION,
        m_axi_C_V_ARUSER => C_drain_IO_L3_out_U0_m_axi_C_V_ARUSER,
        m_axi_C_V_RVALID => ap_const_logic_0,
        m_axi_C_V_RREADY => C_drain_IO_L3_out_U0_m_axi_C_V_RREADY,
        m_axi_C_V_RDATA => ap_const_lv512_lc_1,
        m_axi_C_V_RLAST => ap_const_logic_0,
        m_axi_C_V_RID => ap_const_lv1_0,
        m_axi_C_V_RUSER => ap_const_lv1_0,
        m_axi_C_V_RRESP => ap_const_lv2_0,
        m_axi_C_V_BVALID => gmem_C_BVALID,
        m_axi_C_V_BREADY => C_drain_IO_L3_out_U0_m_axi_C_V_BREADY,
        m_axi_C_V_BRESP => gmem_C_BRESP,
        m_axi_C_V_BID => gmem_C_BID,
        m_axi_C_V_BUSER => gmem_C_BUSER,
        C_V_offset_dout => C_V_c_dout,
        C_V_offset_empty_n => C_V_c_empty_n,
        C_V_offset_read => C_drain_IO_L3_out_U0_C_V_offset_read,
        fifo_C_drain_local_in_V_V_dout => fifo_C_drain_C_drain_IO_L2_out_0_V_V_dout,
        fifo_C_drain_local_in_V_V_empty_n => fifo_C_drain_C_drain_IO_L2_out_0_V_V_empty_n,
        fifo_C_drain_local_in_V_V_read => C_drain_IO_L3_out_U0_fifo_C_drain_local_in_V_V_read);

    A_V_c_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => kernel3_entry14_U0_A_V_out_din,
        if_full_n => A_V_c_full_n,
        if_write => kernel3_entry14_U0_A_V_out_write,
        if_dout => A_V_c_dout,
        if_empty_n => A_V_c_empty_n,
        if_read => A_IO_L3_in_U0_A_V_offset_read);

    B_V_c_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => kernel3_entry14_U0_B_V_out_din,
        if_full_n => B_V_c_full_n,
        if_write => kernel3_entry14_U0_B_V_out_write,
        if_dout => B_V_c_dout,
        if_empty_n => B_V_c_empty_n,
        if_read => B_IO_L3_in_U0_B_V_offset_read);

    C_V_c_U : component kernel3_fifo_w64_d33_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => kernel3_entry14_U0_C_V_out_din,
        if_full_n => C_V_c_full_n,
        if_write => kernel3_entry14_U0_C_V_out_write,
        if_dout => C_V_c_dout,
        if_empty_n => C_V_c_empty_n,
        if_read => C_drain_IO_L3_out_U0_C_V_offset_read);

    fifo_A_A_IO_L2_in_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => A_IO_L3_in_U0_fifo_A_local_out_V_V_din,
        if_full_n => fifo_A_A_IO_L2_in_0_V_V_full_n,
        if_write => A_IO_L3_in_U0_fifo_A_local_out_V_V_write,
        if_dout => fifo_A_A_IO_L2_in_0_V_V_dout,
        if_empty_n => fifo_A_A_IO_L2_in_0_V_V_empty_n,
        if_read => A_IO_L2_in208_U0_fifo_A_in_V_V_read);

    fifo_A_A_IO_L2_in_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => A_IO_L2_in208_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_A_IO_L2_in_1_V_V_full_n,
        if_write => A_IO_L2_in208_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_A_IO_L2_in_1_V_V_dout,
        if_empty_n => fifo_A_A_IO_L2_in_1_V_V_empty_n,
        if_read => A_IO_L2_in209_U0_fifo_A_in_V_V_read);

    fifo_A_PE_0_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => A_IO_L2_in208_U0_fifo_A_local_out_V_V_din,
        if_full_n => fifo_A_PE_0_0_V_V_full_n,
        if_write => A_IO_L2_in208_U0_fifo_A_local_out_V_V_write,
        if_dout => fifo_A_PE_0_0_V_V_dout,
        if_empty_n => fifo_A_PE_0_0_V_V_empty_n,
        if_read => PE_wrapper_0_0_U0_fifo_A_in_V_V_read);

    fifo_A_A_IO_L2_in_2_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => A_IO_L2_in209_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_A_IO_L2_in_2_V_V_full_n,
        if_write => A_IO_L2_in209_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_A_IO_L2_in_2_V_V_dout,
        if_empty_n => fifo_A_A_IO_L2_in_2_V_V_empty_n,
        if_read => A_IO_L2_in210_U0_fifo_A_in_V_V_read);

    fifo_A_PE_1_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => A_IO_L2_in209_U0_fifo_A_local_out_V_V_din,
        if_full_n => fifo_A_PE_1_0_V_V_full_n,
        if_write => A_IO_L2_in209_U0_fifo_A_local_out_V_V_write,
        if_dout => fifo_A_PE_1_0_V_V_dout,
        if_empty_n => fifo_A_PE_1_0_V_V_empty_n,
        if_read => PE_wrapper_1_0_U0_fifo_A_in_V_V_read);

    fifo_A_A_IO_L2_in_3_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => A_IO_L2_in210_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_A_IO_L2_in_3_V_V_full_n,
        if_write => A_IO_L2_in210_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_A_IO_L2_in_3_V_V_dout,
        if_empty_n => fifo_A_A_IO_L2_in_3_V_V_empty_n,
        if_read => A_IO_L2_in211_U0_fifo_A_in_V_V_read);

    fifo_A_PE_2_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => A_IO_L2_in210_U0_fifo_A_local_out_V_V_din,
        if_full_n => fifo_A_PE_2_0_V_V_full_n,
        if_write => A_IO_L2_in210_U0_fifo_A_local_out_V_V_write,
        if_dout => fifo_A_PE_2_0_V_V_dout,
        if_empty_n => fifo_A_PE_2_0_V_V_empty_n,
        if_read => PE_wrapper_2_0_U0_fifo_A_in_V_V_read);

    fifo_A_A_IO_L2_in_4_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => A_IO_L2_in211_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_A_IO_L2_in_4_V_V_full_n,
        if_write => A_IO_L2_in211_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_A_IO_L2_in_4_V_V_dout,
        if_empty_n => fifo_A_A_IO_L2_in_4_V_V_empty_n,
        if_read => A_IO_L2_in212_U0_fifo_A_in_V_V_read);

    fifo_A_PE_3_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => A_IO_L2_in211_U0_fifo_A_local_out_V_V_din,
        if_full_n => fifo_A_PE_3_0_V_V_full_n,
        if_write => A_IO_L2_in211_U0_fifo_A_local_out_V_V_write,
        if_dout => fifo_A_PE_3_0_V_V_dout,
        if_empty_n => fifo_A_PE_3_0_V_V_empty_n,
        if_read => PE_wrapper_3_0_U0_fifo_A_in_V_V_read);

    fifo_A_A_IO_L2_in_5_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => A_IO_L2_in212_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_A_IO_L2_in_5_V_V_full_n,
        if_write => A_IO_L2_in212_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_A_IO_L2_in_5_V_V_dout,
        if_empty_n => fifo_A_A_IO_L2_in_5_V_V_empty_n,
        if_read => A_IO_L2_in213_U0_fifo_A_in_V_V_read);

    fifo_A_PE_4_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => A_IO_L2_in212_U0_fifo_A_local_out_V_V_din,
        if_full_n => fifo_A_PE_4_0_V_V_full_n,
        if_write => A_IO_L2_in212_U0_fifo_A_local_out_V_V_write,
        if_dout => fifo_A_PE_4_0_V_V_dout,
        if_empty_n => fifo_A_PE_4_0_V_V_empty_n,
        if_read => PE_wrapper_4_0_U0_fifo_A_in_V_V_read);

    fifo_A_A_IO_L2_in_6_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => A_IO_L2_in213_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_A_IO_L2_in_6_V_V_full_n,
        if_write => A_IO_L2_in213_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_A_IO_L2_in_6_V_V_dout,
        if_empty_n => fifo_A_A_IO_L2_in_6_V_V_empty_n,
        if_read => A_IO_L2_in214_U0_fifo_A_in_V_V_read);

    fifo_A_PE_5_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => A_IO_L2_in213_U0_fifo_A_local_out_V_V_din,
        if_full_n => fifo_A_PE_5_0_V_V_full_n,
        if_write => A_IO_L2_in213_U0_fifo_A_local_out_V_V_write,
        if_dout => fifo_A_PE_5_0_V_V_dout,
        if_empty_n => fifo_A_PE_5_0_V_V_empty_n,
        if_read => PE_wrapper_5_0_U0_fifo_A_in_V_V_read);

    fifo_A_A_IO_L2_in_7_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => A_IO_L2_in214_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_A_IO_L2_in_7_V_V_full_n,
        if_write => A_IO_L2_in214_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_A_IO_L2_in_7_V_V_dout,
        if_empty_n => fifo_A_A_IO_L2_in_7_V_V_empty_n,
        if_read => A_IO_L2_in215_U0_fifo_A_in_V_V_read);

    fifo_A_PE_6_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => A_IO_L2_in214_U0_fifo_A_local_out_V_V_din,
        if_full_n => fifo_A_PE_6_0_V_V_full_n,
        if_write => A_IO_L2_in214_U0_fifo_A_local_out_V_V_write,
        if_dout => fifo_A_PE_6_0_V_V_dout,
        if_empty_n => fifo_A_PE_6_0_V_V_empty_n,
        if_read => PE_wrapper_6_0_U0_fifo_A_in_V_V_read);

    fifo_A_A_IO_L2_in_8_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => A_IO_L2_in215_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_A_IO_L2_in_8_V_V_full_n,
        if_write => A_IO_L2_in215_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_A_IO_L2_in_8_V_V_dout,
        if_empty_n => fifo_A_A_IO_L2_in_8_V_V_empty_n,
        if_read => A_IO_L2_in216_U0_fifo_A_in_V_V_read);

    fifo_A_PE_7_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => A_IO_L2_in215_U0_fifo_A_local_out_V_V_din,
        if_full_n => fifo_A_PE_7_0_V_V_full_n,
        if_write => A_IO_L2_in215_U0_fifo_A_local_out_V_V_write,
        if_dout => fifo_A_PE_7_0_V_V_dout,
        if_empty_n => fifo_A_PE_7_0_V_V_empty_n,
        if_read => PE_wrapper_7_0_U0_fifo_A_in_V_V_read);

    fifo_A_A_IO_L2_in_9_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => A_IO_L2_in216_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_A_IO_L2_in_9_V_V_full_n,
        if_write => A_IO_L2_in216_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_A_IO_L2_in_9_V_V_dout,
        if_empty_n => fifo_A_A_IO_L2_in_9_V_V_empty_n,
        if_read => A_IO_L2_in217_U0_fifo_A_in_V_V_read);

    fifo_A_PE_8_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => A_IO_L2_in216_U0_fifo_A_local_out_V_V_din,
        if_full_n => fifo_A_PE_8_0_V_V_full_n,
        if_write => A_IO_L2_in216_U0_fifo_A_local_out_V_V_write,
        if_dout => fifo_A_PE_8_0_V_V_dout,
        if_empty_n => fifo_A_PE_8_0_V_V_empty_n,
        if_read => PE_wrapper_8_0_U0_fifo_A_in_V_V_read);

    fifo_A_A_IO_L2_in_10_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => A_IO_L2_in217_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_A_IO_L2_in_10_V_V_full_n,
        if_write => A_IO_L2_in217_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_A_IO_L2_in_10_V_V_dout,
        if_empty_n => fifo_A_A_IO_L2_in_10_V_V_empty_n,
        if_read => A_IO_L2_in218_U0_fifo_A_in_V_V_read);

    fifo_A_PE_9_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => A_IO_L2_in217_U0_fifo_A_local_out_V_V_din,
        if_full_n => fifo_A_PE_9_0_V_V_full_n,
        if_write => A_IO_L2_in217_U0_fifo_A_local_out_V_V_write,
        if_dout => fifo_A_PE_9_0_V_V_dout,
        if_empty_n => fifo_A_PE_9_0_V_V_empty_n,
        if_read => PE_wrapper_9_0_U0_fifo_A_in_V_V_read);

    fifo_A_A_IO_L2_in_11_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => A_IO_L2_in218_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_A_IO_L2_in_11_V_V_full_n,
        if_write => A_IO_L2_in218_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_A_IO_L2_in_11_V_V_dout,
        if_empty_n => fifo_A_A_IO_L2_in_11_V_V_empty_n,
        if_read => A_IO_L2_in219_U0_fifo_A_in_V_V_read);

    fifo_A_PE_10_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => A_IO_L2_in218_U0_fifo_A_local_out_V_V_din,
        if_full_n => fifo_A_PE_10_0_V_V_full_n,
        if_write => A_IO_L2_in218_U0_fifo_A_local_out_V_V_write,
        if_dout => fifo_A_PE_10_0_V_V_dout,
        if_empty_n => fifo_A_PE_10_0_V_V_empty_n,
        if_read => PE_wrapper_10_0_U0_fifo_A_in_V_V_read);

    fifo_A_A_IO_L2_in_12_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => A_IO_L2_in219_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_A_IO_L2_in_12_V_V_full_n,
        if_write => A_IO_L2_in219_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_A_IO_L2_in_12_V_V_dout,
        if_empty_n => fifo_A_A_IO_L2_in_12_V_V_empty_n,
        if_read => A_IO_L2_in_boundary_U0_fifo_A_in_V_V_read);

    fifo_A_PE_11_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => A_IO_L2_in219_U0_fifo_A_local_out_V_V_din,
        if_full_n => fifo_A_PE_11_0_V_V_full_n,
        if_write => A_IO_L2_in219_U0_fifo_A_local_out_V_V_write,
        if_dout => fifo_A_PE_11_0_V_V_dout,
        if_empty_n => fifo_A_PE_11_0_V_V_empty_n,
        if_read => PE_wrapper_11_0_U0_fifo_A_in_V_V_read);

    fifo_A_PE_12_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => A_IO_L2_in_boundary_U0_fifo_A_local_out_V_V_din,
        if_full_n => fifo_A_PE_12_0_V_V_full_n,
        if_write => A_IO_L2_in_boundary_U0_fifo_A_local_out_V_V_write,
        if_dout => fifo_A_PE_12_0_V_V_dout,
        if_empty_n => fifo_A_PE_12_0_V_V_empty_n,
        if_read => PE_wrapper_12_0_U0_fifo_A_in_V_V_read);

    fifo_B_B_IO_L2_in_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => B_IO_L3_in_U0_fifo_B_local_out_V_V_din,
        if_full_n => fifo_B_B_IO_L2_in_0_V_V_full_n,
        if_write => B_IO_L3_in_U0_fifo_B_local_out_V_V_write,
        if_dout => fifo_B_B_IO_L2_in_0_V_V_dout,
        if_empty_n => fifo_B_B_IO_L2_in_0_V_V_empty_n,
        if_read => B_IO_L2_in_U0_fifo_B_in_V_V_read);

    fifo_B_B_IO_L2_in_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => B_IO_L2_in_U0_fifo_B_out_V_V_din,
        if_full_n => fifo_B_B_IO_L2_in_1_V_V_full_n,
        if_write => B_IO_L2_in_U0_fifo_B_out_V_V_write,
        if_dout => fifo_B_B_IO_L2_in_1_V_V_dout,
        if_empty_n => fifo_B_B_IO_L2_in_1_V_V_empty_n,
        if_read => B_IO_L2_in_boundary_U0_fifo_B_in_V_V_read);

    fifo_B_PE_0_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => B_IO_L2_in_U0_fifo_B_local_out_V_V_din,
        if_full_n => fifo_B_PE_0_0_V_V_full_n,
        if_write => B_IO_L2_in_U0_fifo_B_local_out_V_V_write,
        if_dout => fifo_B_PE_0_0_V_V_dout,
        if_empty_n => fifo_B_PE_0_0_V_V_empty_n,
        if_read => PE_wrapper_0_0_U0_fifo_B_in_V_V_read);

    fifo_B_PE_0_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => B_IO_L2_in_boundary_U0_fifo_B_local_out_V_V_din,
        if_full_n => fifo_B_PE_0_1_V_V_full_n,
        if_write => B_IO_L2_in_boundary_U0_fifo_B_local_out_V_V_write,
        if_dout => fifo_B_PE_0_1_V_V_dout,
        if_empty_n => fifo_B_PE_0_1_V_V_empty_n,
        if_read => PE_wrapper_0_1_U0_fifo_B_in_V_V_read);

    fifo_A_PE_0_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_0_0_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_PE_0_1_V_V_full_n,
        if_write => PE_wrapper_0_0_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_PE_0_1_V_V_dout,
        if_empty_n => fifo_A_PE_0_1_V_V_empty_n,
        if_read => PE_wrapper_0_1_U0_fifo_A_in_V_V_read);

    fifo_B_PE_1_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_0_0_U0_fifo_B_out_V_V_din,
        if_full_n => fifo_B_PE_1_0_V_V_full_n,
        if_write => PE_wrapper_0_0_U0_fifo_B_out_V_V_write,
        if_dout => fifo_B_PE_1_0_V_V_dout,
        if_empty_n => fifo_B_PE_1_0_V_V_empty_n,
        if_read => PE_wrapper_1_0_U0_fifo_B_in_V_V_read);

    fifo_C_drain_PE_0_0_V_U : component kernel3_fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_0_0_U0_fifo_C_drain_out_V_din,
        if_full_n => fifo_C_drain_PE_0_0_V_full_n,
        if_write => PE_wrapper_0_0_U0_fifo_C_drain_out_V_write,
        if_dout => fifo_C_drain_PE_0_0_V_dout,
        if_empty_n => fifo_C_drain_PE_0_0_V_empty_n,
        if_read => C_drain_IO_L1_out245_U0_fifo_C_drain_local_in_V_read);

    fifo_A_PE_0_2_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_0_1_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_PE_0_2_V_V_full_n,
        if_write => PE_wrapper_0_1_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_PE_0_2_V_V_dout,
        if_empty_n => fifo_A_PE_0_2_V_V_empty_n,
        if_read => A_PE_dummy220_U0_fifo_A_in_V_V_read);

    fifo_B_PE_1_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_0_1_U0_fifo_B_out_V_V_din,
        if_full_n => fifo_B_PE_1_1_V_V_full_n,
        if_write => PE_wrapper_0_1_U0_fifo_B_out_V_V_write,
        if_dout => fifo_B_PE_1_1_V_V_dout,
        if_empty_n => fifo_B_PE_1_1_V_V_empty_n,
        if_read => PE_wrapper_1_1_U0_fifo_B_in_V_V_read);

    fifo_C_drain_PE_0_1_V_U : component kernel3_fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_0_1_U0_fifo_C_drain_out_V_din,
        if_full_n => fifo_C_drain_PE_0_1_V_full_n,
        if_write => PE_wrapper_0_1_U0_fifo_C_drain_out_V_write,
        if_dout => fifo_C_drain_PE_0_1_V_dout,
        if_empty_n => fifo_C_drain_PE_0_1_V_empty_n,
        if_read => C_drain_IO_L1_out257_U0_fifo_C_drain_local_in_V_read);

    fifo_A_PE_1_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_1_0_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_PE_1_1_V_V_full_n,
        if_write => PE_wrapper_1_0_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_PE_1_1_V_V_dout,
        if_empty_n => fifo_A_PE_1_1_V_V_empty_n,
        if_read => PE_wrapper_1_1_U0_fifo_A_in_V_V_read);

    fifo_B_PE_2_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_1_0_U0_fifo_B_out_V_V_din,
        if_full_n => fifo_B_PE_2_0_V_V_full_n,
        if_write => PE_wrapper_1_0_U0_fifo_B_out_V_V_write,
        if_dout => fifo_B_PE_2_0_V_V_dout,
        if_empty_n => fifo_B_PE_2_0_V_V_empty_n,
        if_read => PE_wrapper_2_0_U0_fifo_B_in_V_V_read);

    fifo_C_drain_PE_1_0_V_U : component kernel3_fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_1_0_U0_fifo_C_drain_out_V_din,
        if_full_n => fifo_C_drain_PE_1_0_V_full_n,
        if_write => PE_wrapper_1_0_U0_fifo_C_drain_out_V_write,
        if_dout => fifo_C_drain_PE_1_0_V_dout,
        if_empty_n => fifo_C_drain_PE_1_0_V_empty_n,
        if_read => C_drain_IO_L1_out244_U0_fifo_C_drain_local_in_V_read);

    fifo_A_PE_1_2_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_1_1_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_PE_1_2_V_V_full_n,
        if_write => PE_wrapper_1_1_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_PE_1_2_V_V_dout,
        if_empty_n => fifo_A_PE_1_2_V_V_empty_n,
        if_read => A_PE_dummy221_U0_fifo_A_in_V_V_read);

    fifo_B_PE_2_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_1_1_U0_fifo_B_out_V_V_din,
        if_full_n => fifo_B_PE_2_1_V_V_full_n,
        if_write => PE_wrapper_1_1_U0_fifo_B_out_V_V_write,
        if_dout => fifo_B_PE_2_1_V_V_dout,
        if_empty_n => fifo_B_PE_2_1_V_V_empty_n,
        if_read => PE_wrapper_2_1_U0_fifo_B_in_V_V_read);

    fifo_C_drain_PE_1_1_V_U : component kernel3_fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_1_1_U0_fifo_C_drain_out_V_din,
        if_full_n => fifo_C_drain_PE_1_1_V_full_n,
        if_write => PE_wrapper_1_1_U0_fifo_C_drain_out_V_write,
        if_dout => fifo_C_drain_PE_1_1_V_dout,
        if_empty_n => fifo_C_drain_PE_1_1_V_empty_n,
        if_read => C_drain_IO_L1_out256_U0_fifo_C_drain_local_in_V_read);

    fifo_A_PE_2_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_2_0_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_PE_2_1_V_V_full_n,
        if_write => PE_wrapper_2_0_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_PE_2_1_V_V_dout,
        if_empty_n => fifo_A_PE_2_1_V_V_empty_n,
        if_read => PE_wrapper_2_1_U0_fifo_A_in_V_V_read);

    fifo_B_PE_3_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_2_0_U0_fifo_B_out_V_V_din,
        if_full_n => fifo_B_PE_3_0_V_V_full_n,
        if_write => PE_wrapper_2_0_U0_fifo_B_out_V_V_write,
        if_dout => fifo_B_PE_3_0_V_V_dout,
        if_empty_n => fifo_B_PE_3_0_V_V_empty_n,
        if_read => PE_wrapper_3_0_U0_fifo_B_in_V_V_read);

    fifo_C_drain_PE_2_0_V_U : component kernel3_fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_2_0_U0_fifo_C_drain_out_V_din,
        if_full_n => fifo_C_drain_PE_2_0_V_full_n,
        if_write => PE_wrapper_2_0_U0_fifo_C_drain_out_V_write,
        if_dout => fifo_C_drain_PE_2_0_V_dout,
        if_empty_n => fifo_C_drain_PE_2_0_V_empty_n,
        if_read => C_drain_IO_L1_out243_U0_fifo_C_drain_local_in_V_read);

    fifo_A_PE_2_2_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_2_1_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_PE_2_2_V_V_full_n,
        if_write => PE_wrapper_2_1_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_PE_2_2_V_V_dout,
        if_empty_n => fifo_A_PE_2_2_V_V_empty_n,
        if_read => A_PE_dummy222_U0_fifo_A_in_V_V_read);

    fifo_B_PE_3_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_2_1_U0_fifo_B_out_V_V_din,
        if_full_n => fifo_B_PE_3_1_V_V_full_n,
        if_write => PE_wrapper_2_1_U0_fifo_B_out_V_V_write,
        if_dout => fifo_B_PE_3_1_V_V_dout,
        if_empty_n => fifo_B_PE_3_1_V_V_empty_n,
        if_read => PE_wrapper_3_1_U0_fifo_B_in_V_V_read);

    fifo_C_drain_PE_2_1_V_U : component kernel3_fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_2_1_U0_fifo_C_drain_out_V_din,
        if_full_n => fifo_C_drain_PE_2_1_V_full_n,
        if_write => PE_wrapper_2_1_U0_fifo_C_drain_out_V_write,
        if_dout => fifo_C_drain_PE_2_1_V_dout,
        if_empty_n => fifo_C_drain_PE_2_1_V_empty_n,
        if_read => C_drain_IO_L1_out255_U0_fifo_C_drain_local_in_V_read);

    fifo_A_PE_3_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_3_0_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_PE_3_1_V_V_full_n,
        if_write => PE_wrapper_3_0_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_PE_3_1_V_V_dout,
        if_empty_n => fifo_A_PE_3_1_V_V_empty_n,
        if_read => PE_wrapper_3_1_U0_fifo_A_in_V_V_read);

    fifo_B_PE_4_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_3_0_U0_fifo_B_out_V_V_din,
        if_full_n => fifo_B_PE_4_0_V_V_full_n,
        if_write => PE_wrapper_3_0_U0_fifo_B_out_V_V_write,
        if_dout => fifo_B_PE_4_0_V_V_dout,
        if_empty_n => fifo_B_PE_4_0_V_V_empty_n,
        if_read => PE_wrapper_4_0_U0_fifo_B_in_V_V_read);

    fifo_C_drain_PE_3_0_V_U : component kernel3_fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_3_0_U0_fifo_C_drain_out_V_din,
        if_full_n => fifo_C_drain_PE_3_0_V_full_n,
        if_write => PE_wrapper_3_0_U0_fifo_C_drain_out_V_write,
        if_dout => fifo_C_drain_PE_3_0_V_dout,
        if_empty_n => fifo_C_drain_PE_3_0_V_empty_n,
        if_read => C_drain_IO_L1_out242_U0_fifo_C_drain_local_in_V_read);

    fifo_A_PE_3_2_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_3_1_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_PE_3_2_V_V_full_n,
        if_write => PE_wrapper_3_1_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_PE_3_2_V_V_dout,
        if_empty_n => fifo_A_PE_3_2_V_V_empty_n,
        if_read => A_PE_dummy223_U0_fifo_A_in_V_V_read);

    fifo_B_PE_4_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_3_1_U0_fifo_B_out_V_V_din,
        if_full_n => fifo_B_PE_4_1_V_V_full_n,
        if_write => PE_wrapper_3_1_U0_fifo_B_out_V_V_write,
        if_dout => fifo_B_PE_4_1_V_V_dout,
        if_empty_n => fifo_B_PE_4_1_V_V_empty_n,
        if_read => PE_wrapper_4_1_U0_fifo_B_in_V_V_read);

    fifo_C_drain_PE_3_1_V_U : component kernel3_fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_3_1_U0_fifo_C_drain_out_V_din,
        if_full_n => fifo_C_drain_PE_3_1_V_full_n,
        if_write => PE_wrapper_3_1_U0_fifo_C_drain_out_V_write,
        if_dout => fifo_C_drain_PE_3_1_V_dout,
        if_empty_n => fifo_C_drain_PE_3_1_V_empty_n,
        if_read => C_drain_IO_L1_out254_U0_fifo_C_drain_local_in_V_read);

    fifo_A_PE_4_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_4_0_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_PE_4_1_V_V_full_n,
        if_write => PE_wrapper_4_0_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_PE_4_1_V_V_dout,
        if_empty_n => fifo_A_PE_4_1_V_V_empty_n,
        if_read => PE_wrapper_4_1_U0_fifo_A_in_V_V_read);

    fifo_B_PE_5_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_4_0_U0_fifo_B_out_V_V_din,
        if_full_n => fifo_B_PE_5_0_V_V_full_n,
        if_write => PE_wrapper_4_0_U0_fifo_B_out_V_V_write,
        if_dout => fifo_B_PE_5_0_V_V_dout,
        if_empty_n => fifo_B_PE_5_0_V_V_empty_n,
        if_read => PE_wrapper_5_0_U0_fifo_B_in_V_V_read);

    fifo_C_drain_PE_4_0_V_U : component kernel3_fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_4_0_U0_fifo_C_drain_out_V_din,
        if_full_n => fifo_C_drain_PE_4_0_V_full_n,
        if_write => PE_wrapper_4_0_U0_fifo_C_drain_out_V_write,
        if_dout => fifo_C_drain_PE_4_0_V_dout,
        if_empty_n => fifo_C_drain_PE_4_0_V_empty_n,
        if_read => C_drain_IO_L1_out241_U0_fifo_C_drain_local_in_V_read);

    fifo_A_PE_4_2_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_4_1_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_PE_4_2_V_V_full_n,
        if_write => PE_wrapper_4_1_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_PE_4_2_V_V_dout,
        if_empty_n => fifo_A_PE_4_2_V_V_empty_n,
        if_read => A_PE_dummy224_U0_fifo_A_in_V_V_read);

    fifo_B_PE_5_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_4_1_U0_fifo_B_out_V_V_din,
        if_full_n => fifo_B_PE_5_1_V_V_full_n,
        if_write => PE_wrapper_4_1_U0_fifo_B_out_V_V_write,
        if_dout => fifo_B_PE_5_1_V_V_dout,
        if_empty_n => fifo_B_PE_5_1_V_V_empty_n,
        if_read => PE_wrapper_5_1_U0_fifo_B_in_V_V_read);

    fifo_C_drain_PE_4_1_V_U : component kernel3_fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_4_1_U0_fifo_C_drain_out_V_din,
        if_full_n => fifo_C_drain_PE_4_1_V_full_n,
        if_write => PE_wrapper_4_1_U0_fifo_C_drain_out_V_write,
        if_dout => fifo_C_drain_PE_4_1_V_dout,
        if_empty_n => fifo_C_drain_PE_4_1_V_empty_n,
        if_read => C_drain_IO_L1_out253_U0_fifo_C_drain_local_in_V_read);

    fifo_A_PE_5_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_5_0_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_PE_5_1_V_V_full_n,
        if_write => PE_wrapper_5_0_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_PE_5_1_V_V_dout,
        if_empty_n => fifo_A_PE_5_1_V_V_empty_n,
        if_read => PE_wrapper_5_1_U0_fifo_A_in_V_V_read);

    fifo_B_PE_6_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_5_0_U0_fifo_B_out_V_V_din,
        if_full_n => fifo_B_PE_6_0_V_V_full_n,
        if_write => PE_wrapper_5_0_U0_fifo_B_out_V_V_write,
        if_dout => fifo_B_PE_6_0_V_V_dout,
        if_empty_n => fifo_B_PE_6_0_V_V_empty_n,
        if_read => PE_wrapper_6_0_U0_fifo_B_in_V_V_read);

    fifo_C_drain_PE_5_0_V_U : component kernel3_fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_5_0_U0_fifo_C_drain_out_V_din,
        if_full_n => fifo_C_drain_PE_5_0_V_full_n,
        if_write => PE_wrapper_5_0_U0_fifo_C_drain_out_V_write,
        if_dout => fifo_C_drain_PE_5_0_V_dout,
        if_empty_n => fifo_C_drain_PE_5_0_V_empty_n,
        if_read => C_drain_IO_L1_out240_U0_fifo_C_drain_local_in_V_read);

    fifo_A_PE_5_2_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_5_1_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_PE_5_2_V_V_full_n,
        if_write => PE_wrapper_5_1_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_PE_5_2_V_V_dout,
        if_empty_n => fifo_A_PE_5_2_V_V_empty_n,
        if_read => A_PE_dummy225_U0_fifo_A_in_V_V_read);

    fifo_B_PE_6_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_5_1_U0_fifo_B_out_V_V_din,
        if_full_n => fifo_B_PE_6_1_V_V_full_n,
        if_write => PE_wrapper_5_1_U0_fifo_B_out_V_V_write,
        if_dout => fifo_B_PE_6_1_V_V_dout,
        if_empty_n => fifo_B_PE_6_1_V_V_empty_n,
        if_read => PE_wrapper_6_1_U0_fifo_B_in_V_V_read);

    fifo_C_drain_PE_5_1_V_U : component kernel3_fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_5_1_U0_fifo_C_drain_out_V_din,
        if_full_n => fifo_C_drain_PE_5_1_V_full_n,
        if_write => PE_wrapper_5_1_U0_fifo_C_drain_out_V_write,
        if_dout => fifo_C_drain_PE_5_1_V_dout,
        if_empty_n => fifo_C_drain_PE_5_1_V_empty_n,
        if_read => C_drain_IO_L1_out252_U0_fifo_C_drain_local_in_V_read);

    fifo_A_PE_6_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_6_0_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_PE_6_1_V_V_full_n,
        if_write => PE_wrapper_6_0_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_PE_6_1_V_V_dout,
        if_empty_n => fifo_A_PE_6_1_V_V_empty_n,
        if_read => PE_wrapper_6_1_U0_fifo_A_in_V_V_read);

    fifo_B_PE_7_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_6_0_U0_fifo_B_out_V_V_din,
        if_full_n => fifo_B_PE_7_0_V_V_full_n,
        if_write => PE_wrapper_6_0_U0_fifo_B_out_V_V_write,
        if_dout => fifo_B_PE_7_0_V_V_dout,
        if_empty_n => fifo_B_PE_7_0_V_V_empty_n,
        if_read => PE_wrapper_7_0_U0_fifo_B_in_V_V_read);

    fifo_C_drain_PE_6_0_V_U : component kernel3_fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_6_0_U0_fifo_C_drain_out_V_din,
        if_full_n => fifo_C_drain_PE_6_0_V_full_n,
        if_write => PE_wrapper_6_0_U0_fifo_C_drain_out_V_write,
        if_dout => fifo_C_drain_PE_6_0_V_dout,
        if_empty_n => fifo_C_drain_PE_6_0_V_empty_n,
        if_read => C_drain_IO_L1_out239_U0_fifo_C_drain_local_in_V_read);

    fifo_A_PE_6_2_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_6_1_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_PE_6_2_V_V_full_n,
        if_write => PE_wrapper_6_1_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_PE_6_2_V_V_dout,
        if_empty_n => fifo_A_PE_6_2_V_V_empty_n,
        if_read => A_PE_dummy226_U0_fifo_A_in_V_V_read);

    fifo_B_PE_7_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_6_1_U0_fifo_B_out_V_V_din,
        if_full_n => fifo_B_PE_7_1_V_V_full_n,
        if_write => PE_wrapper_6_1_U0_fifo_B_out_V_V_write,
        if_dout => fifo_B_PE_7_1_V_V_dout,
        if_empty_n => fifo_B_PE_7_1_V_V_empty_n,
        if_read => PE_wrapper_7_1_U0_fifo_B_in_V_V_read);

    fifo_C_drain_PE_6_1_V_U : component kernel3_fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_6_1_U0_fifo_C_drain_out_V_din,
        if_full_n => fifo_C_drain_PE_6_1_V_full_n,
        if_write => PE_wrapper_6_1_U0_fifo_C_drain_out_V_write,
        if_dout => fifo_C_drain_PE_6_1_V_dout,
        if_empty_n => fifo_C_drain_PE_6_1_V_empty_n,
        if_read => C_drain_IO_L1_out251_U0_fifo_C_drain_local_in_V_read);

    fifo_A_PE_7_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_7_0_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_PE_7_1_V_V_full_n,
        if_write => PE_wrapper_7_0_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_PE_7_1_V_V_dout,
        if_empty_n => fifo_A_PE_7_1_V_V_empty_n,
        if_read => PE_wrapper_7_1_U0_fifo_A_in_V_V_read);

    fifo_B_PE_8_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_7_0_U0_fifo_B_out_V_V_din,
        if_full_n => fifo_B_PE_8_0_V_V_full_n,
        if_write => PE_wrapper_7_0_U0_fifo_B_out_V_V_write,
        if_dout => fifo_B_PE_8_0_V_V_dout,
        if_empty_n => fifo_B_PE_8_0_V_V_empty_n,
        if_read => PE_wrapper_8_0_U0_fifo_B_in_V_V_read);

    fifo_C_drain_PE_7_0_V_U : component kernel3_fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_7_0_U0_fifo_C_drain_out_V_din,
        if_full_n => fifo_C_drain_PE_7_0_V_full_n,
        if_write => PE_wrapper_7_0_U0_fifo_C_drain_out_V_write,
        if_dout => fifo_C_drain_PE_7_0_V_dout,
        if_empty_n => fifo_C_drain_PE_7_0_V_empty_n,
        if_read => C_drain_IO_L1_out238_U0_fifo_C_drain_local_in_V_read);

    fifo_A_PE_7_2_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_7_1_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_PE_7_2_V_V_full_n,
        if_write => PE_wrapper_7_1_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_PE_7_2_V_V_dout,
        if_empty_n => fifo_A_PE_7_2_V_V_empty_n,
        if_read => A_PE_dummy227_U0_fifo_A_in_V_V_read);

    fifo_B_PE_8_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_7_1_U0_fifo_B_out_V_V_din,
        if_full_n => fifo_B_PE_8_1_V_V_full_n,
        if_write => PE_wrapper_7_1_U0_fifo_B_out_V_V_write,
        if_dout => fifo_B_PE_8_1_V_V_dout,
        if_empty_n => fifo_B_PE_8_1_V_V_empty_n,
        if_read => PE_wrapper_8_1_U0_fifo_B_in_V_V_read);

    fifo_C_drain_PE_7_1_V_U : component kernel3_fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_7_1_U0_fifo_C_drain_out_V_din,
        if_full_n => fifo_C_drain_PE_7_1_V_full_n,
        if_write => PE_wrapper_7_1_U0_fifo_C_drain_out_V_write,
        if_dout => fifo_C_drain_PE_7_1_V_dout,
        if_empty_n => fifo_C_drain_PE_7_1_V_empty_n,
        if_read => C_drain_IO_L1_out250_U0_fifo_C_drain_local_in_V_read);

    fifo_A_PE_8_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_8_0_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_PE_8_1_V_V_full_n,
        if_write => PE_wrapper_8_0_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_PE_8_1_V_V_dout,
        if_empty_n => fifo_A_PE_8_1_V_V_empty_n,
        if_read => PE_wrapper_8_1_U0_fifo_A_in_V_V_read);

    fifo_B_PE_9_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_8_0_U0_fifo_B_out_V_V_din,
        if_full_n => fifo_B_PE_9_0_V_V_full_n,
        if_write => PE_wrapper_8_0_U0_fifo_B_out_V_V_write,
        if_dout => fifo_B_PE_9_0_V_V_dout,
        if_empty_n => fifo_B_PE_9_0_V_V_empty_n,
        if_read => PE_wrapper_9_0_U0_fifo_B_in_V_V_read);

    fifo_C_drain_PE_8_0_V_U : component kernel3_fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_8_0_U0_fifo_C_drain_out_V_din,
        if_full_n => fifo_C_drain_PE_8_0_V_full_n,
        if_write => PE_wrapper_8_0_U0_fifo_C_drain_out_V_write,
        if_dout => fifo_C_drain_PE_8_0_V_dout,
        if_empty_n => fifo_C_drain_PE_8_0_V_empty_n,
        if_read => C_drain_IO_L1_out237_U0_fifo_C_drain_local_in_V_read);

    fifo_A_PE_8_2_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_8_1_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_PE_8_2_V_V_full_n,
        if_write => PE_wrapper_8_1_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_PE_8_2_V_V_dout,
        if_empty_n => fifo_A_PE_8_2_V_V_empty_n,
        if_read => A_PE_dummy228_U0_fifo_A_in_V_V_read);

    fifo_B_PE_9_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_8_1_U0_fifo_B_out_V_V_din,
        if_full_n => fifo_B_PE_9_1_V_V_full_n,
        if_write => PE_wrapper_8_1_U0_fifo_B_out_V_V_write,
        if_dout => fifo_B_PE_9_1_V_V_dout,
        if_empty_n => fifo_B_PE_9_1_V_V_empty_n,
        if_read => PE_wrapper_9_1_U0_fifo_B_in_V_V_read);

    fifo_C_drain_PE_8_1_V_U : component kernel3_fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_8_1_U0_fifo_C_drain_out_V_din,
        if_full_n => fifo_C_drain_PE_8_1_V_full_n,
        if_write => PE_wrapper_8_1_U0_fifo_C_drain_out_V_write,
        if_dout => fifo_C_drain_PE_8_1_V_dout,
        if_empty_n => fifo_C_drain_PE_8_1_V_empty_n,
        if_read => C_drain_IO_L1_out249_U0_fifo_C_drain_local_in_V_read);

    fifo_A_PE_9_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_9_0_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_PE_9_1_V_V_full_n,
        if_write => PE_wrapper_9_0_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_PE_9_1_V_V_dout,
        if_empty_n => fifo_A_PE_9_1_V_V_empty_n,
        if_read => PE_wrapper_9_1_U0_fifo_A_in_V_V_read);

    fifo_B_PE_10_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_9_0_U0_fifo_B_out_V_V_din,
        if_full_n => fifo_B_PE_10_0_V_V_full_n,
        if_write => PE_wrapper_9_0_U0_fifo_B_out_V_V_write,
        if_dout => fifo_B_PE_10_0_V_V_dout,
        if_empty_n => fifo_B_PE_10_0_V_V_empty_n,
        if_read => PE_wrapper_10_0_U0_fifo_B_in_V_V_read);

    fifo_C_drain_PE_9_0_V_U : component kernel3_fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_9_0_U0_fifo_C_drain_out_V_din,
        if_full_n => fifo_C_drain_PE_9_0_V_full_n,
        if_write => PE_wrapper_9_0_U0_fifo_C_drain_out_V_write,
        if_dout => fifo_C_drain_PE_9_0_V_dout,
        if_empty_n => fifo_C_drain_PE_9_0_V_empty_n,
        if_read => C_drain_IO_L1_out236_U0_fifo_C_drain_local_in_V_read);

    fifo_A_PE_9_2_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_9_1_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_PE_9_2_V_V_full_n,
        if_write => PE_wrapper_9_1_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_PE_9_2_V_V_dout,
        if_empty_n => fifo_A_PE_9_2_V_V_empty_n,
        if_read => A_PE_dummy229_U0_fifo_A_in_V_V_read);

    fifo_B_PE_10_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_9_1_U0_fifo_B_out_V_V_din,
        if_full_n => fifo_B_PE_10_1_V_V_full_n,
        if_write => PE_wrapper_9_1_U0_fifo_B_out_V_V_write,
        if_dout => fifo_B_PE_10_1_V_V_dout,
        if_empty_n => fifo_B_PE_10_1_V_V_empty_n,
        if_read => PE_wrapper_10_1_U0_fifo_B_in_V_V_read);

    fifo_C_drain_PE_9_1_V_U : component kernel3_fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_9_1_U0_fifo_C_drain_out_V_din,
        if_full_n => fifo_C_drain_PE_9_1_V_full_n,
        if_write => PE_wrapper_9_1_U0_fifo_C_drain_out_V_write,
        if_dout => fifo_C_drain_PE_9_1_V_dout,
        if_empty_n => fifo_C_drain_PE_9_1_V_empty_n,
        if_read => C_drain_IO_L1_out248_U0_fifo_C_drain_local_in_V_read);

    fifo_A_PE_10_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_10_0_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_PE_10_1_V_V_full_n,
        if_write => PE_wrapper_10_0_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_PE_10_1_V_V_dout,
        if_empty_n => fifo_A_PE_10_1_V_V_empty_n,
        if_read => PE_wrapper_10_1_U0_fifo_A_in_V_V_read);

    fifo_B_PE_11_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_10_0_U0_fifo_B_out_V_V_din,
        if_full_n => fifo_B_PE_11_0_V_V_full_n,
        if_write => PE_wrapper_10_0_U0_fifo_B_out_V_V_write,
        if_dout => fifo_B_PE_11_0_V_V_dout,
        if_empty_n => fifo_B_PE_11_0_V_V_empty_n,
        if_read => PE_wrapper_11_0_U0_fifo_B_in_V_V_read);

    fifo_C_drain_PE_10_0_V_U : component kernel3_fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_10_0_U0_fifo_C_drain_out_V_din,
        if_full_n => fifo_C_drain_PE_10_0_V_full_n,
        if_write => PE_wrapper_10_0_U0_fifo_C_drain_out_V_write,
        if_dout => fifo_C_drain_PE_10_0_V_dout,
        if_empty_n => fifo_C_drain_PE_10_0_V_empty_n,
        if_read => C_drain_IO_L1_out235_U0_fifo_C_drain_local_in_V_read);

    fifo_A_PE_10_2_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_10_1_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_PE_10_2_V_V_full_n,
        if_write => PE_wrapper_10_1_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_PE_10_2_V_V_dout,
        if_empty_n => fifo_A_PE_10_2_V_V_empty_n,
        if_read => A_PE_dummy230_U0_fifo_A_in_V_V_read);

    fifo_B_PE_11_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_10_1_U0_fifo_B_out_V_V_din,
        if_full_n => fifo_B_PE_11_1_V_V_full_n,
        if_write => PE_wrapper_10_1_U0_fifo_B_out_V_V_write,
        if_dout => fifo_B_PE_11_1_V_V_dout,
        if_empty_n => fifo_B_PE_11_1_V_V_empty_n,
        if_read => PE_wrapper_11_1_U0_fifo_B_in_V_V_read);

    fifo_C_drain_PE_10_1_V_U : component kernel3_fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_10_1_U0_fifo_C_drain_out_V_din,
        if_full_n => fifo_C_drain_PE_10_1_V_full_n,
        if_write => PE_wrapper_10_1_U0_fifo_C_drain_out_V_write,
        if_dout => fifo_C_drain_PE_10_1_V_dout,
        if_empty_n => fifo_C_drain_PE_10_1_V_empty_n,
        if_read => C_drain_IO_L1_out247_U0_fifo_C_drain_local_in_V_read);

    fifo_A_PE_11_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_11_0_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_PE_11_1_V_V_full_n,
        if_write => PE_wrapper_11_0_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_PE_11_1_V_V_dout,
        if_empty_n => fifo_A_PE_11_1_V_V_empty_n,
        if_read => PE_wrapper_11_1_U0_fifo_A_in_V_V_read);

    fifo_B_PE_12_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_11_0_U0_fifo_B_out_V_V_din,
        if_full_n => fifo_B_PE_12_0_V_V_full_n,
        if_write => PE_wrapper_11_0_U0_fifo_B_out_V_V_write,
        if_dout => fifo_B_PE_12_0_V_V_dout,
        if_empty_n => fifo_B_PE_12_0_V_V_empty_n,
        if_read => PE_wrapper_12_0_U0_fifo_B_in_V_V_read);

    fifo_C_drain_PE_11_0_V_U : component kernel3_fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_11_0_U0_fifo_C_drain_out_V_din,
        if_full_n => fifo_C_drain_PE_11_0_V_full_n,
        if_write => PE_wrapper_11_0_U0_fifo_C_drain_out_V_write,
        if_dout => fifo_C_drain_PE_11_0_V_dout,
        if_empty_n => fifo_C_drain_PE_11_0_V_empty_n,
        if_read => C_drain_IO_L1_out234_U0_fifo_C_drain_local_in_V_read);

    fifo_A_PE_11_2_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_11_1_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_PE_11_2_V_V_full_n,
        if_write => PE_wrapper_11_1_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_PE_11_2_V_V_dout,
        if_empty_n => fifo_A_PE_11_2_V_V_empty_n,
        if_read => A_PE_dummy231_U0_fifo_A_in_V_V_read);

    fifo_B_PE_12_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_11_1_U0_fifo_B_out_V_V_din,
        if_full_n => fifo_B_PE_12_1_V_V_full_n,
        if_write => PE_wrapper_11_1_U0_fifo_B_out_V_V_write,
        if_dout => fifo_B_PE_12_1_V_V_dout,
        if_empty_n => fifo_B_PE_12_1_V_V_empty_n,
        if_read => PE_wrapper_12_1_U0_fifo_B_in_V_V_read);

    fifo_C_drain_PE_11_1_V_U : component kernel3_fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_11_1_U0_fifo_C_drain_out_V_din,
        if_full_n => fifo_C_drain_PE_11_1_V_full_n,
        if_write => PE_wrapper_11_1_U0_fifo_C_drain_out_V_write,
        if_dout => fifo_C_drain_PE_11_1_V_dout,
        if_empty_n => fifo_C_drain_PE_11_1_V_empty_n,
        if_read => C_drain_IO_L1_out246_U0_fifo_C_drain_local_in_V_read);

    fifo_A_PE_12_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_12_0_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_PE_12_1_V_V_full_n,
        if_write => PE_wrapper_12_0_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_PE_12_1_V_V_dout,
        if_empty_n => fifo_A_PE_12_1_V_V_empty_n,
        if_read => PE_wrapper_12_1_U0_fifo_A_in_V_V_read);

    fifo_B_PE_13_0_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_12_0_U0_fifo_B_out_V_V_din,
        if_full_n => fifo_B_PE_13_0_V_V_full_n,
        if_write => PE_wrapper_12_0_U0_fifo_B_out_V_V_write,
        if_dout => fifo_B_PE_13_0_V_V_dout,
        if_empty_n => fifo_B_PE_13_0_V_V_empty_n,
        if_read => B_PE_dummy232_U0_fifo_B_in_V_V_read);

    fifo_C_drain_PE_12_0_V_U : component kernel3_fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_12_0_U0_fifo_C_drain_out_V_din,
        if_full_n => fifo_C_drain_PE_12_0_V_full_n,
        if_write => PE_wrapper_12_0_U0_fifo_C_drain_out_V_write,
        if_dout => fifo_C_drain_PE_12_0_V_dout,
        if_empty_n => fifo_C_drain_PE_12_0_V_empty_n,
        if_read => C_drain_IO_L1_out_boundary233_U0_fifo_C_drain_local_in_V_read);

    fifo_A_PE_12_2_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_12_1_U0_fifo_A_out_V_V_din,
        if_full_n => fifo_A_PE_12_2_V_V_full_n,
        if_write => PE_wrapper_12_1_U0_fifo_A_out_V_V_write,
        if_dout => fifo_A_PE_12_2_V_V_dout,
        if_empty_n => fifo_A_PE_12_2_V_V_empty_n,
        if_read => A_PE_dummy_U0_fifo_A_in_V_V_read);

    fifo_B_PE_13_1_V_V_U : component kernel3_fifo_w256_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_12_1_U0_fifo_B_out_V_V_din,
        if_full_n => fifo_B_PE_13_1_V_V_full_n,
        if_write => PE_wrapper_12_1_U0_fifo_B_out_V_V_write,
        if_dout => fifo_B_PE_13_1_V_V_dout,
        if_empty_n => fifo_B_PE_13_1_V_V_empty_n,
        if_read => B_PE_dummy_U0_fifo_B_in_V_V_read);

    fifo_C_drain_PE_12_1_V_U : component kernel3_fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => PE_wrapper_12_1_U0_fifo_C_drain_out_V_din,
        if_full_n => fifo_C_drain_PE_12_1_V_full_n,
        if_write => PE_wrapper_12_1_U0_fifo_C_drain_out_V_write,
        if_dout => fifo_C_drain_PE_12_1_V_dout,
        if_empty_n => fifo_C_drain_PE_12_1_V_empty_n,
        if_read => C_drain_IO_L1_out_boundary_U0_fifo_C_drain_local_in_V_read);

    fifo_C_drain_C_drain_IO_L1_out_0_12_V_V_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => C_drain_IO_L1_out_boundary233_U0_fifo_C_drain_out_V_V_din,
        if_full_n => fifo_C_drain_C_drain_IO_L1_out_0_12_V_V_full_n,
        if_write => C_drain_IO_L1_out_boundary233_U0_fifo_C_drain_out_V_V_write,
        if_dout => fifo_C_drain_C_drain_IO_L1_out_0_12_V_V_dout,
        if_empty_n => fifo_C_drain_C_drain_IO_L1_out_0_12_V_V_empty_n,
        if_read => C_drain_IO_L1_out234_U0_fifo_C_drain_in_V_V_read);

    fifo_C_drain_C_drain_IO_L1_out_0_11_V_V_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => C_drain_IO_L1_out234_U0_fifo_C_drain_out_V_V_din,
        if_full_n => fifo_C_drain_C_drain_IO_L1_out_0_11_V_V_full_n,
        if_write => C_drain_IO_L1_out234_U0_fifo_C_drain_out_V_V_write,
        if_dout => fifo_C_drain_C_drain_IO_L1_out_0_11_V_V_dout,
        if_empty_n => fifo_C_drain_C_drain_IO_L1_out_0_11_V_V_empty_n,
        if_read => C_drain_IO_L1_out235_U0_fifo_C_drain_in_V_V_read);

    fifo_C_drain_C_drain_IO_L1_out_0_10_V_V_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => C_drain_IO_L1_out235_U0_fifo_C_drain_out_V_V_din,
        if_full_n => fifo_C_drain_C_drain_IO_L1_out_0_10_V_V_full_n,
        if_write => C_drain_IO_L1_out235_U0_fifo_C_drain_out_V_V_write,
        if_dout => fifo_C_drain_C_drain_IO_L1_out_0_10_V_V_dout,
        if_empty_n => fifo_C_drain_C_drain_IO_L1_out_0_10_V_V_empty_n,
        if_read => C_drain_IO_L1_out236_U0_fifo_C_drain_in_V_V_read);

    fifo_C_drain_C_drain_IO_L1_out_0_9_V_V_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => C_drain_IO_L1_out236_U0_fifo_C_drain_out_V_V_din,
        if_full_n => fifo_C_drain_C_drain_IO_L1_out_0_9_V_V_full_n,
        if_write => C_drain_IO_L1_out236_U0_fifo_C_drain_out_V_V_write,
        if_dout => fifo_C_drain_C_drain_IO_L1_out_0_9_V_V_dout,
        if_empty_n => fifo_C_drain_C_drain_IO_L1_out_0_9_V_V_empty_n,
        if_read => C_drain_IO_L1_out237_U0_fifo_C_drain_in_V_V_read);

    fifo_C_drain_C_drain_IO_L1_out_0_8_V_V_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => C_drain_IO_L1_out237_U0_fifo_C_drain_out_V_V_din,
        if_full_n => fifo_C_drain_C_drain_IO_L1_out_0_8_V_V_full_n,
        if_write => C_drain_IO_L1_out237_U0_fifo_C_drain_out_V_V_write,
        if_dout => fifo_C_drain_C_drain_IO_L1_out_0_8_V_V_dout,
        if_empty_n => fifo_C_drain_C_drain_IO_L1_out_0_8_V_V_empty_n,
        if_read => C_drain_IO_L1_out238_U0_fifo_C_drain_in_V_V_read);

    fifo_C_drain_C_drain_IO_L1_out_0_7_V_V_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => C_drain_IO_L1_out238_U0_fifo_C_drain_out_V_V_din,
        if_full_n => fifo_C_drain_C_drain_IO_L1_out_0_7_V_V_full_n,
        if_write => C_drain_IO_L1_out238_U0_fifo_C_drain_out_V_V_write,
        if_dout => fifo_C_drain_C_drain_IO_L1_out_0_7_V_V_dout,
        if_empty_n => fifo_C_drain_C_drain_IO_L1_out_0_7_V_V_empty_n,
        if_read => C_drain_IO_L1_out239_U0_fifo_C_drain_in_V_V_read);

    fifo_C_drain_C_drain_IO_L1_out_0_6_V_V_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => C_drain_IO_L1_out239_U0_fifo_C_drain_out_V_V_din,
        if_full_n => fifo_C_drain_C_drain_IO_L1_out_0_6_V_V_full_n,
        if_write => C_drain_IO_L1_out239_U0_fifo_C_drain_out_V_V_write,
        if_dout => fifo_C_drain_C_drain_IO_L1_out_0_6_V_V_dout,
        if_empty_n => fifo_C_drain_C_drain_IO_L1_out_0_6_V_V_empty_n,
        if_read => C_drain_IO_L1_out240_U0_fifo_C_drain_in_V_V_read);

    fifo_C_drain_C_drain_IO_L1_out_0_5_V_V_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => C_drain_IO_L1_out240_U0_fifo_C_drain_out_V_V_din,
        if_full_n => fifo_C_drain_C_drain_IO_L1_out_0_5_V_V_full_n,
        if_write => C_drain_IO_L1_out240_U0_fifo_C_drain_out_V_V_write,
        if_dout => fifo_C_drain_C_drain_IO_L1_out_0_5_V_V_dout,
        if_empty_n => fifo_C_drain_C_drain_IO_L1_out_0_5_V_V_empty_n,
        if_read => C_drain_IO_L1_out241_U0_fifo_C_drain_in_V_V_read);

    fifo_C_drain_C_drain_IO_L1_out_0_4_V_V_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => C_drain_IO_L1_out241_U0_fifo_C_drain_out_V_V_din,
        if_full_n => fifo_C_drain_C_drain_IO_L1_out_0_4_V_V_full_n,
        if_write => C_drain_IO_L1_out241_U0_fifo_C_drain_out_V_V_write,
        if_dout => fifo_C_drain_C_drain_IO_L1_out_0_4_V_V_dout,
        if_empty_n => fifo_C_drain_C_drain_IO_L1_out_0_4_V_V_empty_n,
        if_read => C_drain_IO_L1_out242_U0_fifo_C_drain_in_V_V_read);

    fifo_C_drain_C_drain_IO_L1_out_0_3_V_V_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => C_drain_IO_L1_out242_U0_fifo_C_drain_out_V_V_din,
        if_full_n => fifo_C_drain_C_drain_IO_L1_out_0_3_V_V_full_n,
        if_write => C_drain_IO_L1_out242_U0_fifo_C_drain_out_V_V_write,
        if_dout => fifo_C_drain_C_drain_IO_L1_out_0_3_V_V_dout,
        if_empty_n => fifo_C_drain_C_drain_IO_L1_out_0_3_V_V_empty_n,
        if_read => C_drain_IO_L1_out243_U0_fifo_C_drain_in_V_V_read);

    fifo_C_drain_C_drain_IO_L1_out_0_2_V_V_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => C_drain_IO_L1_out243_U0_fifo_C_drain_out_V_V_din,
        if_full_n => fifo_C_drain_C_drain_IO_L1_out_0_2_V_V_full_n,
        if_write => C_drain_IO_L1_out243_U0_fifo_C_drain_out_V_V_write,
        if_dout => fifo_C_drain_C_drain_IO_L1_out_0_2_V_V_dout,
        if_empty_n => fifo_C_drain_C_drain_IO_L1_out_0_2_V_V_empty_n,
        if_read => C_drain_IO_L1_out244_U0_fifo_C_drain_in_V_V_read);

    fifo_C_drain_C_drain_IO_L1_out_0_1_V_V_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => C_drain_IO_L1_out244_U0_fifo_C_drain_out_V_V_din,
        if_full_n => fifo_C_drain_C_drain_IO_L1_out_0_1_V_V_full_n,
        if_write => C_drain_IO_L1_out244_U0_fifo_C_drain_out_V_V_write,
        if_dout => fifo_C_drain_C_drain_IO_L1_out_0_1_V_V_dout,
        if_empty_n => fifo_C_drain_C_drain_IO_L1_out_0_1_V_V_empty_n,
        if_read => C_drain_IO_L1_out245_U0_fifo_C_drain_in_V_V_read);

    fifo_C_drain_C_drain_IO_L1_out_0_0_V_V_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => C_drain_IO_L1_out245_U0_fifo_C_drain_out_V_V_din,
        if_full_n => fifo_C_drain_C_drain_IO_L1_out_0_0_V_V_full_n,
        if_write => C_drain_IO_L1_out245_U0_fifo_C_drain_out_V_V_write,
        if_dout => fifo_C_drain_C_drain_IO_L1_out_0_0_V_V_dout,
        if_empty_n => fifo_C_drain_C_drain_IO_L1_out_0_0_V_V_empty_n,
        if_read => C_drain_IO_L2_out_U0_fifo_C_drain_local_in_V_V_read);

    fifo_C_drain_C_drain_IO_L1_out_1_12_V_V_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => C_drain_IO_L1_out_boundary_U0_fifo_C_drain_out_V_V_din,
        if_full_n => fifo_C_drain_C_drain_IO_L1_out_1_12_V_V_full_n,
        if_write => C_drain_IO_L1_out_boundary_U0_fifo_C_drain_out_V_V_write,
        if_dout => fifo_C_drain_C_drain_IO_L1_out_1_12_V_V_dout,
        if_empty_n => fifo_C_drain_C_drain_IO_L1_out_1_12_V_V_empty_n,
        if_read => C_drain_IO_L1_out246_U0_fifo_C_drain_in_V_V_read);

    fifo_C_drain_C_drain_IO_L1_out_1_11_V_V_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => C_drain_IO_L1_out246_U0_fifo_C_drain_out_V_V_din,
        if_full_n => fifo_C_drain_C_drain_IO_L1_out_1_11_V_V_full_n,
        if_write => C_drain_IO_L1_out246_U0_fifo_C_drain_out_V_V_write,
        if_dout => fifo_C_drain_C_drain_IO_L1_out_1_11_V_V_dout,
        if_empty_n => fifo_C_drain_C_drain_IO_L1_out_1_11_V_V_empty_n,
        if_read => C_drain_IO_L1_out247_U0_fifo_C_drain_in_V_V_read);

    fifo_C_drain_C_drain_IO_L1_out_1_10_V_V_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => C_drain_IO_L1_out247_U0_fifo_C_drain_out_V_V_din,
        if_full_n => fifo_C_drain_C_drain_IO_L1_out_1_10_V_V_full_n,
        if_write => C_drain_IO_L1_out247_U0_fifo_C_drain_out_V_V_write,
        if_dout => fifo_C_drain_C_drain_IO_L1_out_1_10_V_V_dout,
        if_empty_n => fifo_C_drain_C_drain_IO_L1_out_1_10_V_V_empty_n,
        if_read => C_drain_IO_L1_out248_U0_fifo_C_drain_in_V_V_read);

    fifo_C_drain_C_drain_IO_L1_out_1_9_V_V_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => C_drain_IO_L1_out248_U0_fifo_C_drain_out_V_V_din,
        if_full_n => fifo_C_drain_C_drain_IO_L1_out_1_9_V_V_full_n,
        if_write => C_drain_IO_L1_out248_U0_fifo_C_drain_out_V_V_write,
        if_dout => fifo_C_drain_C_drain_IO_L1_out_1_9_V_V_dout,
        if_empty_n => fifo_C_drain_C_drain_IO_L1_out_1_9_V_V_empty_n,
        if_read => C_drain_IO_L1_out249_U0_fifo_C_drain_in_V_V_read);

    fifo_C_drain_C_drain_IO_L1_out_1_8_V_V_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => C_drain_IO_L1_out249_U0_fifo_C_drain_out_V_V_din,
        if_full_n => fifo_C_drain_C_drain_IO_L1_out_1_8_V_V_full_n,
        if_write => C_drain_IO_L1_out249_U0_fifo_C_drain_out_V_V_write,
        if_dout => fifo_C_drain_C_drain_IO_L1_out_1_8_V_V_dout,
        if_empty_n => fifo_C_drain_C_drain_IO_L1_out_1_8_V_V_empty_n,
        if_read => C_drain_IO_L1_out250_U0_fifo_C_drain_in_V_V_read);

    fifo_C_drain_C_drain_IO_L1_out_1_7_V_V_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => C_drain_IO_L1_out250_U0_fifo_C_drain_out_V_V_din,
        if_full_n => fifo_C_drain_C_drain_IO_L1_out_1_7_V_V_full_n,
        if_write => C_drain_IO_L1_out250_U0_fifo_C_drain_out_V_V_write,
        if_dout => fifo_C_drain_C_drain_IO_L1_out_1_7_V_V_dout,
        if_empty_n => fifo_C_drain_C_drain_IO_L1_out_1_7_V_V_empty_n,
        if_read => C_drain_IO_L1_out251_U0_fifo_C_drain_in_V_V_read);

    fifo_C_drain_C_drain_IO_L1_out_1_6_V_V_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => C_drain_IO_L1_out251_U0_fifo_C_drain_out_V_V_din,
        if_full_n => fifo_C_drain_C_drain_IO_L1_out_1_6_V_V_full_n,
        if_write => C_drain_IO_L1_out251_U0_fifo_C_drain_out_V_V_write,
        if_dout => fifo_C_drain_C_drain_IO_L1_out_1_6_V_V_dout,
        if_empty_n => fifo_C_drain_C_drain_IO_L1_out_1_6_V_V_empty_n,
        if_read => C_drain_IO_L1_out252_U0_fifo_C_drain_in_V_V_read);

    fifo_C_drain_C_drain_IO_L1_out_1_5_V_V_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => C_drain_IO_L1_out252_U0_fifo_C_drain_out_V_V_din,
        if_full_n => fifo_C_drain_C_drain_IO_L1_out_1_5_V_V_full_n,
        if_write => C_drain_IO_L1_out252_U0_fifo_C_drain_out_V_V_write,
        if_dout => fifo_C_drain_C_drain_IO_L1_out_1_5_V_V_dout,
        if_empty_n => fifo_C_drain_C_drain_IO_L1_out_1_5_V_V_empty_n,
        if_read => C_drain_IO_L1_out253_U0_fifo_C_drain_in_V_V_read);

    fifo_C_drain_C_drain_IO_L1_out_1_4_V_V_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => C_drain_IO_L1_out253_U0_fifo_C_drain_out_V_V_din,
        if_full_n => fifo_C_drain_C_drain_IO_L1_out_1_4_V_V_full_n,
        if_write => C_drain_IO_L1_out253_U0_fifo_C_drain_out_V_V_write,
        if_dout => fifo_C_drain_C_drain_IO_L1_out_1_4_V_V_dout,
        if_empty_n => fifo_C_drain_C_drain_IO_L1_out_1_4_V_V_empty_n,
        if_read => C_drain_IO_L1_out254_U0_fifo_C_drain_in_V_V_read);

    fifo_C_drain_C_drain_IO_L1_out_1_3_V_V_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => C_drain_IO_L1_out254_U0_fifo_C_drain_out_V_V_din,
        if_full_n => fifo_C_drain_C_drain_IO_L1_out_1_3_V_V_full_n,
        if_write => C_drain_IO_L1_out254_U0_fifo_C_drain_out_V_V_write,
        if_dout => fifo_C_drain_C_drain_IO_L1_out_1_3_V_V_dout,
        if_empty_n => fifo_C_drain_C_drain_IO_L1_out_1_3_V_V_empty_n,
        if_read => C_drain_IO_L1_out255_U0_fifo_C_drain_in_V_V_read);

    fifo_C_drain_C_drain_IO_L1_out_1_2_V_V_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => C_drain_IO_L1_out255_U0_fifo_C_drain_out_V_V_din,
        if_full_n => fifo_C_drain_C_drain_IO_L1_out_1_2_V_V_full_n,
        if_write => C_drain_IO_L1_out255_U0_fifo_C_drain_out_V_V_write,
        if_dout => fifo_C_drain_C_drain_IO_L1_out_1_2_V_V_dout,
        if_empty_n => fifo_C_drain_C_drain_IO_L1_out_1_2_V_V_empty_n,
        if_read => C_drain_IO_L1_out256_U0_fifo_C_drain_in_V_V_read);

    fifo_C_drain_C_drain_IO_L1_out_1_1_V_V_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => C_drain_IO_L1_out256_U0_fifo_C_drain_out_V_V_din,
        if_full_n => fifo_C_drain_C_drain_IO_L1_out_1_1_V_V_full_n,
        if_write => C_drain_IO_L1_out256_U0_fifo_C_drain_out_V_V_write,
        if_dout => fifo_C_drain_C_drain_IO_L1_out_1_1_V_V_dout,
        if_empty_n => fifo_C_drain_C_drain_IO_L1_out_1_1_V_V_empty_n,
        if_read => C_drain_IO_L1_out257_U0_fifo_C_drain_in_V_V_read);

    fifo_C_drain_C_drain_IO_L1_out_1_0_V_V_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => C_drain_IO_L1_out257_U0_fifo_C_drain_out_V_V_din,
        if_full_n => fifo_C_drain_C_drain_IO_L1_out_1_0_V_V_full_n,
        if_write => C_drain_IO_L1_out257_U0_fifo_C_drain_out_V_V_write,
        if_dout => fifo_C_drain_C_drain_IO_L1_out_1_0_V_V_dout,
        if_empty_n => fifo_C_drain_C_drain_IO_L1_out_1_0_V_V_empty_n,
        if_read => C_drain_IO_L2_out_boundary_U0_fifo_C_drain_local_in_V_V_read);

    fifo_C_drain_C_drain_IO_L2_out_1_V_V_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => C_drain_IO_L2_out_boundary_U0_fifo_C_drain_out_V_V_din,
        if_full_n => fifo_C_drain_C_drain_IO_L2_out_1_V_V_full_n,
        if_write => C_drain_IO_L2_out_boundary_U0_fifo_C_drain_out_V_V_write,
        if_dout => fifo_C_drain_C_drain_IO_L2_out_1_V_V_dout,
        if_empty_n => fifo_C_drain_C_drain_IO_L2_out_1_V_V_empty_n,
        if_read => C_drain_IO_L2_out_U0_fifo_C_drain_in_V_V_read);

    fifo_C_drain_C_drain_IO_L2_out_0_V_V_U : component kernel3_fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => C_drain_IO_L2_out_U0_fifo_C_drain_out_V_V_din,
        if_full_n => fifo_C_drain_C_drain_IO_L2_out_0_V_V_full_n,
        if_write => C_drain_IO_L2_out_U0_fifo_C_drain_out_V_V_write,
        if_dout => fifo_C_drain_C_drain_IO_L2_out_0_V_V_dout,
        if_empty_n => fifo_C_drain_C_drain_IO_L2_out_0_V_V_empty_n,
        if_read => C_drain_IO_L3_out_U0_fifo_C_drain_local_in_V_V_read);





    ap_sync_reg_A_IO_L2_in208_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_A_IO_L2_in208_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_A_IO_L2_in208_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_A_IO_L2_in209_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_A_IO_L2_in209_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_A_IO_L2_in209_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_A_IO_L2_in210_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_A_IO_L2_in210_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_A_IO_L2_in210_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_A_IO_L2_in211_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_A_IO_L2_in211_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_A_IO_L2_in211_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_A_IO_L2_in212_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_A_IO_L2_in212_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_A_IO_L2_in212_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_A_IO_L2_in213_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_A_IO_L2_in213_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_A_IO_L2_in213_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_A_IO_L2_in214_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_A_IO_L2_in214_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_A_IO_L2_in214_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_A_IO_L2_in215_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_A_IO_L2_in215_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_A_IO_L2_in215_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_A_IO_L2_in216_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_A_IO_L2_in216_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_A_IO_L2_in216_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_A_IO_L2_in217_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_A_IO_L2_in217_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_A_IO_L2_in217_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_A_IO_L2_in218_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_A_IO_L2_in218_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_A_IO_L2_in218_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_A_IO_L2_in219_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_A_IO_L2_in219_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_A_IO_L2_in219_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_A_IO_L2_in_boundary_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_A_IO_L2_in_boundary_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_A_IO_L2_in_boundary_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_A_IO_L3_in_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_A_IO_L3_in_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_A_IO_L3_in_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_A_IO_L3_in_U0_ap_ready <= ap_sync_A_IO_L3_in_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_A_PE_dummy220_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_A_PE_dummy220_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_A_PE_dummy220_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_A_PE_dummy221_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_A_PE_dummy221_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_A_PE_dummy221_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_A_PE_dummy222_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_A_PE_dummy222_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_A_PE_dummy222_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_A_PE_dummy223_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_A_PE_dummy223_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_A_PE_dummy223_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_A_PE_dummy224_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_A_PE_dummy224_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_A_PE_dummy224_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_A_PE_dummy225_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_A_PE_dummy225_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_A_PE_dummy225_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_A_PE_dummy226_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_A_PE_dummy226_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_A_PE_dummy226_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_A_PE_dummy227_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_A_PE_dummy227_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_A_PE_dummy227_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_A_PE_dummy228_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_A_PE_dummy228_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_A_PE_dummy228_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_A_PE_dummy229_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_A_PE_dummy229_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_A_PE_dummy229_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_A_PE_dummy230_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_A_PE_dummy230_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_A_PE_dummy230_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_A_PE_dummy231_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_A_PE_dummy231_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_A_PE_dummy231_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_A_PE_dummy_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_A_PE_dummy_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_A_PE_dummy_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_B_IO_L2_in_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_B_IO_L2_in_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_B_IO_L2_in_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_B_IO_L2_in_boundary_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_B_IO_L2_in_boundary_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_B_IO_L2_in_boundary_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_B_IO_L3_in_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_B_IO_L3_in_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_B_IO_L3_in_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_B_IO_L3_in_U0_ap_ready <= ap_sync_B_IO_L3_in_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_B_PE_dummy232_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_B_PE_dummy232_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_B_PE_dummy232_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_B_PE_dummy_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_B_PE_dummy_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_B_PE_dummy_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L1_out234_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L1_out234_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L1_out234_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L1_out235_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L1_out235_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L1_out235_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L1_out236_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L1_out236_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L1_out236_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L1_out237_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L1_out237_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L1_out237_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L1_out238_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L1_out238_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L1_out238_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L1_out239_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L1_out239_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L1_out239_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L1_out240_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L1_out240_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L1_out240_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L1_out241_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L1_out241_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L1_out241_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L1_out242_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L1_out242_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L1_out242_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L1_out243_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L1_out243_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L1_out243_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L1_out244_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L1_out244_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L1_out244_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L1_out245_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L1_out245_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L1_out245_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L1_out246_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L1_out246_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L1_out246_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L1_out247_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L1_out247_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L1_out247_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L1_out248_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L1_out248_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L1_out248_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L1_out249_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L1_out249_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L1_out249_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L1_out250_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L1_out250_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L1_out250_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L1_out251_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L1_out251_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L1_out251_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L1_out252_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L1_out252_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L1_out252_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L1_out253_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L1_out253_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L1_out253_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L1_out254_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L1_out254_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L1_out254_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L1_out255_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L1_out255_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L1_out255_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L1_out256_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L1_out256_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L1_out256_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L1_out257_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L1_out257_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L1_out257_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L1_out_boundary233_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L1_out_boundary233_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L1_out_boundary233_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L1_out_boundary_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L1_out_boundary_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L1_out_boundary_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L2_out_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L2_out_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L2_out_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L2_out_boundary_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L2_out_boundary_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L2_out_boundary_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_C_drain_IO_L3_out_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_C_drain_IO_L3_out_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_C_drain_IO_L3_out_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_PE_wrapper_0_0_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_PE_wrapper_0_0_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_PE_wrapper_0_0_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_PE_wrapper_0_1_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_PE_wrapper_0_1_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_PE_wrapper_0_1_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_PE_wrapper_10_0_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_PE_wrapper_10_0_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_PE_wrapper_10_0_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_PE_wrapper_10_1_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_PE_wrapper_10_1_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_PE_wrapper_10_1_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_PE_wrapper_11_0_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_PE_wrapper_11_0_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_PE_wrapper_11_0_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_PE_wrapper_11_1_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_PE_wrapper_11_1_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_PE_wrapper_11_1_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_PE_wrapper_12_0_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_PE_wrapper_12_0_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_PE_wrapper_12_0_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_PE_wrapper_12_1_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_PE_wrapper_12_1_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_PE_wrapper_12_1_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_PE_wrapper_1_0_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_PE_wrapper_1_0_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_PE_wrapper_1_0_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_PE_wrapper_1_1_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_PE_wrapper_1_1_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_PE_wrapper_1_1_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_PE_wrapper_2_0_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_PE_wrapper_2_0_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_PE_wrapper_2_0_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_PE_wrapper_2_1_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_PE_wrapper_2_1_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_PE_wrapper_2_1_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_PE_wrapper_3_0_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_PE_wrapper_3_0_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_PE_wrapper_3_0_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_PE_wrapper_3_1_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_PE_wrapper_3_1_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_PE_wrapper_3_1_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_PE_wrapper_4_0_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_PE_wrapper_4_0_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_PE_wrapper_4_0_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_PE_wrapper_4_1_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_PE_wrapper_4_1_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_PE_wrapper_4_1_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_PE_wrapper_5_0_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_PE_wrapper_5_0_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_PE_wrapper_5_0_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_PE_wrapper_5_1_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_PE_wrapper_5_1_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_PE_wrapper_5_1_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_PE_wrapper_6_0_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_PE_wrapper_6_0_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_PE_wrapper_6_0_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_PE_wrapper_6_1_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_PE_wrapper_6_1_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_PE_wrapper_6_1_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_PE_wrapper_7_0_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_PE_wrapper_7_0_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_PE_wrapper_7_0_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_PE_wrapper_7_1_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_PE_wrapper_7_1_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_PE_wrapper_7_1_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_PE_wrapper_8_0_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_PE_wrapper_8_0_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_PE_wrapper_8_0_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_PE_wrapper_8_1_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_PE_wrapper_8_1_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_PE_wrapper_8_1_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_PE_wrapper_9_0_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_PE_wrapper_9_0_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_PE_wrapper_9_0_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_PE_wrapper_9_1_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_PE_wrapper_9_1_U0_ap_start <= ap_const_logic_0;
            else
                if ((ap_start = ap_const_logic_1)) then 
                    ap_sync_reg_PE_wrapper_9_1_U0_ap_start <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_kernel3_entry14_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_kernel3_entry14_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_kernel3_entry14_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_kernel3_entry14_U0_ap_ready <= ap_sync_kernel3_entry14_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    A_IO_L3_in_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_0 = A_IO_L3_in_U0_ap_ready) and (ap_sync_ready = ap_const_logic_1))) then 
                A_IO_L3_in_U0_ap_ready_count <= std_logic_vector(unsigned(A_IO_L3_in_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (ap_const_logic_1 = A_IO_L3_in_U0_ap_ready))) then 
                A_IO_L3_in_U0_ap_ready_count <= std_logic_vector(unsigned(A_IO_L3_in_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    B_IO_L3_in_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_0 = B_IO_L3_in_U0_ap_ready) and (ap_sync_ready = ap_const_logic_1))) then 
                B_IO_L3_in_U0_ap_ready_count <= std_logic_vector(unsigned(B_IO_L3_in_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (ap_const_logic_1 = B_IO_L3_in_U0_ap_ready))) then 
                B_IO_L3_in_U0_ap_ready_count <= std_logic_vector(unsigned(B_IO_L3_in_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    ap_rst_n_inv_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_n_inv <= ap_rst_reg_1;
        end if;
    end process;

    ap_rst_reg_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_reg_1 <= ap_rst_reg_2;
        end if;
    end process;

    ap_rst_reg_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
                        ap_rst_reg_2 <= not(ap_rst_n);
        end if;
    end process;

    kernel3_entry14_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((kernel3_entry14_U0_ap_ready = ap_const_logic_0) and (ap_sync_ready = ap_const_logic_1))) then 
                kernel3_entry14_U0_ap_ready_count <= std_logic_vector(unsigned(kernel3_entry14_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (kernel3_entry14_U0_ap_ready = ap_const_logic_1))) then 
                kernel3_entry14_U0_ap_ready_count <= std_logic_vector(unsigned(kernel3_entry14_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;
    A_IO_L2_in208_U0_ap_continue <= ap_const_logic_1;
    A_IO_L2_in208_U0_ap_start <= (ap_sync_reg_A_IO_L2_in208_U0_ap_start or ap_start);
    A_IO_L2_in209_U0_ap_continue <= ap_const_logic_1;
    A_IO_L2_in209_U0_ap_start <= (ap_sync_reg_A_IO_L2_in209_U0_ap_start or ap_start);
    A_IO_L2_in210_U0_ap_continue <= ap_const_logic_1;
    A_IO_L2_in210_U0_ap_start <= (ap_sync_reg_A_IO_L2_in210_U0_ap_start or ap_start);
    A_IO_L2_in211_U0_ap_continue <= ap_const_logic_1;
    A_IO_L2_in211_U0_ap_start <= (ap_sync_reg_A_IO_L2_in211_U0_ap_start or ap_start);
    A_IO_L2_in212_U0_ap_continue <= ap_const_logic_1;
    A_IO_L2_in212_U0_ap_start <= (ap_sync_reg_A_IO_L2_in212_U0_ap_start or ap_start);
    A_IO_L2_in213_U0_ap_continue <= ap_const_logic_1;
    A_IO_L2_in213_U0_ap_start <= (ap_sync_reg_A_IO_L2_in213_U0_ap_start or ap_start);
    A_IO_L2_in214_U0_ap_continue <= ap_const_logic_1;
    A_IO_L2_in214_U0_ap_start <= (ap_sync_reg_A_IO_L2_in214_U0_ap_start or ap_start);
    A_IO_L2_in215_U0_ap_continue <= ap_const_logic_1;
    A_IO_L2_in215_U0_ap_start <= (ap_sync_reg_A_IO_L2_in215_U0_ap_start or ap_start);
    A_IO_L2_in216_U0_ap_continue <= ap_const_logic_1;
    A_IO_L2_in216_U0_ap_start <= (ap_sync_reg_A_IO_L2_in216_U0_ap_start or ap_start);
    A_IO_L2_in217_U0_ap_continue <= ap_const_logic_1;
    A_IO_L2_in217_U0_ap_start <= (ap_sync_reg_A_IO_L2_in217_U0_ap_start or ap_start);
    A_IO_L2_in218_U0_ap_continue <= ap_const_logic_1;
    A_IO_L2_in218_U0_ap_start <= (ap_sync_reg_A_IO_L2_in218_U0_ap_start or ap_start);
    A_IO_L2_in219_U0_ap_continue <= ap_const_logic_1;
    A_IO_L2_in219_U0_ap_start <= (ap_sync_reg_A_IO_L2_in219_U0_ap_start or ap_start);
    A_IO_L2_in_boundary_U0_ap_continue <= ap_const_logic_1;
    A_IO_L2_in_boundary_U0_ap_start <= (ap_sync_reg_A_IO_L2_in_boundary_U0_ap_start or ap_start);
    A_IO_L3_in_U0_ap_continue <= ap_const_logic_1;
    A_IO_L3_in_U0_ap_start <= ((ap_sync_reg_A_IO_L3_in_U0_ap_ready xor ap_const_logic_1) and ap_start);
    A_PE_dummy220_U0_ap_continue <= ap_sync_done;
    A_PE_dummy220_U0_ap_start <= (ap_sync_reg_A_PE_dummy220_U0_ap_start or ap_start);
    A_PE_dummy221_U0_ap_continue <= ap_sync_done;
    A_PE_dummy221_U0_ap_start <= (ap_sync_reg_A_PE_dummy221_U0_ap_start or ap_start);
    A_PE_dummy222_U0_ap_continue <= ap_sync_done;
    A_PE_dummy222_U0_ap_start <= (ap_sync_reg_A_PE_dummy222_U0_ap_start or ap_start);
    A_PE_dummy223_U0_ap_continue <= ap_sync_done;
    A_PE_dummy223_U0_ap_start <= (ap_sync_reg_A_PE_dummy223_U0_ap_start or ap_start);
    A_PE_dummy224_U0_ap_continue <= ap_sync_done;
    A_PE_dummy224_U0_ap_start <= (ap_sync_reg_A_PE_dummy224_U0_ap_start or ap_start);
    A_PE_dummy225_U0_ap_continue <= ap_sync_done;
    A_PE_dummy225_U0_ap_start <= (ap_sync_reg_A_PE_dummy225_U0_ap_start or ap_start);
    A_PE_dummy226_U0_ap_continue <= ap_sync_done;
    A_PE_dummy226_U0_ap_start <= (ap_sync_reg_A_PE_dummy226_U0_ap_start or ap_start);
    A_PE_dummy227_U0_ap_continue <= ap_sync_done;
    A_PE_dummy227_U0_ap_start <= (ap_sync_reg_A_PE_dummy227_U0_ap_start or ap_start);
    A_PE_dummy228_U0_ap_continue <= ap_sync_done;
    A_PE_dummy228_U0_ap_start <= (ap_sync_reg_A_PE_dummy228_U0_ap_start or ap_start);
    A_PE_dummy229_U0_ap_continue <= ap_sync_done;
    A_PE_dummy229_U0_ap_start <= (ap_sync_reg_A_PE_dummy229_U0_ap_start or ap_start);
    A_PE_dummy230_U0_ap_continue <= ap_sync_done;
    A_PE_dummy230_U0_ap_start <= (ap_sync_reg_A_PE_dummy230_U0_ap_start or ap_start);
    A_PE_dummy231_U0_ap_continue <= ap_sync_done;
    A_PE_dummy231_U0_ap_start <= (ap_sync_reg_A_PE_dummy231_U0_ap_start or ap_start);
    A_PE_dummy_U0_ap_continue <= ap_sync_done;
    A_PE_dummy_U0_ap_start <= (ap_sync_reg_A_PE_dummy_U0_ap_start or ap_start);
    B_IO_L2_in_U0_ap_continue <= ap_const_logic_1;
    B_IO_L2_in_U0_ap_start <= (ap_sync_reg_B_IO_L2_in_U0_ap_start or ap_start);
    B_IO_L2_in_boundary_U0_ap_continue <= ap_const_logic_1;
    B_IO_L2_in_boundary_U0_ap_start <= (ap_sync_reg_B_IO_L2_in_boundary_U0_ap_start or ap_start);
    B_IO_L3_in_U0_ap_continue <= ap_const_logic_1;
    B_IO_L3_in_U0_ap_start <= ((ap_sync_reg_B_IO_L3_in_U0_ap_ready xor ap_const_logic_1) and ap_start);
    B_PE_dummy232_U0_ap_continue <= ap_sync_done;
    B_PE_dummy232_U0_ap_start <= (ap_sync_reg_B_PE_dummy232_U0_ap_start or ap_start);
    B_PE_dummy_U0_ap_continue <= ap_sync_done;
    B_PE_dummy_U0_ap_start <= (ap_sync_reg_B_PE_dummy_U0_ap_start or ap_start);
    C_drain_IO_L1_out234_U0_ap_continue <= ap_const_logic_1;
    C_drain_IO_L1_out234_U0_ap_start <= (ap_sync_reg_C_drain_IO_L1_out234_U0_ap_start or ap_start);
    C_drain_IO_L1_out235_U0_ap_continue <= ap_const_logic_1;
    C_drain_IO_L1_out235_U0_ap_start <= (ap_sync_reg_C_drain_IO_L1_out235_U0_ap_start or ap_start);
    C_drain_IO_L1_out236_U0_ap_continue <= ap_const_logic_1;
    C_drain_IO_L1_out236_U0_ap_start <= (ap_sync_reg_C_drain_IO_L1_out236_U0_ap_start or ap_start);
    C_drain_IO_L1_out237_U0_ap_continue <= ap_const_logic_1;
    C_drain_IO_L1_out237_U0_ap_start <= (ap_sync_reg_C_drain_IO_L1_out237_U0_ap_start or ap_start);
    C_drain_IO_L1_out238_U0_ap_continue <= ap_const_logic_1;
    C_drain_IO_L1_out238_U0_ap_start <= (ap_sync_reg_C_drain_IO_L1_out238_U0_ap_start or ap_start);
    C_drain_IO_L1_out239_U0_ap_continue <= ap_const_logic_1;
    C_drain_IO_L1_out239_U0_ap_start <= (ap_sync_reg_C_drain_IO_L1_out239_U0_ap_start or ap_start);
    C_drain_IO_L1_out240_U0_ap_continue <= ap_const_logic_1;
    C_drain_IO_L1_out240_U0_ap_start <= (ap_sync_reg_C_drain_IO_L1_out240_U0_ap_start or ap_start);
    C_drain_IO_L1_out241_U0_ap_continue <= ap_const_logic_1;
    C_drain_IO_L1_out241_U0_ap_start <= (ap_sync_reg_C_drain_IO_L1_out241_U0_ap_start or ap_start);
    C_drain_IO_L1_out242_U0_ap_continue <= ap_const_logic_1;
    C_drain_IO_L1_out242_U0_ap_start <= (ap_sync_reg_C_drain_IO_L1_out242_U0_ap_start or ap_start);
    C_drain_IO_L1_out243_U0_ap_continue <= ap_const_logic_1;
    C_drain_IO_L1_out243_U0_ap_start <= (ap_sync_reg_C_drain_IO_L1_out243_U0_ap_start or ap_start);
    C_drain_IO_L1_out244_U0_ap_continue <= ap_const_logic_1;
    C_drain_IO_L1_out244_U0_ap_start <= (ap_sync_reg_C_drain_IO_L1_out244_U0_ap_start or ap_start);
    C_drain_IO_L1_out245_U0_ap_continue <= ap_const_logic_1;
    C_drain_IO_L1_out245_U0_ap_start <= (ap_sync_reg_C_drain_IO_L1_out245_U0_ap_start or ap_start);
    C_drain_IO_L1_out246_U0_ap_continue <= ap_const_logic_1;
    C_drain_IO_L1_out246_U0_ap_start <= (ap_sync_reg_C_drain_IO_L1_out246_U0_ap_start or ap_start);
    C_drain_IO_L1_out247_U0_ap_continue <= ap_const_logic_1;
    C_drain_IO_L1_out247_U0_ap_start <= (ap_sync_reg_C_drain_IO_L1_out247_U0_ap_start or ap_start);
    C_drain_IO_L1_out248_U0_ap_continue <= ap_const_logic_1;
    C_drain_IO_L1_out248_U0_ap_start <= (ap_sync_reg_C_drain_IO_L1_out248_U0_ap_start or ap_start);
    C_drain_IO_L1_out249_U0_ap_continue <= ap_const_logic_1;
    C_drain_IO_L1_out249_U0_ap_start <= (ap_sync_reg_C_drain_IO_L1_out249_U0_ap_start or ap_start);
    C_drain_IO_L1_out250_U0_ap_continue <= ap_const_logic_1;
    C_drain_IO_L1_out250_U0_ap_start <= (ap_sync_reg_C_drain_IO_L1_out250_U0_ap_start or ap_start);
    C_drain_IO_L1_out251_U0_ap_continue <= ap_const_logic_1;
    C_drain_IO_L1_out251_U0_ap_start <= (ap_sync_reg_C_drain_IO_L1_out251_U0_ap_start or ap_start);
    C_drain_IO_L1_out252_U0_ap_continue <= ap_const_logic_1;
    C_drain_IO_L1_out252_U0_ap_start <= (ap_sync_reg_C_drain_IO_L1_out252_U0_ap_start or ap_start);
    C_drain_IO_L1_out253_U0_ap_continue <= ap_const_logic_1;
    C_drain_IO_L1_out253_U0_ap_start <= (ap_sync_reg_C_drain_IO_L1_out253_U0_ap_start or ap_start);
    C_drain_IO_L1_out254_U0_ap_continue <= ap_const_logic_1;
    C_drain_IO_L1_out254_U0_ap_start <= (ap_sync_reg_C_drain_IO_L1_out254_U0_ap_start or ap_start);
    C_drain_IO_L1_out255_U0_ap_continue <= ap_const_logic_1;
    C_drain_IO_L1_out255_U0_ap_start <= (ap_sync_reg_C_drain_IO_L1_out255_U0_ap_start or ap_start);
    C_drain_IO_L1_out256_U0_ap_continue <= ap_const_logic_1;
    C_drain_IO_L1_out256_U0_ap_start <= (ap_sync_reg_C_drain_IO_L1_out256_U0_ap_start or ap_start);
    C_drain_IO_L1_out257_U0_ap_continue <= ap_const_logic_1;
    C_drain_IO_L1_out257_U0_ap_start <= (ap_sync_reg_C_drain_IO_L1_out257_U0_ap_start or ap_start);
    C_drain_IO_L1_out_boundary233_U0_ap_continue <= ap_const_logic_1;
    C_drain_IO_L1_out_boundary233_U0_ap_start <= (ap_sync_reg_C_drain_IO_L1_out_boundary233_U0_ap_start or ap_start);
    C_drain_IO_L1_out_boundary_U0_ap_continue <= ap_const_logic_1;
    C_drain_IO_L1_out_boundary_U0_ap_start <= (ap_sync_reg_C_drain_IO_L1_out_boundary_U0_ap_start or ap_start);
    C_drain_IO_L2_out_U0_ap_continue <= ap_const_logic_1;
    C_drain_IO_L2_out_U0_ap_start <= (ap_sync_reg_C_drain_IO_L2_out_U0_ap_start or ap_start);
    C_drain_IO_L2_out_boundary_U0_ap_continue <= ap_const_logic_1;
    C_drain_IO_L2_out_boundary_U0_ap_start <= (ap_sync_reg_C_drain_IO_L2_out_boundary_U0_ap_start or ap_start);
    C_drain_IO_L3_out_U0_ap_continue <= ap_sync_done;
    C_drain_IO_L3_out_U0_ap_start <= (ap_sync_reg_C_drain_IO_L3_out_U0_ap_start or ap_start);
    PE_wrapper_0_0_U0_ap_continue <= ap_const_logic_1;
    PE_wrapper_0_0_U0_ap_start <= (ap_sync_reg_PE_wrapper_0_0_U0_ap_start or ap_start);
    PE_wrapper_0_1_U0_ap_continue <= ap_const_logic_1;
    PE_wrapper_0_1_U0_ap_start <= (ap_sync_reg_PE_wrapper_0_1_U0_ap_start or ap_start);
    PE_wrapper_10_0_U0_ap_continue <= ap_const_logic_1;
    PE_wrapper_10_0_U0_ap_start <= (ap_sync_reg_PE_wrapper_10_0_U0_ap_start or ap_start);
    PE_wrapper_10_1_U0_ap_continue <= ap_const_logic_1;
    PE_wrapper_10_1_U0_ap_start <= (ap_sync_reg_PE_wrapper_10_1_U0_ap_start or ap_start);
    PE_wrapper_11_0_U0_ap_continue <= ap_const_logic_1;
    PE_wrapper_11_0_U0_ap_start <= (ap_sync_reg_PE_wrapper_11_0_U0_ap_start or ap_start);
    PE_wrapper_11_1_U0_ap_continue <= ap_const_logic_1;
    PE_wrapper_11_1_U0_ap_start <= (ap_sync_reg_PE_wrapper_11_1_U0_ap_start or ap_start);
    PE_wrapper_12_0_U0_ap_continue <= ap_const_logic_1;
    PE_wrapper_12_0_U0_ap_start <= (ap_sync_reg_PE_wrapper_12_0_U0_ap_start or ap_start);
    PE_wrapper_12_1_U0_ap_continue <= ap_const_logic_1;
    PE_wrapper_12_1_U0_ap_start <= (ap_sync_reg_PE_wrapper_12_1_U0_ap_start or ap_start);
    PE_wrapper_1_0_U0_ap_continue <= ap_const_logic_1;
    PE_wrapper_1_0_U0_ap_start <= (ap_sync_reg_PE_wrapper_1_0_U0_ap_start or ap_start);
    PE_wrapper_1_1_U0_ap_continue <= ap_const_logic_1;
    PE_wrapper_1_1_U0_ap_start <= (ap_sync_reg_PE_wrapper_1_1_U0_ap_start or ap_start);
    PE_wrapper_2_0_U0_ap_continue <= ap_const_logic_1;
    PE_wrapper_2_0_U0_ap_start <= (ap_sync_reg_PE_wrapper_2_0_U0_ap_start or ap_start);
    PE_wrapper_2_1_U0_ap_continue <= ap_const_logic_1;
    PE_wrapper_2_1_U0_ap_start <= (ap_sync_reg_PE_wrapper_2_1_U0_ap_start or ap_start);
    PE_wrapper_3_0_U0_ap_continue <= ap_const_logic_1;
    PE_wrapper_3_0_U0_ap_start <= (ap_sync_reg_PE_wrapper_3_0_U0_ap_start or ap_start);
    PE_wrapper_3_1_U0_ap_continue <= ap_const_logic_1;
    PE_wrapper_3_1_U0_ap_start <= (ap_sync_reg_PE_wrapper_3_1_U0_ap_start or ap_start);
    PE_wrapper_4_0_U0_ap_continue <= ap_const_logic_1;
    PE_wrapper_4_0_U0_ap_start <= (ap_sync_reg_PE_wrapper_4_0_U0_ap_start or ap_start);
    PE_wrapper_4_1_U0_ap_continue <= ap_const_logic_1;
    PE_wrapper_4_1_U0_ap_start <= (ap_sync_reg_PE_wrapper_4_1_U0_ap_start or ap_start);
    PE_wrapper_5_0_U0_ap_continue <= ap_const_logic_1;
    PE_wrapper_5_0_U0_ap_start <= (ap_sync_reg_PE_wrapper_5_0_U0_ap_start or ap_start);
    PE_wrapper_5_1_U0_ap_continue <= ap_const_logic_1;
    PE_wrapper_5_1_U0_ap_start <= (ap_sync_reg_PE_wrapper_5_1_U0_ap_start or ap_start);
    PE_wrapper_6_0_U0_ap_continue <= ap_const_logic_1;
    PE_wrapper_6_0_U0_ap_start <= (ap_sync_reg_PE_wrapper_6_0_U0_ap_start or ap_start);
    PE_wrapper_6_1_U0_ap_continue <= ap_const_logic_1;
    PE_wrapper_6_1_U0_ap_start <= (ap_sync_reg_PE_wrapper_6_1_U0_ap_start or ap_start);
    PE_wrapper_7_0_U0_ap_continue <= ap_const_logic_1;
    PE_wrapper_7_0_U0_ap_start <= (ap_sync_reg_PE_wrapper_7_0_U0_ap_start or ap_start);
    PE_wrapper_7_1_U0_ap_continue <= ap_const_logic_1;
    PE_wrapper_7_1_U0_ap_start <= (ap_sync_reg_PE_wrapper_7_1_U0_ap_start or ap_start);
    PE_wrapper_8_0_U0_ap_continue <= ap_const_logic_1;
    PE_wrapper_8_0_U0_ap_start <= (ap_sync_reg_PE_wrapper_8_0_U0_ap_start or ap_start);
    PE_wrapper_8_1_U0_ap_continue <= ap_const_logic_1;
    PE_wrapper_8_1_U0_ap_start <= (ap_sync_reg_PE_wrapper_8_1_U0_ap_start or ap_start);
    PE_wrapper_9_0_U0_ap_continue <= ap_const_logic_1;
    PE_wrapper_9_0_U0_ap_start <= (ap_sync_reg_PE_wrapper_9_0_U0_ap_start or ap_start);
    PE_wrapper_9_1_U0_ap_continue <= ap_const_logic_1;
    PE_wrapper_9_1_U0_ap_start <= (ap_sync_reg_PE_wrapper_9_1_U0_ap_start or ap_start);
    ap_done <= ap_sync_done;
    ap_idle <= (kernel3_entry14_U0_ap_idle and PE_wrapper_9_1_U0_ap_idle and PE_wrapper_9_0_U0_ap_idle and PE_wrapper_8_1_U0_ap_idle and PE_wrapper_8_0_U0_ap_idle and PE_wrapper_7_1_U0_ap_idle and PE_wrapper_7_0_U0_ap_idle and PE_wrapper_6_1_U0_ap_idle and PE_wrapper_6_0_U0_ap_idle and PE_wrapper_5_1_U0_ap_idle and PE_wrapper_5_0_U0_ap_idle and PE_wrapper_4_1_U0_ap_idle and PE_wrapper_4_0_U0_ap_idle and PE_wrapper_3_1_U0_ap_idle and PE_wrapper_3_0_U0_ap_idle and PE_wrapper_2_1_U0_ap_idle and PE_wrapper_2_0_U0_ap_idle and PE_wrapper_1_1_U0_ap_idle and PE_wrapper_1_0_U0_ap_idle and PE_wrapper_12_1_U0_ap_idle and PE_wrapper_12_0_U0_ap_idle and PE_wrapper_11_1_U0_ap_idle and PE_wrapper_11_0_U0_ap_idle and PE_wrapper_10_1_U0_ap_idle and PE_wrapper_10_0_U0_ap_idle and PE_wrapper_0_1_U0_ap_idle and PE_wrapper_0_0_U0_ap_idle and C_drain_IO_L3_out_U0_ap_idle and C_drain_IO_L2_out_boundary_U0_ap_idle and C_drain_IO_L2_out_U0_ap_idle and C_drain_IO_L1_out_boundary_U0_ap_idle and C_drain_IO_L1_out_boundary233_U0_ap_idle and C_drain_IO_L1_out257_U0_ap_idle and C_drain_IO_L1_out256_U0_ap_idle and C_drain_IO_L1_out255_U0_ap_idle and C_drain_IO_L1_out254_U0_ap_idle and C_drain_IO_L1_out253_U0_ap_idle and C_drain_IO_L1_out252_U0_ap_idle and C_drain_IO_L1_out251_U0_ap_idle and C_drain_IO_L1_out250_U0_ap_idle and C_drain_IO_L1_out249_U0_ap_idle and C_drain_IO_L1_out248_U0_ap_idle and C_drain_IO_L1_out247_U0_ap_idle and C_drain_IO_L1_out246_U0_ap_idle and C_drain_IO_L1_out245_U0_ap_idle and C_drain_IO_L1_out244_U0_ap_idle and C_drain_IO_L1_out243_U0_ap_idle and C_drain_IO_L1_out242_U0_ap_idle and C_drain_IO_L1_out241_U0_ap_idle and C_drain_IO_L1_out240_U0_ap_idle and C_drain_IO_L1_out239_U0_ap_idle and C_drain_IO_L1_out238_U0_ap_idle and C_drain_IO_L1_out237_U0_ap_idle and C_drain_IO_L1_out236_U0_ap_idle and C_drain_IO_L1_out235_U0_ap_idle and C_drain_IO_L1_out234_U0_ap_idle and B_PE_dummy_U0_ap_idle and B_PE_dummy232_U0_ap_idle and B_IO_L3_in_U0_ap_idle and B_IO_L2_in_boundary_U0_ap_idle and B_IO_L2_in_U0_ap_idle and A_PE_dummy_U0_ap_idle and A_PE_dummy231_U0_ap_idle and A_PE_dummy230_U0_ap_idle and A_PE_dummy229_U0_ap_idle and A_PE_dummy228_U0_ap_idle and A_PE_dummy227_U0_ap_idle and A_PE_dummy226_U0_ap_idle and A_PE_dummy225_U0_ap_idle and A_PE_dummy224_U0_ap_idle and A_PE_dummy223_U0_ap_idle and A_PE_dummy222_U0_ap_idle and A_PE_dummy221_U0_ap_idle and A_PE_dummy220_U0_ap_idle and A_IO_L3_in_U0_ap_idle and A_IO_L2_in_boundary_U0_ap_idle and A_IO_L2_in219_U0_ap_idle and A_IO_L2_in218_U0_ap_idle and A_IO_L2_in217_U0_ap_idle and A_IO_L2_in216_U0_ap_idle and A_IO_L2_in215_U0_ap_idle and A_IO_L2_in214_U0_ap_idle and A_IO_L2_in213_U0_ap_idle and A_IO_L2_in212_U0_ap_idle and A_IO_L2_in211_U0_ap_idle and A_IO_L2_in210_U0_ap_idle and A_IO_L2_in209_U0_ap_idle and A_IO_L2_in208_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_A_IO_L3_in_U0_ap_ready <= (ap_sync_reg_A_IO_L3_in_U0_ap_ready or A_IO_L3_in_U0_ap_ready);
    ap_sync_B_IO_L3_in_U0_ap_ready <= (ap_sync_reg_B_IO_L3_in_U0_ap_ready or B_IO_L3_in_U0_ap_ready);
    ap_sync_continue <= ap_sync_done;
    ap_sync_done <= (C_drain_IO_L3_out_U0_ap_done and B_PE_dummy_U0_ap_done and B_PE_dummy232_U0_ap_done and A_PE_dummy_U0_ap_done and A_PE_dummy231_U0_ap_done and A_PE_dummy230_U0_ap_done and A_PE_dummy229_U0_ap_done and A_PE_dummy228_U0_ap_done and A_PE_dummy227_U0_ap_done and A_PE_dummy226_U0_ap_done and A_PE_dummy225_U0_ap_done and A_PE_dummy224_U0_ap_done and A_PE_dummy223_U0_ap_done and A_PE_dummy222_U0_ap_done and A_PE_dummy221_U0_ap_done and A_PE_dummy220_U0_ap_done);
    ap_sync_kernel3_entry14_U0_ap_ready <= (kernel3_entry14_U0_ap_ready or ap_sync_reg_kernel3_entry14_U0_ap_ready);
    ap_sync_ready <= (ap_sync_kernel3_entry14_U0_ap_ready and ap_sync_B_IO_L3_in_U0_ap_ready and ap_sync_A_IO_L3_in_U0_ap_ready);
    kernel3_entry14_U0_ap_continue <= ap_const_logic_1;
    kernel3_entry14_U0_ap_start <= ((ap_sync_reg_kernel3_entry14_U0_ap_ready xor ap_const_logic_1) and ap_start);
end behav;
