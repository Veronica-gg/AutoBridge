// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "kernel0_L_drain_IO_L3_out.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic kernel0_L_drain_IO_L3_out::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic kernel0_L_drain_IO_L3_out::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> kernel0_L_drain_IO_L3_out::ap_ST_fsm_state1 = "1";
const sc_lv<4> kernel0_L_drain_IO_L3_out::ap_ST_fsm_state2 = "10";
const sc_lv<4> kernel0_L_drain_IO_L3_out::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> kernel0_L_drain_IO_L3_out::ap_ST_fsm_state11 = "1000";
const sc_lv<32> kernel0_L_drain_IO_L3_out::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool kernel0_L_drain_IO_L3_out::ap_const_boolean_1 = true;
const sc_lv<64> kernel0_L_drain_IO_L3_out::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<1> kernel0_L_drain_IO_L3_out::ap_const_lv1_0 = "0";
const sc_lv<3> kernel0_L_drain_IO_L3_out::ap_const_lv3_0 = "000";
const sc_lv<2> kernel0_L_drain_IO_L3_out::ap_const_lv2_0 = "00";
const sc_lv<4> kernel0_L_drain_IO_L3_out::ap_const_lv4_0 = "0000";
const sc_lv<32> kernel0_L_drain_IO_L3_out::ap_const_lv32_2 = "10";
const bool kernel0_L_drain_IO_L3_out::ap_const_boolean_0 = false;
const sc_lv<32> kernel0_L_drain_IO_L3_out::ap_const_lv32_1 = "1";
const sc_lv<1> kernel0_L_drain_IO_L3_out::ap_const_lv1_1 = "1";
const sc_lv<5> kernel0_L_drain_IO_L3_out::ap_const_lv5_0 = "00000";
const sc_lv<32> kernel0_L_drain_IO_L3_out::ap_const_lv32_3 = "11";
const sc_lv<4> kernel0_L_drain_IO_L3_out::ap_const_lv4_F = "1111";
const sc_lv<32> kernel0_L_drain_IO_L3_out::ap_const_lv32_3F = "111111";
const sc_lv<5> kernel0_L_drain_IO_L3_out::ap_const_lv5_13 = "10011";
const sc_lv<5> kernel0_L_drain_IO_L3_out::ap_const_lv5_1 = "1";
const sc_lv<6> kernel0_L_drain_IO_L3_out::ap_const_lv6_13 = "10011";
const sc_lv<6> kernel0_L_drain_IO_L3_out::ap_const_lv6_1 = "1";

kernel0_L_drain_IO_L3_out::kernel0_L_drain_IO_L3_out(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_L_blk_n_AW);
    sensitive << ( m_axi_L_AWREADY );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln557_reg_254 );

    SC_METHOD(thread_L_blk_n_B);
    sensitive << ( m_axi_L_BVALID );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( icmp_ln557_reg_254_pp0_iter6_reg );

    SC_METHOD(thread_L_blk_n_W);
    sensitive << ( m_axi_L_WREADY );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln557_reg_254_pp0_iter1_reg );

    SC_METHOD(thread_L_offset_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( L_offset_empty_n );

    SC_METHOD(thread_L_offset_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( L_offset_empty_n );

    SC_METHOD(thread_add_ln1353_fu_192_p2);
    sensitive << ( zext_ln214_reg_249 );
    sensitive << ( zext_ln1353_fu_188_p1 );

    SC_METHOD(thread_add_ln565_fu_210_p2);
    sensitive << ( zext_ln548_cast_i_reg_225 );
    sensitive << ( zext_ln565_fu_206_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( m_axi_L_BVALID );
    sensitive << ( fifo_L_drain_local_in_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln557_reg_254 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( icmp_ln557_reg_254_pp0_iter6_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( m_axi_L_BVALID );
    sensitive << ( fifo_L_drain_local_in_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln557_reg_254 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( icmp_ln557_reg_254_pp0_iter6_reg );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_block_state5_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( m_axi_L_BVALID );
    sensitive << ( fifo_L_drain_local_in_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln557_reg_254 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( icmp_ln557_reg_254_pp0_iter6_reg );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_block_state5_io );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( L_offset_empty_n );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter7);
    sensitive << ( m_axi_L_BVALID );
    sensitive << ( icmp_ln557_reg_254_pp0_iter6_reg );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_io);
    sensitive << ( m_axi_L_AWREADY );
    sensitive << ( icmp_ln557_reg_254 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);
    sensitive << ( fifo_L_drain_local_in_V_empty_n );
    sensitive << ( icmp_ln557_reg_254 );

    SC_METHOD(thread_ap_block_state5_io);
    sensitive << ( m_axi_L_WREADY );
    sensitive << ( icmp_ln557_reg_254_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter6);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( icmp_ln557_fu_176_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( icmp_ln555_fu_140_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    SC_METHOD(thread_ap_phi_mux_p_065_0_in_i_phi_fu_120_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln557_reg_254 );
    sensitive << ( p_065_0_in_i_reg_117 );
    sensitive << ( c1_V_reg_258 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( icmp_ln555_fu_140_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_c0_V_fu_146_p2);
    sensitive << ( p_094_0_i_reg_106 );

    SC_METHOD(thread_c1_V_fu_182_p2);
    sensitive << ( ap_phi_mux_p_065_0_in_i_phi_fu_120_p4 );

    SC_METHOD(thread_fifo_L_drain_local_in_V_blk_n);
    sensitive << ( fifo_L_drain_local_in_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln557_reg_254 );

    SC_METHOD(thread_fifo_L_drain_local_in_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln557_reg_254 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln555_fu_140_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( p_094_0_i_reg_106 );

    SC_METHOD(thread_icmp_ln557_fu_176_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_p_065_0_in_i_phi_fu_120_p4 );

    SC_METHOD(thread_m_axi_L_ARADDR);

    SC_METHOD(thread_m_axi_L_ARBURST);

    SC_METHOD(thread_m_axi_L_ARCACHE);

    SC_METHOD(thread_m_axi_L_ARID);

    SC_METHOD(thread_m_axi_L_ARLEN);

    SC_METHOD(thread_m_axi_L_ARLOCK);

    SC_METHOD(thread_m_axi_L_ARPROT);

    SC_METHOD(thread_m_axi_L_ARQOS);

    SC_METHOD(thread_m_axi_L_ARREGION);

    SC_METHOD(thread_m_axi_L_ARSIZE);

    SC_METHOD(thread_m_axi_L_ARUSER);

    SC_METHOD(thread_m_axi_L_ARVALID);

    SC_METHOD(thread_m_axi_L_AWADDR);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln557_reg_254 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( L_addr_reg_263 );

    SC_METHOD(thread_m_axi_L_AWBURST);

    SC_METHOD(thread_m_axi_L_AWCACHE);

    SC_METHOD(thread_m_axi_L_AWID);

    SC_METHOD(thread_m_axi_L_AWLEN);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln557_reg_254 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axi_L_AWLOCK);

    SC_METHOD(thread_m_axi_L_AWPROT);

    SC_METHOD(thread_m_axi_L_AWQOS);

    SC_METHOD(thread_m_axi_L_AWREGION);

    SC_METHOD(thread_m_axi_L_AWSIZE);

    SC_METHOD(thread_m_axi_L_AWUSER);

    SC_METHOD(thread_m_axi_L_AWVALID);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln557_reg_254 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axi_L_BREADY);
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( icmp_ln557_reg_254_pp0_iter6_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axi_L_RREADY);

    SC_METHOD(thread_m_axi_L_WDATA);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln557_reg_254_pp0_iter1_reg );
    sensitive << ( tmp_1751_reg_269 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_m_axi_L_WID);

    SC_METHOD(thread_m_axi_L_WLAST);

    SC_METHOD(thread_m_axi_L_WSTRB);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln557_reg_254_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_m_axi_L_WUSER);

    SC_METHOD(thread_m_axi_L_WVALID);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln557_reg_254_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ret_V_fu_201_p2);
    sensitive << ( shl_ln_i_reg_244 );
    sensitive << ( zext_ln1353_1_fu_197_p1 );

    SC_METHOD(thread_shl_ln1352_1_i_fu_164_p3);
    sensitive << ( p_094_0_i_reg_106 );

    SC_METHOD(thread_shl_ln_i_fu_156_p3);
    sensitive << ( p_094_0_i_reg_106 );

    SC_METHOD(thread_tmp_fu_126_p4);
    sensitive << ( L_offset_dout );

    SC_METHOD(thread_zext_ln1353_1_fu_197_p1);
    sensitive << ( add_ln1353_fu_192_p2 );

    SC_METHOD(thread_zext_ln1353_fu_188_p1);
    sensitive << ( c1_V_fu_182_p2 );

    SC_METHOD(thread_zext_ln214_fu_172_p1);
    sensitive << ( shl_ln1352_1_i_fu_164_p3 );

    SC_METHOD(thread_zext_ln548_cast_i_fu_136_p1);
    sensitive << ( tmp_fu_126_p4 );

    SC_METHOD(thread_zext_ln555_fu_152_p1);
    sensitive << ( p_094_0_i_reg_106 );

    SC_METHOD(thread_zext_ln565_1_fu_215_p1);
    sensitive << ( add_ln565_fu_210_p2 );

    SC_METHOD(thread_zext_ln565_fu_206_p1);
    sensitive << ( ret_V_fu_201_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( L_offset_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( icmp_ln555_fu_140_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln557_fu_176_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter6 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "kernel0_L_drain_IO_L3_out_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, m_axi_L_AWVALID, "(port)m_axi_L_AWVALID");
    sc_trace(mVcdFile, m_axi_L_AWREADY, "(port)m_axi_L_AWREADY");
    sc_trace(mVcdFile, m_axi_L_AWADDR, "(port)m_axi_L_AWADDR");
    sc_trace(mVcdFile, m_axi_L_AWID, "(port)m_axi_L_AWID");
    sc_trace(mVcdFile, m_axi_L_AWLEN, "(port)m_axi_L_AWLEN");
    sc_trace(mVcdFile, m_axi_L_AWSIZE, "(port)m_axi_L_AWSIZE");
    sc_trace(mVcdFile, m_axi_L_AWBURST, "(port)m_axi_L_AWBURST");
    sc_trace(mVcdFile, m_axi_L_AWLOCK, "(port)m_axi_L_AWLOCK");
    sc_trace(mVcdFile, m_axi_L_AWCACHE, "(port)m_axi_L_AWCACHE");
    sc_trace(mVcdFile, m_axi_L_AWPROT, "(port)m_axi_L_AWPROT");
    sc_trace(mVcdFile, m_axi_L_AWQOS, "(port)m_axi_L_AWQOS");
    sc_trace(mVcdFile, m_axi_L_AWREGION, "(port)m_axi_L_AWREGION");
    sc_trace(mVcdFile, m_axi_L_AWUSER, "(port)m_axi_L_AWUSER");
    sc_trace(mVcdFile, m_axi_L_WVALID, "(port)m_axi_L_WVALID");
    sc_trace(mVcdFile, m_axi_L_WREADY, "(port)m_axi_L_WREADY");
    sc_trace(mVcdFile, m_axi_L_WDATA, "(port)m_axi_L_WDATA");
    sc_trace(mVcdFile, m_axi_L_WSTRB, "(port)m_axi_L_WSTRB");
    sc_trace(mVcdFile, m_axi_L_WLAST, "(port)m_axi_L_WLAST");
    sc_trace(mVcdFile, m_axi_L_WID, "(port)m_axi_L_WID");
    sc_trace(mVcdFile, m_axi_L_WUSER, "(port)m_axi_L_WUSER");
    sc_trace(mVcdFile, m_axi_L_ARVALID, "(port)m_axi_L_ARVALID");
    sc_trace(mVcdFile, m_axi_L_ARREADY, "(port)m_axi_L_ARREADY");
    sc_trace(mVcdFile, m_axi_L_ARADDR, "(port)m_axi_L_ARADDR");
    sc_trace(mVcdFile, m_axi_L_ARID, "(port)m_axi_L_ARID");
    sc_trace(mVcdFile, m_axi_L_ARLEN, "(port)m_axi_L_ARLEN");
    sc_trace(mVcdFile, m_axi_L_ARSIZE, "(port)m_axi_L_ARSIZE");
    sc_trace(mVcdFile, m_axi_L_ARBURST, "(port)m_axi_L_ARBURST");
    sc_trace(mVcdFile, m_axi_L_ARLOCK, "(port)m_axi_L_ARLOCK");
    sc_trace(mVcdFile, m_axi_L_ARCACHE, "(port)m_axi_L_ARCACHE");
    sc_trace(mVcdFile, m_axi_L_ARPROT, "(port)m_axi_L_ARPROT");
    sc_trace(mVcdFile, m_axi_L_ARQOS, "(port)m_axi_L_ARQOS");
    sc_trace(mVcdFile, m_axi_L_ARREGION, "(port)m_axi_L_ARREGION");
    sc_trace(mVcdFile, m_axi_L_ARUSER, "(port)m_axi_L_ARUSER");
    sc_trace(mVcdFile, m_axi_L_RVALID, "(port)m_axi_L_RVALID");
    sc_trace(mVcdFile, m_axi_L_RREADY, "(port)m_axi_L_RREADY");
    sc_trace(mVcdFile, m_axi_L_RDATA, "(port)m_axi_L_RDATA");
    sc_trace(mVcdFile, m_axi_L_RLAST, "(port)m_axi_L_RLAST");
    sc_trace(mVcdFile, m_axi_L_RID, "(port)m_axi_L_RID");
    sc_trace(mVcdFile, m_axi_L_RUSER, "(port)m_axi_L_RUSER");
    sc_trace(mVcdFile, m_axi_L_RRESP, "(port)m_axi_L_RRESP");
    sc_trace(mVcdFile, m_axi_L_BVALID, "(port)m_axi_L_BVALID");
    sc_trace(mVcdFile, m_axi_L_BREADY, "(port)m_axi_L_BREADY");
    sc_trace(mVcdFile, m_axi_L_BRESP, "(port)m_axi_L_BRESP");
    sc_trace(mVcdFile, m_axi_L_BID, "(port)m_axi_L_BID");
    sc_trace(mVcdFile, m_axi_L_BUSER, "(port)m_axi_L_BUSER");
    sc_trace(mVcdFile, L_offset_dout, "(port)L_offset_dout");
    sc_trace(mVcdFile, L_offset_empty_n, "(port)L_offset_empty_n");
    sc_trace(mVcdFile, L_offset_read, "(port)L_offset_read");
    sc_trace(mVcdFile, fifo_L_drain_local_in_V_dout, "(port)fifo_L_drain_local_in_V_dout");
    sc_trace(mVcdFile, fifo_L_drain_local_in_V_empty_n, "(port)fifo_L_drain_local_in_V_empty_n");
    sc_trace(mVcdFile, fifo_L_drain_local_in_V_read, "(port)fifo_L_drain_local_in_V_read");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, L_blk_n_AW, "L_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln557_reg_254, "icmp_ln557_reg_254");
    sc_trace(mVcdFile, L_blk_n_W, "L_blk_n_W");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, icmp_ln557_reg_254_pp0_iter1_reg, "icmp_ln557_reg_254_pp0_iter1_reg");
    sc_trace(mVcdFile, L_blk_n_B, "L_blk_n_B");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, icmp_ln557_reg_254_pp0_iter6_reg, "icmp_ln557_reg_254_pp0_iter6_reg");
    sc_trace(mVcdFile, L_offset_blk_n, "L_offset_blk_n");
    sc_trace(mVcdFile, fifo_L_drain_local_in_V_blk_n, "fifo_L_drain_local_in_V_blk_n");
    sc_trace(mVcdFile, p_065_0_in_i_reg_117, "p_065_0_in_i_reg_117");
    sc_trace(mVcdFile, zext_ln548_cast_i_fu_136_p1, "zext_ln548_cast_i_fu_136_p1");
    sc_trace(mVcdFile, zext_ln548_cast_i_reg_225, "zext_ln548_cast_i_reg_225");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, icmp_ln555_fu_140_p2, "icmp_ln555_fu_140_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, c0_V_fu_146_p2, "c0_V_fu_146_p2");
    sc_trace(mVcdFile, c0_V_reg_234, "c0_V_reg_234");
    sc_trace(mVcdFile, zext_ln555_fu_152_p1, "zext_ln555_fu_152_p1");
    sc_trace(mVcdFile, shl_ln_i_fu_156_p3, "shl_ln_i_fu_156_p3");
    sc_trace(mVcdFile, shl_ln_i_reg_244, "shl_ln_i_reg_244");
    sc_trace(mVcdFile, zext_ln214_fu_172_p1, "zext_ln214_fu_172_p1");
    sc_trace(mVcdFile, zext_ln214_reg_249, "zext_ln214_reg_249");
    sc_trace(mVcdFile, icmp_ln557_fu_176_p2, "icmp_ln557_fu_176_p2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_io, "ap_block_state4_io");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter2, "ap_block_state5_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_io, "ap_block_state5_io");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter3, "ap_block_state6_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter4, "ap_block_state7_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter5, "ap_block_state8_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter6, "ap_block_state9_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter7, "ap_block_state10_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln557_reg_254_pp0_iter2_reg, "icmp_ln557_reg_254_pp0_iter2_reg");
    sc_trace(mVcdFile, icmp_ln557_reg_254_pp0_iter3_reg, "icmp_ln557_reg_254_pp0_iter3_reg");
    sc_trace(mVcdFile, icmp_ln557_reg_254_pp0_iter4_reg, "icmp_ln557_reg_254_pp0_iter4_reg");
    sc_trace(mVcdFile, icmp_ln557_reg_254_pp0_iter5_reg, "icmp_ln557_reg_254_pp0_iter5_reg");
    sc_trace(mVcdFile, c1_V_fu_182_p2, "c1_V_fu_182_p2");
    sc_trace(mVcdFile, c1_V_reg_258, "c1_V_reg_258");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, L_addr_reg_263, "L_addr_reg_263");
    sc_trace(mVcdFile, tmp_1751_reg_269, "tmp_1751_reg_269");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, p_094_0_i_reg_106, "p_094_0_i_reg_106");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_phi_mux_p_065_0_in_i_phi_fu_120_p4, "ap_phi_mux_p_065_0_in_i_phi_fu_120_p4");
    sc_trace(mVcdFile, zext_ln565_1_fu_215_p1, "zext_ln565_1_fu_215_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_fu_126_p4, "tmp_fu_126_p4");
    sc_trace(mVcdFile, shl_ln1352_1_i_fu_164_p3, "shl_ln1352_1_i_fu_164_p3");
    sc_trace(mVcdFile, zext_ln1353_fu_188_p1, "zext_ln1353_fu_188_p1");
    sc_trace(mVcdFile, add_ln1353_fu_192_p2, "add_ln1353_fu_192_p2");
    sc_trace(mVcdFile, zext_ln1353_1_fu_197_p1, "zext_ln1353_1_fu_197_p1");
    sc_trace(mVcdFile, ret_V_fu_201_p2, "ret_V_fu_201_p2");
    sc_trace(mVcdFile, zext_ln565_fu_206_p1, "zext_ln565_fu_206_p1");
    sc_trace(mVcdFile, add_ln565_fu_210_p2, "add_ln565_fu_210_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

kernel0_L_drain_IO_L3_out::~kernel0_L_drain_IO_L3_out() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void kernel0_L_drain_IO_L3_out::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(icmp_ln555_fu_140_p2.read(), ap_const_lv1_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln555_fu_140_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln555_fu_140_p2.read()))) {
            ap_enable_reg_pp0_iter7 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln555_fu_140_p2.read()))) {
        p_065_0_in_i_reg_117 = zext_ln555_fu_152_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln557_reg_254.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        p_065_0_in_i_reg_117 = c1_V_reg_258.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        p_094_0_i_reg_106 = c0_V_reg_234.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, L_offset_empty_n.read())))) {
        p_094_0_i_reg_106 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln557_fu_176_p2.read()))) {
        L_addr_reg_263 = zext_ln565_1_fu_215_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        c0_V_reg_234 = c0_V_fu_146_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln557_fu_176_p2.read()))) {
        c1_V_reg_258 = c1_V_fu_182_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln557_reg_254 = icmp_ln557_fu_176_p2.read();
        icmp_ln557_reg_254_pp0_iter1_reg = icmp_ln557_reg_254.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln557_reg_254_pp0_iter2_reg = icmp_ln557_reg_254_pp0_iter1_reg.read();
        icmp_ln557_reg_254_pp0_iter3_reg = icmp_ln557_reg_254_pp0_iter2_reg.read();
        icmp_ln557_reg_254_pp0_iter4_reg = icmp_ln557_reg_254_pp0_iter3_reg.read();
        icmp_ln557_reg_254_pp0_iter5_reg = icmp_ln557_reg_254_pp0_iter4_reg.read();
        icmp_ln557_reg_254_pp0_iter6_reg = icmp_ln557_reg_254_pp0_iter5_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln555_fu_140_p2.read()))) {
        shl_ln_i_reg_244 = shl_ln_i_fu_156_p3.read();
        zext_ln214_reg_249 = zext_ln214_fu_172_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln557_reg_254.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_1751_reg_269 = fifo_L_drain_local_in_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, L_offset_empty_n.read())))) {
        zext_ln548_cast_i_reg_225 = zext_ln548_cast_i_fu_136_p1.read();
    }
}

void kernel0_L_drain_IO_L3_out::thread_L_blk_n_AW() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln557_reg_254.read()))) {
        L_blk_n_AW = m_axi_L_AWREADY.read();
    } else {
        L_blk_n_AW = ap_const_logic_1;
    }
}

void kernel0_L_drain_IO_L3_out::thread_L_blk_n_B() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln557_reg_254_pp0_iter6_reg.read()))) {
        L_blk_n_B = m_axi_L_BVALID.read();
    } else {
        L_blk_n_B = ap_const_logic_1;
    }
}

void kernel0_L_drain_IO_L3_out::thread_L_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln557_reg_254_pp0_iter1_reg.read()))) {
        L_blk_n_W = m_axi_L_WREADY.read();
    } else {
        L_blk_n_W = ap_const_logic_1;
    }
}

void kernel0_L_drain_IO_L3_out::thread_L_offset_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        L_offset_blk_n = L_offset_empty_n.read();
    } else {
        L_offset_blk_n = ap_const_logic_1;
    }
}

void kernel0_L_drain_IO_L3_out::thread_L_offset_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, L_offset_empty_n.read())))) {
        L_offset_read = ap_const_logic_1;
    } else {
        L_offset_read = ap_const_logic_0;
    }
}

void kernel0_L_drain_IO_L3_out::thread_add_ln1353_fu_192_p2() {
    add_ln1353_fu_192_p2 = (!zext_ln1353_fu_188_p1.read().is_01() || !zext_ln214_reg_249.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln1353_fu_188_p1.read()) + sc_biguint<8>(zext_ln214_reg_249.read()));
}

void kernel0_L_drain_IO_L3_out::thread_add_ln565_fu_210_p2() {
    add_ln565_fu_210_p2 = (!zext_ln548_cast_i_reg_225.read().is_01() || !zext_ln565_fu_206_p1.read().is_01())? sc_lv<63>(): (sc_biguint<63>(zext_ln548_cast_i_reg_225.read()) + sc_biguint<63>(zext_ln565_fu_206_p1.read()));
}

void kernel0_L_drain_IO_L3_out::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void kernel0_L_drain_IO_L3_out::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void kernel0_L_drain_IO_L3_out::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[3];
}

void kernel0_L_drain_IO_L3_out::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void kernel0_L_drain_IO_L3_out::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel0_L_drain_IO_L3_out::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln557_reg_254_pp0_iter6_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_L_BVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln557_reg_254.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo_L_drain_local_in_V_empty_n.read())));
}

void kernel0_L_drain_IO_L3_out::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln557_reg_254.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, fifo_L_drain_local_in_V_empty_n.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln557_reg_254_pp0_iter6_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_L_BVALID.read())));
}

void kernel0_L_drain_IO_L3_out::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln557_reg_254.read()) && 
    esl_seteq<1,1,1>(ap_const_logic_0, fifo_L_drain_local_in_V_empty_n.read())) || 
   esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()))) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln557_reg_254_pp0_iter6_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_L_BVALID.read())));
}

void kernel0_L_drain_IO_L3_out::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, L_offset_empty_n.read()));
}

void kernel0_L_drain_IO_L3_out::thread_ap_block_state10_pp0_stage0_iter7() {
    ap_block_state10_pp0_stage0_iter7 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln557_reg_254_pp0_iter6_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_L_BVALID.read()));
}

void kernel0_L_drain_IO_L3_out::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel0_L_drain_IO_L3_out::thread_ap_block_state4_io() {
    ap_block_state4_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln557_reg_254.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_L_AWREADY.read()));
}

void kernel0_L_drain_IO_L3_out::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln557_reg_254.read()) && esl_seteq<1,1,1>(ap_const_logic_0, fifo_L_drain_local_in_V_empty_n.read()));
}

void kernel0_L_drain_IO_L3_out::thread_ap_block_state5_io() {
    ap_block_state5_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln557_reg_254_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_L_WREADY.read()));
}

void kernel0_L_drain_IO_L3_out::thread_ap_block_state5_pp0_stage0_iter2() {
    ap_block_state5_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel0_L_drain_IO_L3_out::thread_ap_block_state6_pp0_stage0_iter3() {
    ap_block_state6_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel0_L_drain_IO_L3_out::thread_ap_block_state7_pp0_stage0_iter4() {
    ap_block_state7_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel0_L_drain_IO_L3_out::thread_ap_block_state8_pp0_stage0_iter5() {
    ap_block_state8_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel0_L_drain_IO_L3_out::thread_ap_block_state9_pp0_stage0_iter6() {
    ap_block_state9_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel0_L_drain_IO_L3_out::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(icmp_ln557_fu_176_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void kernel0_L_drain_IO_L3_out::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln555_fu_140_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void kernel0_L_drain_IO_L3_out::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void kernel0_L_drain_IO_L3_out::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void kernel0_L_drain_IO_L3_out::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void kernel0_L_drain_IO_L3_out::thread_ap_phi_mux_p_065_0_in_i_phi_fu_120_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln557_reg_254.read()))) {
        ap_phi_mux_p_065_0_in_i_phi_fu_120_p4 = c1_V_reg_258.read();
    } else {
        ap_phi_mux_p_065_0_in_i_phi_fu_120_p4 = p_065_0_in_i_reg_117.read();
    }
}

void kernel0_L_drain_IO_L3_out::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln555_fu_140_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void kernel0_L_drain_IO_L3_out::thread_c0_V_fu_146_p2() {
    c0_V_fu_146_p2 = (!p_094_0_i_reg_106.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(p_094_0_i_reg_106.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void kernel0_L_drain_IO_L3_out::thread_c1_V_fu_182_p2() {
    c1_V_fu_182_p2 = (!ap_phi_mux_p_065_0_in_i_phi_fu_120_p4.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(ap_phi_mux_p_065_0_in_i_phi_fu_120_p4.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void kernel0_L_drain_IO_L3_out::thread_fifo_L_drain_local_in_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln557_reg_254.read()))) {
        fifo_L_drain_local_in_V_blk_n = fifo_L_drain_local_in_V_empty_n.read();
    } else {
        fifo_L_drain_local_in_V_blk_n = ap_const_logic_1;
    }
}

void kernel0_L_drain_IO_L3_out::thread_fifo_L_drain_local_in_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln557_reg_254.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        fifo_L_drain_local_in_V_read = ap_const_logic_1;
    } else {
        fifo_L_drain_local_in_V_read = ap_const_logic_0;
    }
}

void kernel0_L_drain_IO_L3_out::thread_icmp_ln555_fu_140_p2() {
    icmp_ln555_fu_140_p2 = (!p_094_0_i_reg_106.read().is_01() || !ap_const_lv5_13.is_01())? sc_lv<1>(): sc_lv<1>(p_094_0_i_reg_106.read() == ap_const_lv5_13);
}

void kernel0_L_drain_IO_L3_out::thread_icmp_ln557_fu_176_p2() {
    icmp_ln557_fu_176_p2 = (!ap_phi_mux_p_065_0_in_i_phi_fu_120_p4.read().is_01() || !ap_const_lv6_13.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_p_065_0_in_i_phi_fu_120_p4.read() == ap_const_lv6_13);
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_ARADDR() {
    m_axi_L_ARADDR = ap_const_lv64_0;
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_ARBURST() {
    m_axi_L_ARBURST = ap_const_lv2_0;
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_ARCACHE() {
    m_axi_L_ARCACHE = ap_const_lv4_0;
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_ARID() {
    m_axi_L_ARID = ap_const_lv1_0;
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_ARLEN() {
    m_axi_L_ARLEN = ap_const_lv32_0;
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_ARLOCK() {
    m_axi_L_ARLOCK = ap_const_lv2_0;
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_ARPROT() {
    m_axi_L_ARPROT = ap_const_lv3_0;
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_ARQOS() {
    m_axi_L_ARQOS = ap_const_lv4_0;
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_ARREGION() {
    m_axi_L_ARREGION = ap_const_lv4_0;
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_ARSIZE() {
    m_axi_L_ARSIZE = ap_const_lv3_0;
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_ARUSER() {
    m_axi_L_ARUSER = ap_const_lv1_0;
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_ARVALID() {
    m_axi_L_ARVALID = ap_const_logic_0;
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_AWADDR() {
    m_axi_L_AWADDR = L_addr_reg_263.read();
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_AWBURST() {
    m_axi_L_AWBURST = ap_const_lv2_0;
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_AWCACHE() {
    m_axi_L_AWCACHE = ap_const_lv4_0;
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_AWID() {
    m_axi_L_AWID = ap_const_lv1_0;
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_AWLEN() {
    m_axi_L_AWLEN = ap_const_lv32_1;
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_AWLOCK() {
    m_axi_L_AWLOCK = ap_const_lv2_0;
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_AWPROT() {
    m_axi_L_AWPROT = ap_const_lv3_0;
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_AWQOS() {
    m_axi_L_AWQOS = ap_const_lv4_0;
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_AWREGION() {
    m_axi_L_AWREGION = ap_const_lv4_0;
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_AWSIZE() {
    m_axi_L_AWSIZE = ap_const_lv3_0;
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_AWUSER() {
    m_axi_L_AWUSER = ap_const_lv1_0;
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln557_reg_254.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        m_axi_L_AWVALID = ap_const_logic_1;
    } else {
        m_axi_L_AWVALID = ap_const_logic_0;
    }
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln557_reg_254_pp0_iter6_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        m_axi_L_BREADY = ap_const_logic_1;
    } else {
        m_axi_L_BREADY = ap_const_logic_0;
    }
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_RREADY() {
    m_axi_L_RREADY = ap_const_logic_0;
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_WDATA() {
    m_axi_L_WDATA = tmp_1751_reg_269.read();
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_WID() {
    m_axi_L_WID = ap_const_lv1_0;
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_WLAST() {
    m_axi_L_WLAST = ap_const_logic_0;
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_WSTRB() {
    m_axi_L_WSTRB = ap_const_lv4_F;
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_WUSER() {
    m_axi_L_WUSER = ap_const_lv1_0;
}

void kernel0_L_drain_IO_L3_out::thread_m_axi_L_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln557_reg_254_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        m_axi_L_WVALID = ap_const_logic_1;
    } else {
        m_axi_L_WVALID = ap_const_logic_0;
    }
}

void kernel0_L_drain_IO_L3_out::thread_ret_V_fu_201_p2() {
    ret_V_fu_201_p2 = (!shl_ln_i_reg_244.read().is_01() || !zext_ln1353_1_fu_197_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(shl_ln_i_reg_244.read()) + sc_biguint<9>(zext_ln1353_1_fu_197_p1.read()));
}

void kernel0_L_drain_IO_L3_out::thread_shl_ln1352_1_i_fu_164_p3() {
    shl_ln1352_1_i_fu_164_p3 = esl_concat<5,2>(p_094_0_i_reg_106.read(), ap_const_lv2_0);
}

void kernel0_L_drain_IO_L3_out::thread_shl_ln_i_fu_156_p3() {
    shl_ln_i_fu_156_p3 = esl_concat<5,4>(p_094_0_i_reg_106.read(), ap_const_lv4_0);
}

void kernel0_L_drain_IO_L3_out::thread_tmp_fu_126_p4() {
    tmp_fu_126_p4 = L_offset_dout.read().range(63, 2);
}

void kernel0_L_drain_IO_L3_out::thread_zext_ln1353_1_fu_197_p1() {
    zext_ln1353_1_fu_197_p1 = esl_zext<9,8>(add_ln1353_fu_192_p2.read());
}

void kernel0_L_drain_IO_L3_out::thread_zext_ln1353_fu_188_p1() {
    zext_ln1353_fu_188_p1 = esl_zext<8,6>(c1_V_fu_182_p2.read());
}

void kernel0_L_drain_IO_L3_out::thread_zext_ln214_fu_172_p1() {
    zext_ln214_fu_172_p1 = esl_zext<8,7>(shl_ln1352_1_i_fu_164_p3.read());
}

void kernel0_L_drain_IO_L3_out::thread_zext_ln548_cast_i_fu_136_p1() {
    zext_ln548_cast_i_fu_136_p1 = esl_zext<63,62>(tmp_fu_126_p4.read());
}

void kernel0_L_drain_IO_L3_out::thread_zext_ln555_fu_152_p1() {
    zext_ln555_fu_152_p1 = esl_zext<6,5>(p_094_0_i_reg_106.read());
}

void kernel0_L_drain_IO_L3_out::thread_zext_ln565_1_fu_215_p1() {
    zext_ln565_1_fu_215_p1 = esl_zext<64,63>(add_ln565_fu_210_p2.read());
}

void kernel0_L_drain_IO_L3_out::thread_zext_ln565_fu_206_p1() {
    zext_ln565_fu_206_p1 = esl_zext<63,9>(ret_V_fu_201_p2.read());
}

void kernel0_L_drain_IO_L3_out::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, L_offset_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln555_fu_140_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter6.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln557_fu_176_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter6.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln557_fu_176_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

