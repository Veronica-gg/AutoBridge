// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _kernel0_U_drain_IO_L1_out_boundary_7_7_s_HH_
#define _kernel0_U_drain_IO_L1_out_boundary_7_7_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct kernel0_U_drain_IO_L1_out_boundary_7_7_s : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<32> > fifo_U_drain_out_V_din;
    sc_in< sc_logic > fifo_U_drain_out_V_full_n;
    sc_out< sc_logic > fifo_U_drain_out_V_write;
    sc_in< sc_lv<32> > fifo_U_drain_local_in_V_dout;
    sc_in< sc_logic > fifo_U_drain_local_in_V_empty_n;
    sc_out< sc_logic > fifo_U_drain_local_in_V_read;


    // Module declarations
    kernel0_U_drain_IO_L1_out_boundary_7_7_s(sc_module_name name);
    SC_HAS_PROCESS(kernel0_U_drain_IO_L1_out_boundary_7_7_s);

    ~kernel0_U_drain_IO_L1_out_boundary_7_7_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > fifo_U_drain_out_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<1> > icmp_ln637_reg_491;
    sc_signal< sc_logic > fifo_U_drain_local_in_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<5> > p_02_0_i_reg_155;
    sc_signal< sc_lv<4> > c3_0_i_reg_167;
    sc_signal< sc_lv<32> > local_U_0_0_064_load_reg_417;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<32> > tmp_69_load_reg_422;
    sc_signal< sc_lv<32> > tmp_70_load_reg_427;
    sc_signal< sc_lv<32> > tmp_71_load_reg_432;
    sc_signal< sc_lv<32> > tmp_72_load_reg_437;
    sc_signal< sc_lv<32> > tmp_73_load_reg_442;
    sc_signal< sc_lv<32> > tmp_74_load_reg_447;
    sc_signal< sc_lv<32> > tmp_75_load_reg_452;
    sc_signal< sc_lv<32> > tmp_76_load_reg_457;
    sc_signal< sc_lv<32> > tmp_77_load_reg_462;
    sc_signal< sc_lv<32> > tmp_78_load_reg_467;
    sc_signal< sc_lv<32> > tmp_79_load_reg_472;
    sc_signal< sc_lv<32> > tmp_80_load_reg_477;
    sc_signal< sc_lv<1> > icmp_ln587_fu_250_p2;
    sc_signal< sc_lv<1> > icmp_ln587_reg_482;
    sc_signal< sc_lv<5> > c2_V_fu_256_p2;
    sc_signal< sc_lv<5> > c2_V_reg_486;
    sc_signal< sc_lv<1> > icmp_ln637_fu_327_p2;
    sc_signal< bool > ap_block_state5_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state6_pp1_stage0_iter1;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<4> > c3_fu_333_p2;
    sc_signal< sc_lv<4> > c3_reg_495;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state5;
    sc_signal< sc_lv<5> > ap_phi_mux_p_02_0_i_phi_fu_159_p4;
    sc_signal< sc_lv<4> > ap_phi_mux_c3_0_i_phi_fu_171_p4;
    sc_signal< sc_lv<32> > ap_phi_reg_pp1_iter0_fifo_data_reg_179;
    sc_signal< sc_lv<32> > ap_phi_reg_pp1_iter1_fifo_data_reg_179;
    sc_signal< sc_lv<32> > tmp_fu_90;
    sc_signal< sc_lv<32> > ap_sig_allocacmp_local_U_0_0_064_load;
    sc_signal< sc_lv<32> > tmp_69_fu_94;
    sc_signal< sc_lv<32> > ap_sig_allocacmp_tmp_69_load;
    sc_signal< sc_lv<32> > tmp_70_fu_98;
    sc_signal< sc_lv<32> > ap_sig_allocacmp_tmp_70_load;
    sc_signal< sc_lv<32> > tmp_71_fu_102;
    sc_signal< sc_lv<32> > ap_sig_allocacmp_tmp_71_load;
    sc_signal< sc_lv<32> > tmp_72_fu_106;
    sc_signal< sc_lv<32> > ap_sig_allocacmp_tmp_72_load;
    sc_signal< sc_lv<32> > tmp_73_fu_110;
    sc_signal< sc_lv<32> > ap_sig_allocacmp_tmp_73_load;
    sc_signal< sc_lv<32> > tmp_74_fu_114;
    sc_signal< sc_lv<32> > ap_sig_allocacmp_tmp_74_load;
    sc_signal< sc_lv<32> > tmp_75_fu_118;
    sc_signal< sc_lv<32> > ap_sig_allocacmp_tmp_75_load;
    sc_signal< sc_lv<32> > tmp_76_fu_122;
    sc_signal< sc_lv<32> > ap_sig_allocacmp_tmp_76_load;
    sc_signal< sc_lv<32> > tmp_77_fu_126;
    sc_signal< sc_lv<32> > ap_sig_allocacmp_tmp_77_load;
    sc_signal< sc_lv<32> > tmp_78_fu_130;
    sc_signal< sc_lv<32> > ap_sig_allocacmp_tmp_78_load;
    sc_signal< sc_lv<32> > tmp_79_fu_134;
    sc_signal< sc_lv<32> > ap_sig_allocacmp_tmp_79_load;
    sc_signal< sc_lv<32> > tmp_80_fu_138;
    sc_signal< sc_lv<32> > ap_sig_allocacmp_tmp_80_load;
    sc_signal< bool > ap_block_pp1_stage0_01001;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< bool > ap_condition_235;
    sc_signal< bool > ap_condition_131;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_pp0_stage0;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_pp1_stage0;
    static const sc_lv<5> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<5> ap_const_lv5_7;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_B;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<5> ap_const_lv5_8;
    static const sc_lv<5> ap_const_lv5_9;
    static const sc_lv<5> ap_const_lv5_A;
    static const sc_lv<5> ap_const_lv5_B;
    static const sc_lv<5> ap_const_lv5_C;
    static const sc_lv<5> ap_const_lv5_D;
    static const sc_lv<5> ap_const_lv5_E;
    static const sc_lv<5> ap_const_lv5_F;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_11;
    static const sc_lv<5> ap_const_lv5_12;
    static const sc_lv<5> ap_const_lv5_14;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<32> ap_const_lv32_4;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_01001();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state5_pp1_stage0_iter0();
    void thread_ap_block_state6_pp1_stage0_iter1();
    void thread_ap_condition_131();
    void thread_ap_condition_235();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_condition_pp1_exit_iter0_state5();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_phi_mux_c3_0_i_phi_fu_171_p4();
    void thread_ap_phi_mux_p_02_0_i_phi_fu_159_p4();
    void thread_ap_phi_reg_pp1_iter0_fifo_data_reg_179();
    void thread_ap_ready();
    void thread_ap_sig_allocacmp_local_U_0_0_064_load();
    void thread_ap_sig_allocacmp_tmp_69_load();
    void thread_ap_sig_allocacmp_tmp_70_load();
    void thread_ap_sig_allocacmp_tmp_71_load();
    void thread_ap_sig_allocacmp_tmp_72_load();
    void thread_ap_sig_allocacmp_tmp_73_load();
    void thread_ap_sig_allocacmp_tmp_74_load();
    void thread_ap_sig_allocacmp_tmp_75_load();
    void thread_ap_sig_allocacmp_tmp_76_load();
    void thread_ap_sig_allocacmp_tmp_77_load();
    void thread_ap_sig_allocacmp_tmp_78_load();
    void thread_ap_sig_allocacmp_tmp_79_load();
    void thread_ap_sig_allocacmp_tmp_80_load();
    void thread_c2_V_fu_256_p2();
    void thread_c3_fu_333_p2();
    void thread_fifo_U_drain_local_in_V_blk_n();
    void thread_fifo_U_drain_local_in_V_read();
    void thread_fifo_U_drain_out_V_blk_n();
    void thread_fifo_U_drain_out_V_din();
    void thread_fifo_U_drain_out_V_write();
    void thread_icmp_ln587_fu_250_p2();
    void thread_icmp_ln637_fu_327_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
