// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _kernel0_A_IO_L1_in_boundary_0_19_s_HH_
#define _kernel0_A_IO_L1_in_boundary_0_19_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "kernel0_kernel0_mux_205_32_1_1.h"

namespace ap_rtl {

struct kernel0_A_IO_L1_in_boundary_0_19_s : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > fifo_A_in_V_dout;
    sc_in< sc_logic > fifo_A_in_V_empty_n;
    sc_out< sc_logic > fifo_A_in_V_read;
    sc_out< sc_lv<32> > fifo_A_local_out_V_din;
    sc_in< sc_logic > fifo_A_local_out_V_full_n;
    sc_out< sc_logic > fifo_A_local_out_V_write;


    // Module declarations
    kernel0_A_IO_L1_in_boundary_0_19_s(sc_module_name name);
    SC_HAS_PROCESS(kernel0_A_IO_L1_in_boundary_0_19_s);

    ~kernel0_A_IO_L1_in_boundary_0_19_s();

    sc_trace_file* mVcdFile;

    kernel0_kernel0_mux_205_32_1_1<1,1,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,5,32>* kernel0_mux_205_32_1_1_U87;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > fifo_A_in_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > fifo_A_local_out_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<1> > icmp_ln899_reg_555;
    sc_signal< sc_lv<5> > p_031_0_i_0_reg_171;
    sc_signal< sc_lv<5> > p_02_0_i2_reg_183;
    sc_signal< sc_lv<1> > icmp_ln899_2_fu_195_p2;
    sc_signal< sc_lv<1> > icmp_ln899_2_reg_546;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<5> > add_ln700_fu_201_p2;
    sc_signal< sc_lv<5> > add_ln700_reg_550;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > icmp_ln899_fu_307_p2;
    sc_signal< bool > ap_block_state5_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state6_pp1_stage0_iter1;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<5> > c2_V_fu_313_p2;
    sc_signal< sc_lv<5> > c2_V_reg_559;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state5;
    sc_signal< sc_lv<5> > ap_phi_mux_p_031_0_i_0_phi_fu_175_p4;
    sc_signal< sc_lv<5> > ap_phi_mux_p_02_0_i2_phi_fu_187_p4;
    sc_signal< sc_lv<32> > tmp_fu_78;
    sc_signal< sc_lv<32> > tmp_2167_fu_82;
    sc_signal< sc_lv<32> > tmp_2168_fu_86;
    sc_signal< sc_lv<32> > tmp_2169_fu_90;
    sc_signal< sc_lv<32> > tmp_2170_fu_94;
    sc_signal< sc_lv<32> > tmp_2171_fu_98;
    sc_signal< sc_lv<32> > tmp_2172_fu_102;
    sc_signal< sc_lv<32> > tmp_2173_fu_106;
    sc_signal< sc_lv<32> > tmp_2174_fu_110;
    sc_signal< sc_lv<32> > tmp_2175_fu_114;
    sc_signal< sc_lv<32> > tmp_2176_fu_118;
    sc_signal< sc_lv<32> > tmp_2177_fu_122;
    sc_signal< sc_lv<32> > tmp_2178_fu_126;
    sc_signal< sc_lv<32> > tmp_2179_fu_130;
    sc_signal< sc_lv<32> > tmp_2180_fu_134;
    sc_signal< sc_lv<32> > tmp_2181_fu_138;
    sc_signal< sc_lv<32> > tmp_2182_fu_142;
    sc_signal< sc_lv<32> > tmp_2183_fu_146;
    sc_signal< sc_lv<32> > tmp_2184_fu_150;
    sc_signal< sc_lv<32> > tmp_2185_fu_154;
    sc_signal< sc_lv<32> > fifo_data_fu_379_p22;
    sc_signal< bool > ap_block_pp1_stage0_01001;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_pp0_stage0;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_pp1_stage0;
    static const sc_lv<5> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<5> ap_const_lv5_3;
    static const sc_lv<5> ap_const_lv5_4;
    static const sc_lv<5> ap_const_lv5_5;
    static const sc_lv<5> ap_const_lv5_6;
    static const sc_lv<5> ap_const_lv5_7;
    static const sc_lv<5> ap_const_lv5_8;
    static const sc_lv<5> ap_const_lv5_9;
    static const sc_lv<5> ap_const_lv5_A;
    static const sc_lv<5> ap_const_lv5_B;
    static const sc_lv<5> ap_const_lv5_C;
    static const sc_lv<5> ap_const_lv5_D;
    static const sc_lv<5> ap_const_lv5_E;
    static const sc_lv<5> ap_const_lv5_F;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_11;
    static const sc_lv<5> ap_const_lv5_12;
    static const sc_lv<5> ap_const_lv5_1F;
    static const sc_lv<5> ap_const_lv5_1E;
    static const sc_lv<5> ap_const_lv5_1D;
    static const sc_lv<5> ap_const_lv5_1C;
    static const sc_lv<5> ap_const_lv5_1B;
    static const sc_lv<5> ap_const_lv5_1A;
    static const sc_lv<5> ap_const_lv5_19;
    static const sc_lv<5> ap_const_lv5_18;
    static const sc_lv<5> ap_const_lv5_17;
    static const sc_lv<5> ap_const_lv5_16;
    static const sc_lv<5> ap_const_lv5_15;
    static const sc_lv<5> ap_const_lv5_14;
    static const sc_lv<5> ap_const_lv5_13;
    static const sc_lv<32> ap_const_lv32_4;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln700_fu_201_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_01001();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state5_pp1_stage0_iter0();
    void thread_ap_block_state6_pp1_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_condition_pp1_exit_iter0_state5();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_phi_mux_p_02_0_i2_phi_fu_187_p4();
    void thread_ap_phi_mux_p_031_0_i_0_phi_fu_175_p4();
    void thread_ap_ready();
    void thread_c2_V_fu_313_p2();
    void thread_fifo_A_in_V_blk_n();
    void thread_fifo_A_in_V_read();
    void thread_fifo_A_local_out_V_blk_n();
    void thread_fifo_A_local_out_V_din();
    void thread_fifo_A_local_out_V_write();
    void thread_icmp_ln899_2_fu_195_p2();
    void thread_icmp_ln899_fu_307_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
