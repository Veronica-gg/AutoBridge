// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "kernel0_PE_wrapper_19_19_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic kernel0_PE_wrapper_19_19_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic kernel0_PE_wrapper_19_19_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> kernel0_PE_wrapper_19_19_s::ap_ST_fsm_state1 = "1";
const sc_lv<32> kernel0_PE_wrapper_19_19_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool kernel0_PE_wrapper_19_19_s::ap_const_boolean_1 = true;

kernel0_PE_wrapper_19_19_s::kernel0_PE_wrapper_19_19_s(sc_module_name name) : sc_module(name), mVcdFile(0) {
    call_ln356_PE_19_19_s_fu_18 = new kernel0_PE_19_19_s("call_ln356_PE_19_19_s_fu_18");
    call_ln356_PE_19_19_s_fu_18->ap_clk(ap_clk);
    call_ln356_PE_19_19_s_fu_18->ap_rst(ap_rst);
    call_ln356_PE_19_19_s_fu_18->ap_start(call_ln356_PE_19_19_s_fu_18_ap_start);
    call_ln356_PE_19_19_s_fu_18->ap_done(call_ln356_PE_19_19_s_fu_18_ap_done);
    call_ln356_PE_19_19_s_fu_18->ap_idle(call_ln356_PE_19_19_s_fu_18_ap_idle);
    call_ln356_PE_19_19_s_fu_18->ap_ready(call_ln356_PE_19_19_s_fu_18_ap_ready);
    call_ln356_PE_19_19_s_fu_18->fifo_V_in_V_dout(fifo_V_in_V_dout);
    call_ln356_PE_19_19_s_fu_18->fifo_V_in_V_empty_n(fifo_V_in_V_empty_n);
    call_ln356_PE_19_19_s_fu_18->fifo_V_in_V_read(call_ln356_PE_19_19_s_fu_18_fifo_V_in_V_read);
    call_ln356_PE_19_19_s_fu_18->fifo_U_drain_out_V_din(call_ln356_PE_19_19_s_fu_18_fifo_U_drain_out_V_din);
    call_ln356_PE_19_19_s_fu_18->fifo_U_drain_out_V_full_n(fifo_U_drain_out_V_full_n);
    call_ln356_PE_19_19_s_fu_18->fifo_U_drain_out_V_write(call_ln356_PE_19_19_s_fu_18_fifo_U_drain_out_V_write);
    call_ln356_PE_19_19_s_fu_18->fifo_V_in_V_blk_n(call_ln356_PE_19_19_s_fu_18_fifo_V_in_V_blk_n);
    call_ln356_PE_19_19_s_fu_18->fifo_U_drain_out_V_blk_n(call_ln356_PE_19_19_s_fu_18_fifo_U_drain_out_V_blk_n);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( call_ln356_PE_19_19_s_fu_18_fifo_V_in_V_blk_n );
    sensitive << ( call_ln356_PE_19_19_s_fu_18_fifo_U_drain_out_V_blk_n );

    SC_METHOD(thread_ap_block_state1_ignore_call2);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( call_ln356_PE_19_19_s_fu_18_fifo_V_in_V_blk_n );
    sensitive << ( call_ln356_PE_19_19_s_fu_18_fifo_U_drain_out_V_blk_n );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( call_ln356_PE_19_19_s_fu_18_fifo_V_in_V_blk_n );
    sensitive << ( call_ln356_PE_19_19_s_fu_18_fifo_U_drain_out_V_blk_n );

    SC_METHOD(thread_call_ln356_PE_19_19_s_fu_18_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_fifo_U_drain_out_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( call_ln356_PE_19_19_s_fu_18_fifo_U_drain_out_V_blk_n );

    SC_METHOD(thread_fifo_U_drain_out_V_din);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( call_ln356_PE_19_19_s_fu_18_fifo_U_drain_out_V_din );

    SC_METHOD(thread_fifo_U_drain_out_V_write);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( call_ln356_PE_19_19_s_fu_18_fifo_U_drain_out_V_write );

    SC_METHOD(thread_fifo_V_in_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( call_ln356_PE_19_19_s_fu_18_fifo_V_in_V_blk_n );

    SC_METHOD(thread_fifo_V_in_V_read);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( call_ln356_PE_19_19_s_fu_18_fifo_V_in_V_read );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( call_ln356_PE_19_19_s_fu_18_fifo_V_in_V_blk_n );
    sensitive << ( call_ln356_PE_19_19_s_fu_18_fifo_U_drain_out_V_blk_n );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "1";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "kernel0_PE_wrapper_19_19_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, fifo_V_in_V_dout, "(port)fifo_V_in_V_dout");
    sc_trace(mVcdFile, fifo_V_in_V_empty_n, "(port)fifo_V_in_V_empty_n");
    sc_trace(mVcdFile, fifo_V_in_V_read, "(port)fifo_V_in_V_read");
    sc_trace(mVcdFile, fifo_U_drain_out_V_din, "(port)fifo_U_drain_out_V_din");
    sc_trace(mVcdFile, fifo_U_drain_out_V_full_n, "(port)fifo_U_drain_out_V_full_n");
    sc_trace(mVcdFile, fifo_U_drain_out_V_write, "(port)fifo_U_drain_out_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, call_ln356_PE_19_19_s_fu_18_fifo_V_in_V_blk_n, "call_ln356_PE_19_19_s_fu_18_fifo_V_in_V_blk_n");
    sc_trace(mVcdFile, fifo_V_in_V_blk_n, "fifo_V_in_V_blk_n");
    sc_trace(mVcdFile, call_ln356_PE_19_19_s_fu_18_fifo_U_drain_out_V_blk_n, "call_ln356_PE_19_19_s_fu_18_fifo_U_drain_out_V_blk_n");
    sc_trace(mVcdFile, fifo_U_drain_out_V_blk_n, "fifo_U_drain_out_V_blk_n");
    sc_trace(mVcdFile, call_ln356_PE_19_19_s_fu_18_ap_start, "call_ln356_PE_19_19_s_fu_18_ap_start");
    sc_trace(mVcdFile, call_ln356_PE_19_19_s_fu_18_ap_done, "call_ln356_PE_19_19_s_fu_18_ap_done");
    sc_trace(mVcdFile, call_ln356_PE_19_19_s_fu_18_ap_idle, "call_ln356_PE_19_19_s_fu_18_ap_idle");
    sc_trace(mVcdFile, call_ln356_PE_19_19_s_fu_18_ap_ready, "call_ln356_PE_19_19_s_fu_18_ap_ready");
    sc_trace(mVcdFile, call_ln356_PE_19_19_s_fu_18_fifo_V_in_V_read, "call_ln356_PE_19_19_s_fu_18_fifo_V_in_V_read");
    sc_trace(mVcdFile, call_ln356_PE_19_19_s_fu_18_fifo_U_drain_out_V_din, "call_ln356_PE_19_19_s_fu_18_fifo_U_drain_out_V_din");
    sc_trace(mVcdFile, call_ln356_PE_19_19_s_fu_18_fifo_U_drain_out_V_write, "call_ln356_PE_19_19_s_fu_18_fifo_U_drain_out_V_write");
    sc_trace(mVcdFile, ap_block_state1_ignore_call2, "ap_block_state1_ignore_call2");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

kernel0_PE_wrapper_19_19_s::~kernel0_PE_wrapper_19_19_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete call_ln356_PE_19_19_s_fu_18;
}

void kernel0_PE_wrapper_19_19_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, call_ln356_PE_19_19_s_fu_18_fifo_V_in_V_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, call_ln356_PE_19_19_s_fu_18_fifo_U_drain_out_V_blk_n.read())))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
}

void kernel0_PE_wrapper_19_19_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void kernel0_PE_wrapper_19_19_s::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, call_ln356_PE_19_19_s_fu_18_fifo_V_in_V_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, call_ln356_PE_19_19_s_fu_18_fifo_U_drain_out_V_blk_n.read()));
}

void kernel0_PE_wrapper_19_19_s::thread_ap_block_state1_ignore_call2() {
    ap_block_state1_ignore_call2 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void kernel0_PE_wrapper_19_19_s::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, call_ln356_PE_19_19_s_fu_18_fifo_V_in_V_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, call_ln356_PE_19_19_s_fu_18_fifo_U_drain_out_V_blk_n.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void kernel0_PE_wrapper_19_19_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void kernel0_PE_wrapper_19_19_s::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, call_ln356_PE_19_19_s_fu_18_fifo_V_in_V_blk_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, call_ln356_PE_19_19_s_fu_18_fifo_U_drain_out_V_blk_n.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void kernel0_PE_wrapper_19_19_s::thread_call_ln356_PE_19_19_s_fu_18_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        call_ln356_PE_19_19_s_fu_18_ap_start = ap_const_logic_1;
    } else {
        call_ln356_PE_19_19_s_fu_18_ap_start = ap_const_logic_0;
    }
}

void kernel0_PE_wrapper_19_19_s::thread_fifo_U_drain_out_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        fifo_U_drain_out_V_blk_n = call_ln356_PE_19_19_s_fu_18_fifo_U_drain_out_V_blk_n.read();
    } else {
        fifo_U_drain_out_V_blk_n = ap_const_logic_1;
    }
}

void kernel0_PE_wrapper_19_19_s::thread_fifo_U_drain_out_V_din() {
    fifo_U_drain_out_V_din = call_ln356_PE_19_19_s_fu_18_fifo_U_drain_out_V_din.read();
}

void kernel0_PE_wrapper_19_19_s::thread_fifo_U_drain_out_V_write() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        fifo_U_drain_out_V_write = call_ln356_PE_19_19_s_fu_18_fifo_U_drain_out_V_write.read();
    } else {
        fifo_U_drain_out_V_write = ap_const_logic_0;
    }
}

void kernel0_PE_wrapper_19_19_s::thread_fifo_V_in_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        fifo_V_in_V_blk_n = call_ln356_PE_19_19_s_fu_18_fifo_V_in_V_blk_n.read();
    } else {
        fifo_V_in_V_blk_n = ap_const_logic_1;
    }
}

void kernel0_PE_wrapper_19_19_s::thread_fifo_V_in_V_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        fifo_V_in_V_read = call_ln356_PE_19_19_s_fu_18_fifo_V_in_V_read.read();
    } else {
        fifo_V_in_V_read = ap_const_logic_0;
    }
}

void kernel0_PE_wrapper_19_19_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_state1;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

}

