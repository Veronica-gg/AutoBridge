// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "kernel0_A_IO_L3_in6.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic kernel0_A_IO_L3_in6::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic kernel0_A_IO_L3_in6::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> kernel0_A_IO_L3_in6::ap_ST_fsm_state1 = "1";
const sc_lv<3> kernel0_A_IO_L3_in6::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> kernel0_A_IO_L3_in6::ap_ST_fsm_state13 = "100";
const sc_lv<32> kernel0_A_IO_L3_in6::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool kernel0_A_IO_L3_in6::ap_const_boolean_1 = true;
const sc_lv<64> kernel0_A_IO_L3_in6::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<1> kernel0_A_IO_L3_in6::ap_const_lv1_0 = "0";
const sc_lv<3> kernel0_A_IO_L3_in6::ap_const_lv3_0 = "000";
const sc_lv<2> kernel0_A_IO_L3_in6::ap_const_lv2_0 = "00";
const sc_lv<4> kernel0_A_IO_L3_in6::ap_const_lv4_0 = "0000";
const bool kernel0_A_IO_L3_in6::ap_const_boolean_0 = false;
const sc_lv<32> kernel0_A_IO_L3_in6::ap_const_lv32_1 = "1";
const sc_lv<1> kernel0_A_IO_L3_in6::ap_const_lv1_1 = "1";
const sc_lv<8> kernel0_A_IO_L3_in6::ap_const_lv8_0 = "00000000";
const sc_lv<32> kernel0_A_IO_L3_in6::ap_const_lv32_2 = "10";
const sc_lv<32> kernel0_A_IO_L3_in6::ap_const_lv32_3F = "111111";
const sc_lv<8> kernel0_A_IO_L3_in6::ap_const_lv8_90 = "10010000";
const sc_lv<8> kernel0_A_IO_L3_in6::ap_const_lv8_1 = "1";
const sc_lv<4> kernel0_A_IO_L3_in6::ap_const_lv4_C = "1100";
const sc_lv<4> kernel0_A_IO_L3_in6::ap_const_lv4_1 = "1";

kernel0_A_IO_L3_in6::kernel0_A_IO_L3_in6(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_blk_n_AR);
    sensitive << ( m_axi_A_ARREADY );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln899_reg_295_pp0_iter1_reg );

    SC_METHOD(thread_A_blk_n_R);
    sensitive << ( m_axi_A_RVALID );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( icmp_ln899_reg_295_pp0_iter8_reg );

    SC_METHOD(thread_L_out_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( L_out_full_n );

    SC_METHOD(thread_L_out_din);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( L );
    sensitive << ( L_out_full_n );
    sensitive << ( U_out_full_n );

    SC_METHOD(thread_L_out_write);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( L_out_full_n );
    sensitive << ( U_out_full_n );

    SC_METHOD(thread_U_out_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( U_out_full_n );

    SC_METHOD(thread_U_out_din);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( U );
    sensitive << ( L_out_full_n );
    sensitive << ( U_out_full_n );

    SC_METHOD(thread_U_out_write);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( L_out_full_n );
    sensitive << ( U_out_full_n );

    SC_METHOD(thread_add_ln19_fu_275_p2);
    sensitive << ( zext_ln3_cast_i_i_reg_290 );
    sensitive << ( zext_ln19_fu_271_p1 );

    SC_METHOD(thread_add_ln700_fu_206_p2);
    sensitive << ( ap_phi_mux_p_02_0_i_i_phi_fu_148_p4 );

    SC_METHOD(thread_add_ln899_fu_186_p2);
    sensitive << ( indvar_flatten_i_i_reg_133 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( m_axi_A_RVALID );
    sensitive << ( fifo_A_local_out_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( icmp_ln899_reg_295_pp0_iter8_reg );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( icmp_ln899_reg_295_pp0_iter9_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( m_axi_A_RVALID );
    sensitive << ( fifo_A_local_out_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( icmp_ln899_reg_295_pp0_iter8_reg );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( icmp_ln899_reg_295_pp0_iter9_reg );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( m_axi_A_RVALID );
    sensitive << ( fifo_A_local_out_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( icmp_ln899_reg_295_pp0_iter8_reg );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( icmp_ln899_reg_295_pp0_iter9_reg );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( L_out_full_n );
    sensitive << ( U_out_full_n );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter9);
    sensitive << ( m_axi_A_RVALID );
    sensitive << ( icmp_ln899_reg_295_pp0_iter8_reg );

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter10);
    sensitive << ( fifo_A_local_out_V_full_n );
    sensitive << ( icmp_ln899_reg_295_pp0_iter9_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_io);
    sensitive << ( m_axi_A_ARREADY );
    sensitive << ( icmp_ln899_reg_295_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter7);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln899_fu_180_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_METHOD(thread_ap_phi_mux_p_02_0_i_i_phi_fu_148_p4);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln899_reg_295 );
    sensitive << ( p_02_0_i_i_reg_144 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln215_1_reg_310 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_c2_V_fu_220_p2);
    sensitive << ( select_ln215_fu_198_p3 );

    SC_METHOD(thread_fifo_A_local_out_V_blk_n);
    sensitive << ( fifo_A_local_out_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( icmp_ln899_reg_295_pp0_iter9_reg );

    SC_METHOD(thread_fifo_A_local_out_V_din);
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( icmp_ln899_reg_295_pp0_iter9_reg );
    sensitive << ( fifo_data_reg_327 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_fifo_A_local_out_V_write);
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( icmp_ln899_reg_295_pp0_iter9_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln899_1_fu_192_p2);
    sensitive << ( p_079_0_i_i_reg_155 );
    sensitive << ( icmp_ln899_fu_180_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln899_fu_180_p2);
    sensitive << ( indvar_flatten_i_i_reg_133 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_m_axi_A_ARADDR);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln899_reg_295_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( A_addr_reg_321 );

    SC_METHOD(thread_m_axi_A_ARBURST);

    SC_METHOD(thread_m_axi_A_ARCACHE);

    SC_METHOD(thread_m_axi_A_ARID);

    SC_METHOD(thread_m_axi_A_ARLEN);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln899_reg_295_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axi_A_ARLOCK);

    SC_METHOD(thread_m_axi_A_ARPROT);

    SC_METHOD(thread_m_axi_A_ARQOS);

    SC_METHOD(thread_m_axi_A_ARREGION);

    SC_METHOD(thread_m_axi_A_ARSIZE);

    SC_METHOD(thread_m_axi_A_ARUSER);

    SC_METHOD(thread_m_axi_A_ARVALID);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln899_reg_295_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axi_A_AWADDR);

    SC_METHOD(thread_m_axi_A_AWBURST);

    SC_METHOD(thread_m_axi_A_AWCACHE);

    SC_METHOD(thread_m_axi_A_AWID);

    SC_METHOD(thread_m_axi_A_AWLEN);

    SC_METHOD(thread_m_axi_A_AWLOCK);

    SC_METHOD(thread_m_axi_A_AWPROT);

    SC_METHOD(thread_m_axi_A_AWQOS);

    SC_METHOD(thread_m_axi_A_AWREGION);

    SC_METHOD(thread_m_axi_A_AWSIZE);

    SC_METHOD(thread_m_axi_A_AWUSER);

    SC_METHOD(thread_m_axi_A_AWVALID);

    SC_METHOD(thread_m_axi_A_BREADY);

    SC_METHOD(thread_m_axi_A_RREADY);
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( icmp_ln899_reg_295_pp0_iter8_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axi_A_WDATA);

    SC_METHOD(thread_m_axi_A_WID);

    SC_METHOD(thread_m_axi_A_WLAST);

    SC_METHOD(thread_m_axi_A_WSTRB);

    SC_METHOD(thread_m_axi_A_WUSER);

    SC_METHOD(thread_m_axi_A_WVALID);

    SC_METHOD(thread_ret_V_2_fu_265_p2);
    sensitive << ( rhs_V_fu_261_p1 );
    sensitive << ( zext_ln215_fu_226_p1 );

    SC_METHOD(thread_ret_V_fu_251_p2);
    sensitive << ( zext_ln1352_fu_236_p1 );
    sensitive << ( zext_ln1352_2_fu_247_p1 );

    SC_METHOD(thread_rhs_V_fu_261_p1);
    sensitive << ( sext_ln1352_fu_257_p1 );

    SC_METHOD(thread_select_ln215_1_fu_212_p3);
    sensitive << ( ap_phi_mux_p_02_0_i_i_phi_fu_148_p4 );
    sensitive << ( icmp_ln899_1_fu_192_p2 );
    sensitive << ( add_ln700_fu_206_p2 );

    SC_METHOD(thread_select_ln215_fu_198_p3);
    sensitive << ( p_079_0_i_i_reg_155 );
    sensitive << ( icmp_ln899_1_fu_192_p2 );

    SC_METHOD(thread_sext_ln1352_fu_257_p1);
    sensitive << ( ret_V_fu_251_p2 );

    SC_METHOD(thread_shl_ln1352_2_i_i_fu_240_p3);
    sensitive << ( select_ln215_reg_304 );

    SC_METHOD(thread_shl_ln_i_i_fu_229_p3);
    sensitive << ( select_ln215_reg_304 );

    SC_METHOD(thread_tmp_fu_166_p4);
    sensitive << ( A_offset );

    SC_METHOD(thread_zext_ln1352_2_fu_247_p1);
    sensitive << ( shl_ln1352_2_i_i_fu_240_p3 );

    SC_METHOD(thread_zext_ln1352_fu_236_p1);
    sensitive << ( shl_ln_i_i_fu_229_p3 );

    SC_METHOD(thread_zext_ln19_1_fu_280_p1);
    sensitive << ( add_ln19_fu_275_p2 );

    SC_METHOD(thread_zext_ln19_fu_271_p1);
    sensitive << ( ret_V_2_fu_265_p2 );

    SC_METHOD(thread_zext_ln215_fu_226_p1);
    sensitive << ( select_ln215_1_reg_310 );

    SC_METHOD(thread_zext_ln3_cast_i_i_fu_176_p1);
    sensitive << ( tmp_fu_166_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( L_out_full_n );
    sensitive << ( U_out_full_n );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( icmp_ln899_fu_180_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "kernel0_A_IO_L3_in6_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, m_axi_A_AWVALID, "(port)m_axi_A_AWVALID");
    sc_trace(mVcdFile, m_axi_A_AWREADY, "(port)m_axi_A_AWREADY");
    sc_trace(mVcdFile, m_axi_A_AWADDR, "(port)m_axi_A_AWADDR");
    sc_trace(mVcdFile, m_axi_A_AWID, "(port)m_axi_A_AWID");
    sc_trace(mVcdFile, m_axi_A_AWLEN, "(port)m_axi_A_AWLEN");
    sc_trace(mVcdFile, m_axi_A_AWSIZE, "(port)m_axi_A_AWSIZE");
    sc_trace(mVcdFile, m_axi_A_AWBURST, "(port)m_axi_A_AWBURST");
    sc_trace(mVcdFile, m_axi_A_AWLOCK, "(port)m_axi_A_AWLOCK");
    sc_trace(mVcdFile, m_axi_A_AWCACHE, "(port)m_axi_A_AWCACHE");
    sc_trace(mVcdFile, m_axi_A_AWPROT, "(port)m_axi_A_AWPROT");
    sc_trace(mVcdFile, m_axi_A_AWQOS, "(port)m_axi_A_AWQOS");
    sc_trace(mVcdFile, m_axi_A_AWREGION, "(port)m_axi_A_AWREGION");
    sc_trace(mVcdFile, m_axi_A_AWUSER, "(port)m_axi_A_AWUSER");
    sc_trace(mVcdFile, m_axi_A_WVALID, "(port)m_axi_A_WVALID");
    sc_trace(mVcdFile, m_axi_A_WREADY, "(port)m_axi_A_WREADY");
    sc_trace(mVcdFile, m_axi_A_WDATA, "(port)m_axi_A_WDATA");
    sc_trace(mVcdFile, m_axi_A_WSTRB, "(port)m_axi_A_WSTRB");
    sc_trace(mVcdFile, m_axi_A_WLAST, "(port)m_axi_A_WLAST");
    sc_trace(mVcdFile, m_axi_A_WID, "(port)m_axi_A_WID");
    sc_trace(mVcdFile, m_axi_A_WUSER, "(port)m_axi_A_WUSER");
    sc_trace(mVcdFile, m_axi_A_ARVALID, "(port)m_axi_A_ARVALID");
    sc_trace(mVcdFile, m_axi_A_ARREADY, "(port)m_axi_A_ARREADY");
    sc_trace(mVcdFile, m_axi_A_ARADDR, "(port)m_axi_A_ARADDR");
    sc_trace(mVcdFile, m_axi_A_ARID, "(port)m_axi_A_ARID");
    sc_trace(mVcdFile, m_axi_A_ARLEN, "(port)m_axi_A_ARLEN");
    sc_trace(mVcdFile, m_axi_A_ARSIZE, "(port)m_axi_A_ARSIZE");
    sc_trace(mVcdFile, m_axi_A_ARBURST, "(port)m_axi_A_ARBURST");
    sc_trace(mVcdFile, m_axi_A_ARLOCK, "(port)m_axi_A_ARLOCK");
    sc_trace(mVcdFile, m_axi_A_ARCACHE, "(port)m_axi_A_ARCACHE");
    sc_trace(mVcdFile, m_axi_A_ARPROT, "(port)m_axi_A_ARPROT");
    sc_trace(mVcdFile, m_axi_A_ARQOS, "(port)m_axi_A_ARQOS");
    sc_trace(mVcdFile, m_axi_A_ARREGION, "(port)m_axi_A_ARREGION");
    sc_trace(mVcdFile, m_axi_A_ARUSER, "(port)m_axi_A_ARUSER");
    sc_trace(mVcdFile, m_axi_A_RVALID, "(port)m_axi_A_RVALID");
    sc_trace(mVcdFile, m_axi_A_RREADY, "(port)m_axi_A_RREADY");
    sc_trace(mVcdFile, m_axi_A_RDATA, "(port)m_axi_A_RDATA");
    sc_trace(mVcdFile, m_axi_A_RLAST, "(port)m_axi_A_RLAST");
    sc_trace(mVcdFile, m_axi_A_RID, "(port)m_axi_A_RID");
    sc_trace(mVcdFile, m_axi_A_RUSER, "(port)m_axi_A_RUSER");
    sc_trace(mVcdFile, m_axi_A_RRESP, "(port)m_axi_A_RRESP");
    sc_trace(mVcdFile, m_axi_A_BVALID, "(port)m_axi_A_BVALID");
    sc_trace(mVcdFile, m_axi_A_BREADY, "(port)m_axi_A_BREADY");
    sc_trace(mVcdFile, m_axi_A_BRESP, "(port)m_axi_A_BRESP");
    sc_trace(mVcdFile, m_axi_A_BID, "(port)m_axi_A_BID");
    sc_trace(mVcdFile, m_axi_A_BUSER, "(port)m_axi_A_BUSER");
    sc_trace(mVcdFile, A_offset, "(port)A_offset");
    sc_trace(mVcdFile, fifo_A_local_out_V_din, "(port)fifo_A_local_out_V_din");
    sc_trace(mVcdFile, fifo_A_local_out_V_full_n, "(port)fifo_A_local_out_V_full_n");
    sc_trace(mVcdFile, fifo_A_local_out_V_write, "(port)fifo_A_local_out_V_write");
    sc_trace(mVcdFile, L, "(port)L");
    sc_trace(mVcdFile, U, "(port)U");
    sc_trace(mVcdFile, L_out_din, "(port)L_out_din");
    sc_trace(mVcdFile, L_out_full_n, "(port)L_out_full_n");
    sc_trace(mVcdFile, L_out_write, "(port)L_out_write");
    sc_trace(mVcdFile, U_out_din, "(port)U_out_din");
    sc_trace(mVcdFile, U_out_full_n, "(port)U_out_full_n");
    sc_trace(mVcdFile, U_out_write, "(port)U_out_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, A_blk_n_AR, "A_blk_n_AR");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln899_reg_295, "icmp_ln899_reg_295");
    sc_trace(mVcdFile, icmp_ln899_reg_295_pp0_iter1_reg, "icmp_ln899_reg_295_pp0_iter1_reg");
    sc_trace(mVcdFile, A_blk_n_R, "A_blk_n_R");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, icmp_ln899_reg_295_pp0_iter8_reg, "icmp_ln899_reg_295_pp0_iter8_reg");
    sc_trace(mVcdFile, fifo_A_local_out_V_blk_n, "fifo_A_local_out_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, icmp_ln899_reg_295_pp0_iter9_reg, "icmp_ln899_reg_295_pp0_iter9_reg");
    sc_trace(mVcdFile, L_out_blk_n, "L_out_blk_n");
    sc_trace(mVcdFile, U_out_blk_n, "U_out_blk_n");
    sc_trace(mVcdFile, indvar_flatten_i_i_reg_133, "indvar_flatten_i_i_reg_133");
    sc_trace(mVcdFile, p_02_0_i_i_reg_144, "p_02_0_i_i_reg_144");
    sc_trace(mVcdFile, p_079_0_i_i_reg_155, "p_079_0_i_i_reg_155");
    sc_trace(mVcdFile, zext_ln3_cast_i_i_fu_176_p1, "zext_ln3_cast_i_i_fu_176_p1");
    sc_trace(mVcdFile, zext_ln3_cast_i_i_reg_290, "zext_ln3_cast_i_i_reg_290");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, icmp_ln899_fu_180_p2, "icmp_ln899_fu_180_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state4_io, "ap_block_state4_io");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter6, "ap_block_state8_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter7, "ap_block_state9_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter8, "ap_block_state10_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter9, "ap_block_state11_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter10, "ap_block_state12_pp0_stage0_iter10");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln899_reg_295_pp0_iter2_reg, "icmp_ln899_reg_295_pp0_iter2_reg");
    sc_trace(mVcdFile, icmp_ln899_reg_295_pp0_iter3_reg, "icmp_ln899_reg_295_pp0_iter3_reg");
    sc_trace(mVcdFile, icmp_ln899_reg_295_pp0_iter4_reg, "icmp_ln899_reg_295_pp0_iter4_reg");
    sc_trace(mVcdFile, icmp_ln899_reg_295_pp0_iter5_reg, "icmp_ln899_reg_295_pp0_iter5_reg");
    sc_trace(mVcdFile, icmp_ln899_reg_295_pp0_iter6_reg, "icmp_ln899_reg_295_pp0_iter6_reg");
    sc_trace(mVcdFile, icmp_ln899_reg_295_pp0_iter7_reg, "icmp_ln899_reg_295_pp0_iter7_reg");
    sc_trace(mVcdFile, add_ln899_fu_186_p2, "add_ln899_fu_186_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, select_ln215_fu_198_p3, "select_ln215_fu_198_p3");
    sc_trace(mVcdFile, select_ln215_reg_304, "select_ln215_reg_304");
    sc_trace(mVcdFile, select_ln215_1_fu_212_p3, "select_ln215_1_fu_212_p3");
    sc_trace(mVcdFile, select_ln215_1_reg_310, "select_ln215_1_reg_310");
    sc_trace(mVcdFile, c2_V_fu_220_p2, "c2_V_fu_220_p2");
    sc_trace(mVcdFile, A_addr_reg_321, "A_addr_reg_321");
    sc_trace(mVcdFile, fifo_data_reg_327, "fifo_data_reg_327");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_phi_mux_p_02_0_i_i_phi_fu_148_p4, "ap_phi_mux_p_02_0_i_i_phi_fu_148_p4");
    sc_trace(mVcdFile, zext_ln19_1_fu_280_p1, "zext_ln19_1_fu_280_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_fu_166_p4, "tmp_fu_166_p4");
    sc_trace(mVcdFile, icmp_ln899_1_fu_192_p2, "icmp_ln899_1_fu_192_p2");
    sc_trace(mVcdFile, add_ln700_fu_206_p2, "add_ln700_fu_206_p2");
    sc_trace(mVcdFile, shl_ln_i_i_fu_229_p3, "shl_ln_i_i_fu_229_p3");
    sc_trace(mVcdFile, shl_ln1352_2_i_i_fu_240_p3, "shl_ln1352_2_i_i_fu_240_p3");
    sc_trace(mVcdFile, zext_ln1352_fu_236_p1, "zext_ln1352_fu_236_p1");
    sc_trace(mVcdFile, zext_ln1352_2_fu_247_p1, "zext_ln1352_2_fu_247_p1");
    sc_trace(mVcdFile, ret_V_fu_251_p2, "ret_V_fu_251_p2");
    sc_trace(mVcdFile, sext_ln1352_fu_257_p1, "sext_ln1352_fu_257_p1");
    sc_trace(mVcdFile, rhs_V_fu_261_p1, "rhs_V_fu_261_p1");
    sc_trace(mVcdFile, zext_ln215_fu_226_p1, "zext_ln215_fu_226_p1");
    sc_trace(mVcdFile, ret_V_2_fu_265_p2, "ret_V_2_fu_265_p2");
    sc_trace(mVcdFile, zext_ln19_fu_271_p1, "zext_ln19_fu_271_p1");
    sc_trace(mVcdFile, add_ln19_fu_275_p2, "add_ln19_fu_275_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

kernel0_A_IO_L3_in6::~kernel0_A_IO_L3_in6() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void kernel0_A_IO_L3_in6::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, L_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_out_full_n.read())))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, L_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_out_full_n.read())))) {
            ap_enable_reg_pp0_iter10 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln899_fu_180_p2.read()))) {
        indvar_flatten_i_i_reg_133 = add_ln899_fu_186_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, L_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_out_full_n.read())))) {
        indvar_flatten_i_i_reg_133 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln899_reg_295.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        p_02_0_i_i_reg_144 = select_ln215_1_reg_310.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, L_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_out_full_n.read())))) {
        p_02_0_i_i_reg_144 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln899_fu_180_p2.read()))) {
        p_079_0_i_i_reg_155 = c2_V_fu_220_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, L_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_out_full_n.read())))) {
        p_079_0_i_i_reg_155 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln899_reg_295.read()))) {
        A_addr_reg_321 = zext_ln19_1_fu_280_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln899_reg_295_pp0_iter8_reg.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        fifo_data_reg_327 = m_axi_A_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln899_reg_295 = icmp_ln899_fu_180_p2.read();
        icmp_ln899_reg_295_pp0_iter1_reg = icmp_ln899_reg_295.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln899_reg_295_pp0_iter2_reg = icmp_ln899_reg_295_pp0_iter1_reg.read();
        icmp_ln899_reg_295_pp0_iter3_reg = icmp_ln899_reg_295_pp0_iter2_reg.read();
        icmp_ln899_reg_295_pp0_iter4_reg = icmp_ln899_reg_295_pp0_iter3_reg.read();
        icmp_ln899_reg_295_pp0_iter5_reg = icmp_ln899_reg_295_pp0_iter4_reg.read();
        icmp_ln899_reg_295_pp0_iter6_reg = icmp_ln899_reg_295_pp0_iter5_reg.read();
        icmp_ln899_reg_295_pp0_iter7_reg = icmp_ln899_reg_295_pp0_iter6_reg.read();
        icmp_ln899_reg_295_pp0_iter8_reg = icmp_ln899_reg_295_pp0_iter7_reg.read();
        icmp_ln899_reg_295_pp0_iter9_reg = icmp_ln899_reg_295_pp0_iter8_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln899_fu_180_p2.read()))) {
        select_ln215_1_reg_310 = select_ln215_1_fu_212_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln899_fu_180_p2.read()))) {
        select_ln215_reg_304 = select_ln215_fu_198_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, L_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_out_full_n.read())))) {
        zext_ln3_cast_i_i_reg_290 = zext_ln3_cast_i_i_fu_176_p1.read();
    }
}

void kernel0_A_IO_L3_in6::thread_A_blk_n_AR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln899_reg_295_pp0_iter1_reg.read()))) {
        A_blk_n_AR = m_axi_A_ARREADY.read();
    } else {
        A_blk_n_AR = ap_const_logic_1;
    }
}

void kernel0_A_IO_L3_in6::thread_A_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln899_reg_295_pp0_iter8_reg.read()))) {
        A_blk_n_R = m_axi_A_RVALID.read();
    } else {
        A_blk_n_R = ap_const_logic_1;
    }
}

void kernel0_A_IO_L3_in6::thread_L_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        L_out_blk_n = L_out_full_n.read();
    } else {
        L_out_blk_n = ap_const_logic_1;
    }
}

void kernel0_A_IO_L3_in6::thread_L_out_din() {
    L_out_din = L.read();
}

void kernel0_A_IO_L3_in6::thread_L_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, L_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_out_full_n.read())))) {
        L_out_write = ap_const_logic_1;
    } else {
        L_out_write = ap_const_logic_0;
    }
}

void kernel0_A_IO_L3_in6::thread_U_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        U_out_blk_n = U_out_full_n.read();
    } else {
        U_out_blk_n = ap_const_logic_1;
    }
}

void kernel0_A_IO_L3_in6::thread_U_out_din() {
    U_out_din = U.read();
}

void kernel0_A_IO_L3_in6::thread_U_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, L_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_out_full_n.read())))) {
        U_out_write = ap_const_logic_1;
    } else {
        U_out_write = ap_const_logic_0;
    }
}

void kernel0_A_IO_L3_in6::thread_add_ln19_fu_275_p2() {
    add_ln19_fu_275_p2 = (!zext_ln19_fu_271_p1.read().is_01() || !zext_ln3_cast_i_i_reg_290.read().is_01())? sc_lv<63>(): (sc_biguint<63>(zext_ln19_fu_271_p1.read()) + sc_biguint<63>(zext_ln3_cast_i_i_reg_290.read()));
}

void kernel0_A_IO_L3_in6::thread_add_ln700_fu_206_p2() {
    add_ln700_fu_206_p2 = (!ap_phi_mux_p_02_0_i_i_phi_fu_148_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(ap_phi_mux_p_02_0_i_i_phi_fu_148_p4.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void kernel0_A_IO_L3_in6::thread_add_ln899_fu_186_p2() {
    add_ln899_fu_186_p2 = (!indvar_flatten_i_i_reg_133.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(indvar_flatten_i_i_reg_133.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void kernel0_A_IO_L3_in6::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void kernel0_A_IO_L3_in6::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void kernel0_A_IO_L3_in6::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[2];
}

void kernel0_A_IO_L3_in6::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel0_A_IO_L3_in6::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln899_reg_295_pp0_iter8_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_A_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln899_reg_295_pp0_iter9_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo_A_local_out_V_full_n.read())));
}

void kernel0_A_IO_L3_in6::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln899_reg_295_pp0_iter8_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_A_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln899_reg_295_pp0_iter9_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo_A_local_out_V_full_n.read())));
}

void kernel0_A_IO_L3_in6::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln899_reg_295_pp0_iter8_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_A_RVALID.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln899_reg_295_pp0_iter9_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo_A_local_out_V_full_n.read())));
}

void kernel0_A_IO_L3_in6::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, L_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_out_full_n.read()));
}

void kernel0_A_IO_L3_in6::thread_ap_block_state10_pp0_stage0_iter8() {
    ap_block_state10_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel0_A_IO_L3_in6::thread_ap_block_state11_pp0_stage0_iter9() {
    ap_block_state11_pp0_stage0_iter9 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln899_reg_295_pp0_iter8_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_A_RVALID.read()));
}

void kernel0_A_IO_L3_in6::thread_ap_block_state12_pp0_stage0_iter10() {
    ap_block_state12_pp0_stage0_iter10 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln899_reg_295_pp0_iter9_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, fifo_A_local_out_V_full_n.read()));
}

void kernel0_A_IO_L3_in6::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel0_A_IO_L3_in6::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel0_A_IO_L3_in6::thread_ap_block_state4_io() {
    ap_block_state4_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln899_reg_295_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_A_ARREADY.read()));
}

void kernel0_A_IO_L3_in6::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel0_A_IO_L3_in6::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel0_A_IO_L3_in6::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel0_A_IO_L3_in6::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel0_A_IO_L3_in6::thread_ap_block_state8_pp0_stage0_iter6() {
    ap_block_state8_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel0_A_IO_L3_in6::thread_ap_block_state9_pp0_stage0_iter7() {
    ap_block_state9_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel0_A_IO_L3_in6::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln899_fu_180_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void kernel0_A_IO_L3_in6::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void kernel0_A_IO_L3_in6::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void kernel0_A_IO_L3_in6::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void kernel0_A_IO_L3_in6::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void kernel0_A_IO_L3_in6::thread_ap_phi_mux_p_02_0_i_i_phi_fu_148_p4() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln899_reg_295.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        ap_phi_mux_p_02_0_i_i_phi_fu_148_p4 = select_ln215_1_reg_310.read();
    } else {
        ap_phi_mux_p_02_0_i_i_phi_fu_148_p4 = p_02_0_i_i_reg_144.read();
    }
}

void kernel0_A_IO_L3_in6::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void kernel0_A_IO_L3_in6::thread_c2_V_fu_220_p2() {
    c2_V_fu_220_p2 = (!select_ln215_fu_198_p3.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(select_ln215_fu_198_p3.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void kernel0_A_IO_L3_in6::thread_fifo_A_local_out_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln899_reg_295_pp0_iter9_reg.read()))) {
        fifo_A_local_out_V_blk_n = fifo_A_local_out_V_full_n.read();
    } else {
        fifo_A_local_out_V_blk_n = ap_const_logic_1;
    }
}

void kernel0_A_IO_L3_in6::thread_fifo_A_local_out_V_din() {
    fifo_A_local_out_V_din = fifo_data_reg_327.read();
}

void kernel0_A_IO_L3_in6::thread_fifo_A_local_out_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln899_reg_295_pp0_iter9_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        fifo_A_local_out_V_write = ap_const_logic_1;
    } else {
        fifo_A_local_out_V_write = ap_const_logic_0;
    }
}

void kernel0_A_IO_L3_in6::thread_icmp_ln899_1_fu_192_p2() {
    icmp_ln899_1_fu_192_p2 = (!p_079_0_i_i_reg_155.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(p_079_0_i_i_reg_155.read() == ap_const_lv4_C);
}

void kernel0_A_IO_L3_in6::thread_icmp_ln899_fu_180_p2() {
    icmp_ln899_fu_180_p2 = (!indvar_flatten_i_i_reg_133.read().is_01() || !ap_const_lv8_90.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_i_i_reg_133.read() == ap_const_lv8_90);
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_ARADDR() {
    m_axi_A_ARADDR = A_addr_reg_321.read();
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_ARBURST() {
    m_axi_A_ARBURST = ap_const_lv2_0;
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_ARCACHE() {
    m_axi_A_ARCACHE = ap_const_lv4_0;
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_ARID() {
    m_axi_A_ARID = ap_const_lv1_0;
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_ARLEN() {
    m_axi_A_ARLEN = ap_const_lv32_1;
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_ARLOCK() {
    m_axi_A_ARLOCK = ap_const_lv2_0;
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_ARPROT() {
    m_axi_A_ARPROT = ap_const_lv3_0;
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_ARQOS() {
    m_axi_A_ARQOS = ap_const_lv4_0;
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_ARREGION() {
    m_axi_A_ARREGION = ap_const_lv4_0;
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_ARSIZE() {
    m_axi_A_ARSIZE = ap_const_lv3_0;
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_ARUSER() {
    m_axi_A_ARUSER = ap_const_lv1_0;
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln899_reg_295_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        m_axi_A_ARVALID = ap_const_logic_1;
    } else {
        m_axi_A_ARVALID = ap_const_logic_0;
    }
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_AWADDR() {
    m_axi_A_AWADDR = ap_const_lv64_0;
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_AWBURST() {
    m_axi_A_AWBURST = ap_const_lv2_0;
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_AWCACHE() {
    m_axi_A_AWCACHE = ap_const_lv4_0;
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_AWID() {
    m_axi_A_AWID = ap_const_lv1_0;
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_AWLEN() {
    m_axi_A_AWLEN = ap_const_lv32_0;
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_AWLOCK() {
    m_axi_A_AWLOCK = ap_const_lv2_0;
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_AWPROT() {
    m_axi_A_AWPROT = ap_const_lv3_0;
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_AWQOS() {
    m_axi_A_AWQOS = ap_const_lv4_0;
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_AWREGION() {
    m_axi_A_AWREGION = ap_const_lv4_0;
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_AWSIZE() {
    m_axi_A_AWSIZE = ap_const_lv3_0;
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_AWUSER() {
    m_axi_A_AWUSER = ap_const_lv1_0;
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_AWVALID() {
    m_axi_A_AWVALID = ap_const_logic_0;
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_BREADY() {
    m_axi_A_BREADY = ap_const_logic_0;
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln899_reg_295_pp0_iter8_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        m_axi_A_RREADY = ap_const_logic_1;
    } else {
        m_axi_A_RREADY = ap_const_logic_0;
    }
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_WDATA() {
    m_axi_A_WDATA = ap_const_lv32_0;
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_WID() {
    m_axi_A_WID = ap_const_lv1_0;
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_WLAST() {
    m_axi_A_WLAST = ap_const_logic_0;
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_WSTRB() {
    m_axi_A_WSTRB = ap_const_lv4_0;
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_WUSER() {
    m_axi_A_WUSER = ap_const_lv1_0;
}

void kernel0_A_IO_L3_in6::thread_m_axi_A_WVALID() {
    m_axi_A_WVALID = ap_const_logic_0;
}

void kernel0_A_IO_L3_in6::thread_ret_V_2_fu_265_p2() {
    ret_V_2_fu_265_p2 = (!rhs_V_fu_261_p1.read().is_01() || !zext_ln215_fu_226_p1.read().is_01())? sc_lv<38>(): (sc_biguint<38>(rhs_V_fu_261_p1.read()) + sc_biguint<38>(zext_ln215_fu_226_p1.read()));
}

void kernel0_A_IO_L3_in6::thread_ret_V_fu_251_p2() {
    ret_V_fu_251_p2 = (!zext_ln1352_fu_236_p1.read().is_01() || !zext_ln1352_2_fu_247_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln1352_fu_236_p1.read()) - sc_biguint<9>(zext_ln1352_2_fu_247_p1.read()));
}

void kernel0_A_IO_L3_in6::thread_rhs_V_fu_261_p1() {
    rhs_V_fu_261_p1 = esl_zext<38,37>(sext_ln1352_fu_257_p1.read());
}

void kernel0_A_IO_L3_in6::thread_select_ln215_1_fu_212_p3() {
    select_ln215_1_fu_212_p3 = (!icmp_ln899_1_fu_192_p2.read()[0].is_01())? sc_lv<4>(): ((icmp_ln899_1_fu_192_p2.read()[0].to_bool())? add_ln700_fu_206_p2.read(): ap_phi_mux_p_02_0_i_i_phi_fu_148_p4.read());
}

void kernel0_A_IO_L3_in6::thread_select_ln215_fu_198_p3() {
    select_ln215_fu_198_p3 = (!icmp_ln899_1_fu_192_p2.read()[0].is_01())? sc_lv<4>(): ((icmp_ln899_1_fu_192_p2.read()[0].to_bool())? ap_const_lv4_0: p_079_0_i_i_reg_155.read());
}

void kernel0_A_IO_L3_in6::thread_sext_ln1352_fu_257_p1() {
    sext_ln1352_fu_257_p1 = esl_sext<37,9>(ret_V_fu_251_p2.read());
}

void kernel0_A_IO_L3_in6::thread_shl_ln1352_2_i_i_fu_240_p3() {
    shl_ln1352_2_i_i_fu_240_p3 = esl_concat<4,2>(select_ln215_reg_304.read(), ap_const_lv2_0);
}

void kernel0_A_IO_L3_in6::thread_shl_ln_i_i_fu_229_p3() {
    shl_ln_i_i_fu_229_p3 = esl_concat<4,4>(select_ln215_reg_304.read(), ap_const_lv4_0);
}

void kernel0_A_IO_L3_in6::thread_tmp_fu_166_p4() {
    tmp_fu_166_p4 = A_offset.read().range(63, 2);
}

void kernel0_A_IO_L3_in6::thread_zext_ln1352_2_fu_247_p1() {
    zext_ln1352_2_fu_247_p1 = esl_zext<9,6>(shl_ln1352_2_i_i_fu_240_p3.read());
}

void kernel0_A_IO_L3_in6::thread_zext_ln1352_fu_236_p1() {
    zext_ln1352_fu_236_p1 = esl_zext<9,8>(shl_ln_i_i_fu_229_p3.read());
}

void kernel0_A_IO_L3_in6::thread_zext_ln19_1_fu_280_p1() {
    zext_ln19_1_fu_280_p1 = esl_zext<64,63>(add_ln19_fu_275_p2.read());
}

void kernel0_A_IO_L3_in6::thread_zext_ln19_fu_271_p1() {
    zext_ln19_fu_271_p1 = esl_zext<63,38>(ret_V_2_fu_265_p2.read());
}

void kernel0_A_IO_L3_in6::thread_zext_ln215_fu_226_p1() {
    zext_ln215_fu_226_p1 = esl_zext<38,4>(select_ln215_1_reg_310.read());
}

void kernel0_A_IO_L3_in6::thread_zext_ln3_cast_i_i_fu_176_p1() {
    zext_ln3_cast_i_i_fu_176_p1 = esl_zext<63,62>(tmp_fu_166_p4.read());
}

void kernel0_A_IO_L3_in6::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, L_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, U_out_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter9.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln899_fu_180_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter10.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter9.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln899_fu_180_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

