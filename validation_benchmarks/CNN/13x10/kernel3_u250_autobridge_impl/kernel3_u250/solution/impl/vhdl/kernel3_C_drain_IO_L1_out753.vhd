-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel3_C_drain_IO_L1_out753 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fifo_C_drain_in_V_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    fifo_C_drain_in_V_V_empty_n : IN STD_LOGIC;
    fifo_C_drain_in_V_V_read : OUT STD_LOGIC;
    fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
    fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
    fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
    fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
end;


architecture behav of kernel3_C_drain_IO_L1_out753 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv13_1400 : STD_LOGIC_VECTOR (12 downto 0) := "1010000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv11_200 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal fifo_C_drain_in_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln2255_reg_550 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2255_reg_550_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln879_41_reg_559 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln879_41_reg_559_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo_C_drain_out_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal icmp_ln2255_reg_550_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo_C_drain_local_in_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln2222_reg_509 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_148 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_0122_0_i_reg_159 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_071_0_i_reg_170 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten20_reg_181 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_04_0_i_reg_192 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten6_reg_203 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_041_0_i_reg_214 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_068_0_i_reg_225 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln2222_fu_246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln2222_reg_509_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln2222_fu_252_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln1371_50_fu_278_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln1371_50_reg_518 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln1371_fu_296_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1371_reg_523 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_C_V_addr_3_reg_529 : STD_LOGIC_VECTOR (8 downto 0);
    signal local_C_V_addr_3_reg_529_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal c7_V_fu_313_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal buf_data_split_1_V_249_fu_337_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_data_split_1_V_249_reg_540 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_data_split_1_V_250_fu_344_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_data_split_1_V_250_reg_545 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln2255_fu_358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state6_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp1_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op82_read_state8 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal add_ln2255_fu_364_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal select_ln879_41_fu_402_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln2255_fu_428_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln544_fu_448_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln544_reg_568 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln544_53_fu_456_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln544_53_reg_573 : STD_LOGIC_VECTOR (4 downto 0);
    signal c6_V_42_fu_464_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln2257_fu_476_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal local_C_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state6 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal local_C_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal local_C_V_ce0 : STD_LOGIC;
    signal local_C_V_ce1 : STD_LOGIC;
    signal local_C_V_we1 : STD_LOGIC;
    signal local_C_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_p_0122_0_i_phi_fu_163_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_mux_p_041_0_i_phi_fu_218_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_reg_pp1_iter0_tmp_V_reg_236 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp1_iter1_tmp_V_reg_236 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp1_iter2_tmp_V_reg_236 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp1_iter3_tmp_V_reg_236 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_fu_308_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_100_fu_504_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal icmp_ln2224_fu_264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c6_V_fu_258_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln1371_fu_270_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln544_mid2_v_fu_286_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_71_fu_300_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_data_split_1_V_246_fu_333_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_data_split_1_V_fu_323_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_data_split_0_V_fu_319_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln2257_fu_376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c4_V_fu_370_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln879_fu_390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87941_fu_396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2259_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln879_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln879_fu_382_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln879_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln544_fu_442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c5_V_fu_436_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln2257_fu_470_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_fu_484_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln2257_fu_491_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln321_99_fu_495_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln321_fu_498_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;

    component kernel3_C_drain_IO_L1_out_boundary666_local_C_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    local_C_V_U : component kernel3_C_drain_IO_L1_out_boundary666_local_C_V
    generic map (
        DataWidth => 64,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_C_V_address0,
        ce0 => local_C_V_ce0,
        q0 => local_C_V_q0,
        address1 => local_C_V_addr_3_reg_529_pp0_iter1_reg,
        ce1 => local_C_V_ce1,
        we1 => local_C_V_we1,
        d1 => local_C_V_d1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state6) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state6)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state6);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp1_iter3_tmp_V_reg_236_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                if (((select_ln879_41_reg_559_pp1_iter1_reg = ap_const_lv1_0) and (icmp_ln2255_reg_550_pp1_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter3_tmp_V_reg_236 <= fifo_C_drain_in_V_V_dout;
                elsif (((select_ln879_41_reg_559_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln2255_reg_550_pp1_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp1_iter3_tmp_V_reg_236 <= local_C_V_q0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter3_tmp_V_reg_236 <= ap_phi_reg_pp1_iter2_tmp_V_reg_236;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten20_reg_181_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                indvar_flatten20_reg_181 <= ap_const_lv13_0;
            elsif (((icmp_ln2255_fu_358_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                indvar_flatten20_reg_181 <= add_ln2255_fu_364_p2;
            end if; 
        end if;
    end process;

    indvar_flatten6_reg_203_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                indvar_flatten6_reg_203 <= ap_const_lv11_0;
            elsif (((icmp_ln2255_fu_358_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                indvar_flatten6_reg_203 <= select_ln2257_fu_476_p3;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2222_fu_246_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten_reg_148 <= add_ln2222_fu_252_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_148 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    p_0122_0_i_reg_159_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2222_reg_509 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_0122_0_i_reg_159 <= select_ln1371_50_reg_518;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0122_0_i_reg_159 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    p_041_0_i_reg_214_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                p_041_0_i_reg_214 <= ap_const_lv5_0;
            elsif (((icmp_ln2255_reg_550 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_041_0_i_reg_214 <= select_ln544_53_reg_573;
            end if; 
        end if;
    end process;

    p_04_0_i_reg_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                p_04_0_i_reg_192 <= ap_const_lv4_3;
            elsif (((icmp_ln2255_fu_358_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_04_0_i_reg_192 <= select_ln2255_fu_428_p3;
            end if; 
        end if;
    end process;

    p_068_0_i_reg_225_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                p_068_0_i_reg_225 <= ap_const_lv6_0;
            elsif (((icmp_ln2255_fu_358_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_068_0_i_reg_225 <= c6_V_42_fu_464_p2;
            end if; 
        end if;
    end process;

    p_071_0_i_reg_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2222_fu_246_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_071_0_i_reg_170 <= c7_V_fu_313_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_071_0_i_reg_170 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter1_tmp_V_reg_236 <= ap_phi_reg_pp1_iter0_tmp_V_reg_236;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter2_tmp_V_reg_236 <= ap_phi_reg_pp1_iter1_tmp_V_reg_236;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2222_reg_509 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                buf_data_split_1_V_249_reg_540 <= buf_data_split_1_V_249_fu_337_p3;
                buf_data_split_1_V_250_reg_545 <= buf_data_split_1_V_250_fu_344_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln2222_reg_509 <= icmp_ln2222_fu_246_p2;
                icmp_ln2222_reg_509_pp0_iter1_reg <= icmp_ln2222_reg_509;
                local_C_V_addr_3_reg_529_pp0_iter1_reg <= local_C_V_addr_3_reg_529;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln2255_reg_550 <= icmp_ln2255_fu_358_p2;
                icmp_ln2255_reg_550_pp1_iter1_reg <= icmp_ln2255_reg_550;
                select_ln879_41_reg_559_pp1_iter1_reg <= select_ln879_41_reg_559;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln2255_reg_550_pp1_iter2_reg <= icmp_ln2255_reg_550_pp1_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2222_fu_246_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_C_V_addr_3_reg_529 <= zext_ln321_fu_308_p1(9 - 1 downto 0);
                trunc_ln1371_reg_523 <= trunc_ln1371_fu_296_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2222_fu_246_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                select_ln1371_50_reg_518 <= select_ln1371_50_fu_278_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2255_fu_358_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                select_ln544_53_reg_573 <= select_ln544_53_fu_456_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln2255_fu_358_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                select_ln544_reg_568 <= select_ln544_fu_448_p3;
                select_ln879_41_reg_559 <= select_ln879_41_fu_402_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp0_iter1, icmp_ln2222_fu_246_p2, ap_enable_reg_pp0_iter0, icmp_ln2255_fu_358_p2, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln2222_fu_246_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((icmp_ln2222_fu_246_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln2255_fu_358_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln2255_fu_358_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    add_ln2222_fu_252_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_148) + unsigned(ap_const_lv11_1));
    add_ln2255_fu_364_p2 <= std_logic_vector(unsigned(indvar_flatten20_reg_181) + unsigned(ap_const_lv13_1));
    add_ln2257_fu_470_p2 <= std_logic_vector(unsigned(indvar_flatten6_reg_203) + unsigned(ap_const_lv11_1));
    add_ln321_fu_498_p2 <= std_logic_vector(unsigned(zext_ln2257_fu_491_p1) + unsigned(zext_ln321_99_fu_495_p1));
    and_ln879_fu_422_p2 <= (xor_ln879_fu_410_p2 and icmp_ln2259_fu_416_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(4);
    ap_CS_fsm_state5 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(fifo_C_drain_local_in_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln2222_reg_509)
    begin
                ap_block_pp0_stage0_11001 <= ((icmp_ln2222_reg_509 = ap_const_lv1_0) and (fifo_C_drain_local_in_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(fifo_C_drain_local_in_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln2222_reg_509)
    begin
                ap_block_pp0_stage0_subdone <= ((icmp_ln2222_reg_509 = ap_const_lv1_0) and (fifo_C_drain_local_in_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(fifo_C_drain_in_V_V_empty_n, fifo_C_drain_out_V_V_full_n, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, icmp_ln2255_reg_550_pp1_iter2_reg, ap_predicate_op82_read_state8)
    begin
                ap_block_pp1_stage0_01001 <= (((icmp_ln2255_reg_550_pp1_iter2_reg = ap_const_lv1_0) and (fifo_C_drain_out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)) or ((fifo_C_drain_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op82_read_state8 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(fifo_C_drain_in_V_V_empty_n, fifo_C_drain_out_V_V_full_n, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, icmp_ln2255_reg_550_pp1_iter2_reg, ap_predicate_op82_read_state8)
    begin
                ap_block_pp1_stage0_11001 <= (((icmp_ln2255_reg_550_pp1_iter2_reg = ap_const_lv1_0) and (fifo_C_drain_out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)) or ((fifo_C_drain_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op82_read_state8 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(fifo_C_drain_in_V_V_empty_n, fifo_C_drain_out_V_V_full_n, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, icmp_ln2255_reg_550_pp1_iter2_reg, ap_predicate_op82_read_state8)
    begin
                ap_block_pp1_stage0_subdone <= (((icmp_ln2255_reg_550_pp1_iter2_reg = ap_const_lv1_0) and (fifo_C_drain_out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)) or ((fifo_C_drain_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op82_read_state8 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(fifo_C_drain_local_in_V_empty_n, icmp_ln2222_reg_509)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((icmp_ln2222_reg_509 = ap_const_lv1_0) and (fifo_C_drain_local_in_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp1_stage0_iter2_assign_proc : process(fifo_C_drain_in_V_V_empty_n, ap_predicate_op82_read_state8)
    begin
                ap_block_state8_pp1_stage0_iter2 <= ((fifo_C_drain_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op82_read_state8 = ap_const_boolean_1));
    end process;


    ap_block_state9_pp1_stage0_iter3_assign_proc : process(fifo_C_drain_out_V_V_full_n, icmp_ln2255_reg_550_pp1_iter2_reg)
    begin
                ap_block_state9_pp1_stage0_iter3 <= ((icmp_ln2255_reg_550_pp1_iter2_reg = ap_const_lv1_0) and (fifo_C_drain_out_V_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln2222_fu_246_p2)
    begin
        if ((icmp_ln2222_fu_246_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state6_assign_proc : process(icmp_ln2255_fu_358_p2)
    begin
        if ((icmp_ln2255_fu_358_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state6 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_0122_0_i_phi_fu_163_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln2222_reg_509, p_0122_0_i_reg_159, select_ln1371_50_reg_518)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln2222_reg_509 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_p_0122_0_i_phi_fu_163_p4 <= select_ln1371_50_reg_518;
        else 
            ap_phi_mux_p_0122_0_i_phi_fu_163_p4 <= p_0122_0_i_reg_159;
        end if; 
    end process;


    ap_phi_mux_p_041_0_i_phi_fu_218_p4_assign_proc : process(ap_block_pp1_stage0, icmp_ln2255_reg_550, p_041_0_i_reg_214, ap_CS_fsm_pp1_stage0, select_ln544_53_reg_573, ap_enable_reg_pp1_iter1)
    begin
        if (((icmp_ln2255_reg_550 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_p_041_0_i_phi_fu_218_p4 <= select_ln544_53_reg_573;
        else 
            ap_phi_mux_p_041_0_i_phi_fu_218_p4 <= p_041_0_i_reg_214;
        end if; 
    end process;

    ap_phi_reg_pp1_iter0_tmp_V_reg_236 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op82_read_state8_assign_proc : process(icmp_ln2255_reg_550_pp1_iter1_reg, select_ln879_41_reg_559_pp1_iter1_reg)
    begin
                ap_predicate_op82_read_state8 <= ((select_ln879_41_reg_559_pp1_iter1_reg = ap_const_lv1_0) and (icmp_ln2255_reg_550_pp1_iter1_reg = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    buf_data_split_0_V_fu_319_p1 <= local_C_V_q0(32 - 1 downto 0);
    buf_data_split_1_V_246_fu_333_p1 <= fifo_C_drain_local_in_V_dout;
    buf_data_split_1_V_249_fu_337_p3 <= 
        buf_data_split_1_V_246_fu_333_p1 when (trunc_ln1371_reg_523(0) = '1') else 
        buf_data_split_1_V_fu_323_p4;
    buf_data_split_1_V_250_fu_344_p3 <= 
        buf_data_split_0_V_fu_319_p1 when (trunc_ln1371_reg_523(0) = '1') else 
        buf_data_split_1_V_246_fu_333_p1;
    buf_data_split_1_V_fu_323_p4 <= local_C_V_q0(63 downto 32);
    c4_V_fu_370_p2 <= std_logic_vector(unsigned(p_04_0_i_reg_192) + unsigned(ap_const_lv4_1));
    c5_V_fu_436_p2 <= std_logic_vector(unsigned(select_ln879_fu_382_p3) + unsigned(ap_const_lv5_1));
    c6_V_42_fu_464_p2 <= std_logic_vector(unsigned(select_ln544_fu_448_p3) + unsigned(ap_const_lv6_1));
    c6_V_fu_258_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(ap_phi_mux_p_0122_0_i_phi_fu_163_p4));
    c7_V_fu_313_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(select_ln1371_fu_270_p3));

    fifo_C_drain_in_V_V_blk_n_assign_proc : process(fifo_C_drain_in_V_V_empty_n, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0, icmp_ln2255_reg_550_pp1_iter1_reg, select_ln879_41_reg_559_pp1_iter1_reg)
    begin
        if (((select_ln879_41_reg_559_pp1_iter1_reg = ap_const_lv1_0) and (icmp_ln2255_reg_550_pp1_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            fifo_C_drain_in_V_V_blk_n <= fifo_C_drain_in_V_V_empty_n;
        else 
            fifo_C_drain_in_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_C_drain_in_V_V_read_assign_proc : process(ap_enable_reg_pp1_iter2, ap_predicate_op82_read_state8, ap_block_pp1_stage0_11001)
    begin
        if (((ap_predicate_op82_read_state8 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            fifo_C_drain_in_V_V_read <= ap_const_logic_1;
        else 
            fifo_C_drain_in_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_C_drain_local_in_V_blk_n_assign_proc : process(fifo_C_drain_local_in_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln2222_reg_509)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln2222_reg_509 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_C_drain_local_in_V_blk_n <= fifo_C_drain_local_in_V_empty_n;
        else 
            fifo_C_drain_local_in_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_C_drain_local_in_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln2222_reg_509, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln2222_reg_509 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_C_drain_local_in_V_read <= ap_const_logic_1;
        else 
            fifo_C_drain_local_in_V_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_C_drain_out_V_V_blk_n_assign_proc : process(fifo_C_drain_out_V_V_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, icmp_ln2255_reg_550_pp1_iter2_reg)
    begin
        if (((icmp_ln2255_reg_550_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            fifo_C_drain_out_V_V_blk_n <= fifo_C_drain_out_V_V_full_n;
        else 
            fifo_C_drain_out_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_C_drain_out_V_V_din <= ap_phi_reg_pp1_iter3_tmp_V_reg_236;

    fifo_C_drain_out_V_V_write_assign_proc : process(ap_enable_reg_pp1_iter3, icmp_ln2255_reg_550_pp1_iter2_reg, ap_block_pp1_stage0_11001)
    begin
        if (((icmp_ln2255_reg_550_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            fifo_C_drain_out_V_V_write <= ap_const_logic_1;
        else 
            fifo_C_drain_out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln2222_fu_246_p2 <= "1" when (indvar_flatten_reg_148 = ap_const_lv11_400) else "0";
    icmp_ln2224_fu_264_p2 <= "1" when (p_071_0_i_reg_170 = ap_const_lv5_10) else "0";
    icmp_ln2255_fu_358_p2 <= "1" when (indvar_flatten20_reg_181 = ap_const_lv13_1400) else "0";
    icmp_ln2257_fu_376_p2 <= "1" when (indvar_flatten6_reg_203 = ap_const_lv11_200) else "0";
    icmp_ln2259_fu_416_p2 <= "1" when (p_068_0_i_reg_225 = ap_const_lv6_20) else "0";
    icmp_ln87941_fu_396_p2 <= "1" when (p_04_0_i_reg_192 = ap_const_lv4_3) else "0";
    icmp_ln879_fu_390_p2 <= "1" when (c4_V_fu_370_p2 = ap_const_lv4_3) else "0";

    local_C_V_address0_assign_proc : process(ap_block_pp1_stage0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, zext_ln321_fu_308_p1, zext_ln321_100_fu_504_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            local_C_V_address0 <= zext_ln321_100_fu_504_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            local_C_V_address0 <= zext_ln321_fu_308_p1(9 - 1 downto 0);
        else 
            local_C_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    local_C_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            local_C_V_ce0 <= ap_const_logic_1;
        else 
            local_C_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_C_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_V_ce1 <= ap_const_logic_1;
        else 
            local_C_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_V_d1 <= (buf_data_split_1_V_249_reg_540 & buf_data_split_1_V_250_reg_545);

    local_C_V_we1_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln2222_reg_509_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln2222_reg_509_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_V_we1 <= ap_const_logic_1;
        else 
            local_C_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln544_fu_442_p2 <= (icmp_ln2257_fu_376_p2 or and_ln879_fu_422_p2);
    select_ln1371_50_fu_278_p3 <= 
        c6_V_fu_258_p2 when (icmp_ln2224_fu_264_p2(0) = '1') else 
        ap_phi_mux_p_0122_0_i_phi_fu_163_p4;
    select_ln1371_fu_270_p3 <= 
        ap_const_lv5_0 when (icmp_ln2224_fu_264_p2(0) = '1') else 
        p_071_0_i_reg_170;
    select_ln2255_fu_428_p3 <= 
        c4_V_fu_370_p2 when (icmp_ln2257_fu_376_p2(0) = '1') else 
        p_04_0_i_reg_192;
    select_ln2257_fu_476_p3 <= 
        ap_const_lv11_1 when (icmp_ln2257_fu_376_p2(0) = '1') else 
        add_ln2257_fu_470_p2;
    select_ln544_53_fu_456_p3 <= 
        c5_V_fu_436_p2 when (and_ln879_fu_422_p2(0) = '1') else 
        select_ln879_fu_382_p3;
    select_ln544_fu_448_p3 <= 
        ap_const_lv6_0 when (or_ln544_fu_442_p2(0) = '1') else 
        p_068_0_i_reg_225;
    select_ln879_41_fu_402_p3 <= 
        icmp_ln879_fu_390_p2 when (icmp_ln2257_fu_376_p2(0) = '1') else 
        icmp_ln87941_fu_396_p2;
    select_ln879_fu_382_p3 <= 
        ap_const_lv5_0 when (icmp_ln2257_fu_376_p2(0) = '1') else 
        ap_phi_mux_p_041_0_i_phi_fu_218_p4;
    tmp_71_fu_300_p3 <= (select_ln1371_fu_270_p3 & zext_ln544_mid2_v_fu_286_p4);
    tmp_fu_484_p3 <= (select_ln544_53_reg_573 & ap_const_lv5_0);
    trunc_ln1371_fu_296_p1 <= select_ln1371_50_fu_278_p3(1 - 1 downto 0);
    xor_ln879_fu_410_p2 <= (icmp_ln2257_fu_376_p2 xor ap_const_lv1_1);
    zext_ln2257_fu_491_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_484_p3),11));
    zext_ln321_100_fu_504_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln321_fu_498_p2),64));
    zext_ln321_99_fu_495_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln544_reg_568),11));
    zext_ln321_fu_308_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_71_fu_300_p3),64));
    zext_ln544_mid2_v_fu_286_p4 <= select_ln1371_50_fu_278_p3(5 downto 1);
end behav;
