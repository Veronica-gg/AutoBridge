// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _kernel3_C_drain_IO_L1_out_boundary_HH_
#define _kernel3_C_drain_IO_L1_out_boundary_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "kernel3_C_drain_IO_L1_out_boundary450_local_C_V.h"

namespace ap_rtl {

struct kernel3_C_drain_IO_L1_out_boundary : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<64> > fifo_C_drain_out_V_V_din;
    sc_in< sc_logic > fifo_C_drain_out_V_V_full_n;
    sc_out< sc_logic > fifo_C_drain_out_V_V_write;
    sc_in< sc_lv<32> > fifo_C_drain_local_in_V_dout;
    sc_in< sc_logic > fifo_C_drain_local_in_V_empty_n;
    sc_out< sc_logic > fifo_C_drain_local_in_V_read;


    // Module declarations
    kernel3_C_drain_IO_L1_out_boundary(sc_module_name name);
    SC_HAS_PROCESS(kernel3_C_drain_IO_L1_out_boundary);

    ~kernel3_C_drain_IO_L1_out_boundary();

    sc_trace_file* mVcdFile;

    kernel3_C_drain_IO_L1_out_boundary450_local_C_V* local_C_V_U;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > fifo_C_drain_out_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<1> > icmp_ln1660_reg_421;
    sc_signal< sc_lv<1> > icmp_ln1660_reg_421_pp1_iter1_reg;
    sc_signal< sc_logic > fifo_C_drain_local_in_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln1598_reg_380;
    sc_signal< sc_lv<11> > indvar_flatten_reg_131;
    sc_signal< sc_lv<7> > p_0122_0_i_reg_142;
    sc_signal< sc_lv<5> > p_071_0_i_reg_153;
    sc_signal< sc_lv<10> > indvar_flatten6_reg_164;
    sc_signal< sc_lv<5> > p_055_0_i_0_reg_175;
    sc_signal< sc_lv<6> > p_045_0_i_0_reg_186;
    sc_signal< sc_lv<1> > icmp_ln1598_fu_197_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln1598_reg_380_pp0_iter1_reg;
    sc_signal< sc_lv<11> > add_ln1598_fu_203_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<7> > select_ln1371_6_fu_229_p3;
    sc_signal< sc_lv<7> > select_ln1371_6_reg_389;
    sc_signal< sc_lv<1> > trunc_ln1371_fu_247_p1;
    sc_signal< sc_lv<1> > trunc_ln1371_reg_394;
    sc_signal< sc_lv<9> > local_C_V_addr_1_reg_400;
    sc_signal< sc_lv<9> > local_C_V_addr_1_reg_400_pp0_iter1_reg;
    sc_signal< sc_lv<5> > c7_V_fu_264_p2;
    sc_signal< sc_lv<32> > buf_data_split_1_V_29_fu_288_p3;
    sc_signal< sc_lv<32> > buf_data_split_1_V_29_reg_411;
    sc_signal< sc_lv<32> > buf_data_split_1_V_30_fu_295_p3;
    sc_signal< sc_lv<32> > buf_data_split_1_V_30_reg_416;
    sc_signal< sc_lv<1> > icmp_ln1660_fu_309_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< bool > ap_block_state6_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state7_pp1_stage0_iter1;
    sc_signal< bool > ap_block_state8_pp1_stage0_iter2;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<10> > add_ln1660_fu_315_p2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<6> > select_ln544_fu_333_p3;
    sc_signal< sc_lv<6> > select_ln544_reg_430;
    sc_signal< sc_lv<5> > select_ln544_9_fu_341_p3;
    sc_signal< sc_lv<5> > select_ln544_9_reg_435;
    sc_signal< sc_lv<6> > add_ln700_8_fu_349_p2;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state6;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< sc_lv<9> > local_C_V_address0;
    sc_signal< sc_logic > local_C_V_ce0;
    sc_signal< sc_lv<64> > local_C_V_q0;
    sc_signal< sc_logic > local_C_V_ce1;
    sc_signal< sc_logic > local_C_V_we1;
    sc_signal< sc_lv<64> > local_C_V_d1;
    sc_signal< sc_lv<7> > ap_phi_mux_p_0122_0_i_phi_fu_146_p4;
    sc_signal< sc_lv<5> > ap_phi_mux_p_055_0_i_0_phi_fu_179_p4;
    sc_signal< sc_lv<64> > zext_ln321_fu_259_p1;
    sc_signal< sc_lv<64> > zext_ln321_12_fu_375_p1;
    sc_signal< bool > ap_block_pp1_stage0_01001;
    sc_signal< sc_lv<1> > icmp_ln1600_fu_215_p2;
    sc_signal< sc_lv<7> > c6_V_fu_209_p2;
    sc_signal< sc_lv<5> > select_ln1371_fu_221_p3;
    sc_signal< sc_lv<5> > zext_ln544_mid2_v_fu_237_p4;
    sc_signal< sc_lv<10> > tmp_22_fu_251_p3;
    sc_signal< sc_lv<32> > buf_data_split_1_V_26_fu_284_p1;
    sc_signal< sc_lv<32> > buf_data_split_1_V_fu_274_p4;
    sc_signal< sc_lv<32> > buf_data_split_0_V_fu_270_p1;
    sc_signal< sc_lv<1> > icmp_ln1662_fu_327_p2;
    sc_signal< sc_lv<5> > add_ln700_fu_321_p2;
    sc_signal< sc_lv<10> > tmp_23_fu_355_p3;
    sc_signal< sc_lv<11> > zext_ln321_11_fu_366_p1;
    sc_signal< sc_lv<11> > zext_ln1662_fu_362_p1;
    sc_signal< sc_lv<11> > add_ln321_fu_369_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_pp0_stage0;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<5> ap_ST_fsm_pp1_stage0;
    static const sc_lv<5> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<11> ap_const_lv11_400;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<10> ap_const_lv10_200;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<32> ap_const_lv32_4;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln1598_fu_203_p2();
    void thread_add_ln1660_fu_315_p2();
    void thread_add_ln321_fu_369_p2();
    void thread_add_ln700_8_fu_349_p2();
    void thread_add_ln700_fu_321_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_01001();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state6_pp1_stage0_iter0();
    void thread_ap_block_state7_pp1_stage0_iter1();
    void thread_ap_block_state8_pp1_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_condition_pp1_exit_iter0_state6();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_phi_mux_p_0122_0_i_phi_fu_146_p4();
    void thread_ap_phi_mux_p_055_0_i_0_phi_fu_179_p4();
    void thread_ap_ready();
    void thread_buf_data_split_0_V_fu_270_p1();
    void thread_buf_data_split_1_V_26_fu_284_p1();
    void thread_buf_data_split_1_V_29_fu_288_p3();
    void thread_buf_data_split_1_V_30_fu_295_p3();
    void thread_buf_data_split_1_V_fu_274_p4();
    void thread_c6_V_fu_209_p2();
    void thread_c7_V_fu_264_p2();
    void thread_fifo_C_drain_local_in_V_blk_n();
    void thread_fifo_C_drain_local_in_V_read();
    void thread_fifo_C_drain_out_V_V_blk_n();
    void thread_fifo_C_drain_out_V_V_din();
    void thread_fifo_C_drain_out_V_V_write();
    void thread_icmp_ln1598_fu_197_p2();
    void thread_icmp_ln1600_fu_215_p2();
    void thread_icmp_ln1660_fu_309_p2();
    void thread_icmp_ln1662_fu_327_p2();
    void thread_local_C_V_address0();
    void thread_local_C_V_ce0();
    void thread_local_C_V_ce1();
    void thread_local_C_V_d1();
    void thread_local_C_V_we1();
    void thread_select_ln1371_6_fu_229_p3();
    void thread_select_ln1371_fu_221_p3();
    void thread_select_ln544_9_fu_341_p3();
    void thread_select_ln544_fu_333_p3();
    void thread_tmp_22_fu_251_p3();
    void thread_tmp_23_fu_355_p3();
    void thread_trunc_ln1371_fu_247_p1();
    void thread_zext_ln1662_fu_362_p1();
    void thread_zext_ln321_11_fu_366_p1();
    void thread_zext_ln321_12_fu_375_p1();
    void thread_zext_ln321_fu_259_p1();
    void thread_zext_ln544_mid2_v_fu_237_p4();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
