-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel3_B_IO_L2_in_inter_trans is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    idx : IN STD_LOGIC_VECTOR (3 downto 0);
    local_B_V_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    local_B_V_ce1 : OUT STD_LOGIC;
    local_B_V_we1 : OUT STD_LOGIC;
    local_B_V_d1 : OUT STD_LOGIC_VECTOR (255 downto 0);
    fifo_B_in_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    fifo_B_in_V_V_empty_n : IN STD_LOGIC;
    fifo_B_in_V_V_read : OUT STD_LOGIC;
    fifo_B_out_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    fifo_B_out_V_V_full_n : IN STD_LOGIC;
    fifo_B_out_V_V_write : OUT STD_LOGIC );
end;


architecture behav of kernel3_B_IO_L2_in_inter_trans is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv13_800 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv14_800 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal fifo_B_in_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln899_reg_385 : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo_B_out_V_V_blk_n : STD_LOGIC;
    signal select_ln879_74_reg_394 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten14_reg_134 : STD_LOGIC_VECTOR (13 downto 0);
    signal c3_V_1_reg_145 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten_reg_154 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_053_0_reg_165 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_067_0_reg_176 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln304_fu_187_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln304_reg_373 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_211_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_s_reg_380 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln899_fu_219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln899_fu_224_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln879_74_fu_260_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln899_fu_286_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln544_fu_306_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln544_reg_403 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln544_85_fu_314_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln544_85_reg_408 : STD_LOGIC_VECTOR (6 downto 0);
    signal c5_V_fu_322_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln306_fu_334_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_phi_mux_p_053_0_phi_fu_169_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln321_159_fu_368_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal empty_fu_191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal umax2_cast_fu_197_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln304_fu_205_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln306_fu_236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c3_V_fu_230_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln879_fu_250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_6_fu_255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln308_fu_274_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln879_fu_268_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln879_fu_242_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal and_ln879_fu_280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln544_fu_300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c4_V_fu_294_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln306_fu_328_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_83_fu_342_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln306_fu_349_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln321_fu_353_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln321_fu_356_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln321_3_fu_362_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    c3_V_1_reg_145_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln899_fu_219_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                c3_V_1_reg_145 <= select_ln899_fu_286_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                c3_V_1_reg_145 <= trunc_ln304_fu_187_p1;
            end if; 
        end if;
    end process;

    indvar_flatten14_reg_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln899_fu_219_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten14_reg_134 <= add_ln899_fu_224_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten14_reg_134 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln899_fu_219_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_154 <= select_ln306_fu_334_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_154 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    p_053_0_reg_165_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln899_reg_385 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                p_053_0_reg_165 <= select_ln544_85_reg_408;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_053_0_reg_165 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    p_067_0_reg_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln899_fu_219_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                p_067_0_reg_176 <= c5_V_fu_322_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_067_0_reg_176 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln899_reg_385 <= icmp_ln899_fu_219_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln899_fu_219_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln544_85_reg_408 <= select_ln544_85_fu_314_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln899_fu_219_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln544_reg_403 <= select_ln544_fu_306_p3;
                select_ln879_74_reg_394 <= select_ln879_74_fu_260_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    tmp_s_reg_380(13 downto 11) <= tmp_s_fu_211_p3(13 downto 11);
                trunc_ln304_reg_373 <= trunc_ln304_fu_187_p1;
            end if;
        end if;
    end process;
    tmp_s_reg_380(10 downto 0) <= "00000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln899_fu_219_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((icmp_ln899_fu_219_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((icmp_ln899_fu_219_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln306_fu_328_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_154) + unsigned(ap_const_lv13_1));
    add_ln321_3_fu_362_p2 <= std_logic_vector(unsigned(add_ln321_fu_356_p2) + unsigned(ap_const_lv14_800));
    add_ln321_fu_356_p2 <= std_logic_vector(unsigned(zext_ln306_fu_349_p1) + unsigned(zext_ln321_fu_353_p1));
    add_ln899_fu_224_p2 <= std_logic_vector(unsigned(indvar_flatten14_reg_134) + unsigned(ap_const_lv14_1));
    and_ln879_fu_280_p2 <= (xor_ln879_fu_268_p2 and icmp_ln308_fu_274_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(fifo_B_in_V_V_empty_n, fifo_B_out_V_V_full_n, ap_enable_reg_pp0_iter1, icmp_ln899_reg_385, select_ln879_74_reg_394)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((select_ln879_74_reg_394 = ap_const_lv1_0) and (fifo_B_out_V_V_full_n = ap_const_logic_0)) or ((icmp_ln899_reg_385 = ap_const_lv1_0) and (fifo_B_in_V_V_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(fifo_B_in_V_V_empty_n, fifo_B_out_V_V_full_n, ap_enable_reg_pp0_iter1, icmp_ln899_reg_385, select_ln879_74_reg_394)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((select_ln879_74_reg_394 = ap_const_lv1_0) and (fifo_B_out_V_V_full_n = ap_const_logic_0)) or ((icmp_ln899_reg_385 = ap_const_lv1_0) and (fifo_B_in_V_V_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(fifo_B_in_V_V_empty_n, fifo_B_out_V_V_full_n, ap_enable_reg_pp0_iter1, icmp_ln899_reg_385, select_ln879_74_reg_394)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((select_ln879_74_reg_394 = ap_const_lv1_0) and (fifo_B_out_V_V_full_n = ap_const_logic_0)) or ((icmp_ln899_reg_385 = ap_const_lv1_0) and (fifo_B_in_V_V_empty_n = ap_const_logic_0))));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(fifo_B_in_V_V_empty_n, fifo_B_out_V_V_full_n, icmp_ln899_reg_385, select_ln879_74_reg_394)
    begin
                ap_block_state3_pp0_stage0_iter1 <= (((select_ln879_74_reg_394 = ap_const_lv1_0) and (fifo_B_out_V_V_full_n = ap_const_logic_0)) or ((icmp_ln899_reg_385 = ap_const_lv1_0) and (fifo_B_in_V_V_empty_n = ap_const_logic_0)));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln899_fu_219_p2)
    begin
        if ((icmp_ln899_fu_219_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_053_0_phi_fu_169_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln899_reg_385, p_053_0_reg_165, select_ln544_85_reg_408)
    begin
        if (((icmp_ln899_reg_385 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_p_053_0_phi_fu_169_p4 <= select_ln544_85_reg_408;
        else 
            ap_phi_mux_p_053_0_phi_fu_169_p4 <= p_053_0_reg_165;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    c3_V_fu_230_p2 <= std_logic_vector(unsigned(c3_V_1_reg_145) + unsigned(ap_const_lv3_1));
    c4_V_fu_294_p2 <= std_logic_vector(unsigned(select_ln879_fu_242_p3) + unsigned(ap_const_lv7_1));
    c5_V_fu_322_p2 <= std_logic_vector(unsigned(select_ln544_fu_306_p3) + unsigned(ap_const_lv6_1));
    empty_fu_191_p2 <= "1" when (trunc_ln304_fu_187_p1 = ap_const_lv3_7) else "0";

    fifo_B_in_V_V_blk_n_assign_proc : process(fifo_B_in_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln899_reg_385)
    begin
        if (((icmp_ln899_reg_385 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_B_in_V_V_blk_n <= fifo_B_in_V_V_empty_n;
        else 
            fifo_B_in_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_B_in_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln899_reg_385, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln899_reg_385 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_B_in_V_V_read <= ap_const_logic_1;
        else 
            fifo_B_in_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_B_out_V_V_blk_n_assign_proc : process(fifo_B_out_V_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, select_ln879_74_reg_394)
    begin
        if (((select_ln879_74_reg_394 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_B_out_V_V_blk_n <= fifo_B_out_V_V_full_n;
        else 
            fifo_B_out_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_B_out_V_V_din <= fifo_B_in_V_V_dout;

    fifo_B_out_V_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, select_ln879_74_reg_394, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln879_74_reg_394 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_B_out_V_V_write <= ap_const_logic_1;
        else 
            fifo_B_out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln306_fu_236_p2 <= "1" when (indvar_flatten_reg_154 = ap_const_lv13_800) else "0";
    icmp_ln308_fu_274_p2 <= "1" when (p_067_0_reg_176 = ap_const_lv6_20) else "0";
    icmp_ln879_6_fu_255_p2 <= "1" when (c3_V_1_reg_145 = trunc_ln304_reg_373) else "0";
    icmp_ln879_fu_250_p2 <= "1" when (c3_V_fu_230_p2 = trunc_ln304_reg_373) else "0";
    icmp_ln899_fu_219_p2 <= "1" when (indvar_flatten14_reg_134 = tmp_s_reg_380) else "0";
    local_B_V_address1 <= zext_ln321_159_fu_368_p1(12 - 1 downto 0);

    local_B_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_B_V_ce1 <= ap_const_logic_1;
        else 
            local_B_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    local_B_V_d1 <= fifo_B_in_V_V_dout;

    local_B_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, select_ln879_74_reg_394, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln879_74_reg_394 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_B_V_we1 <= ap_const_logic_1;
        else 
            local_B_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln544_fu_300_p2 <= (icmp_ln306_fu_236_p2 or and_ln879_fu_280_p2);
    select_ln306_fu_334_p3 <= 
        ap_const_lv13_1 when (icmp_ln306_fu_236_p2(0) = '1') else 
        add_ln306_fu_328_p2;
    select_ln544_85_fu_314_p3 <= 
        c4_V_fu_294_p2 when (and_ln879_fu_280_p2(0) = '1') else 
        select_ln879_fu_242_p3;
    select_ln544_fu_306_p3 <= 
        ap_const_lv6_0 when (or_ln544_fu_300_p2(0) = '1') else 
        p_067_0_reg_176;
    select_ln879_74_fu_260_p3 <= 
        icmp_ln879_fu_250_p2 when (icmp_ln306_fu_236_p2(0) = '1') else 
        icmp_ln879_6_fu_255_p2;
    select_ln879_fu_242_p3 <= 
        ap_const_lv7_0 when (icmp_ln306_fu_236_p2(0) = '1') else 
        ap_phi_mux_p_053_0_phi_fu_169_p4;
    select_ln899_fu_286_p3 <= 
        c3_V_fu_230_p2 when (icmp_ln306_fu_236_p2(0) = '1') else 
        c3_V_1_reg_145;
    sub_ln304_fu_205_p2 <= std_logic_vector(unsigned(umax2_cast_fu_197_p3) - unsigned(trunc_ln304_fu_187_p1));
    tmp_83_fu_342_p3 <= (select_ln544_85_reg_408 & ap_const_lv5_0);
    tmp_s_fu_211_p3 <= (sub_ln304_fu_205_p2 & ap_const_lv11_0);
    trunc_ln304_fu_187_p1 <= idx(3 - 1 downto 0);
    umax2_cast_fu_197_p3 <= 
        ap_const_lv3_7 when (empty_fu_191_p2(0) = '1') else 
        ap_const_lv3_6;
    xor_ln879_fu_268_p2 <= (icmp_ln306_fu_236_p2 xor ap_const_lv1_1);
    zext_ln306_fu_349_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_83_fu_342_p3),14));
    zext_ln321_159_fu_368_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln321_3_fu_362_p2),64));
    zext_ln321_fu_353_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln544_reg_403),14));
end behav;
