-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel3_C_drain_IO_L1_out_boundary476 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
    fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
    fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
    fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
end;


architecture behav of kernel3_C_drain_IO_L1_out_boundary476 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal fifo_C_drain_out_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln1660_reg_421 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1660_reg_421_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo_C_drain_local_in_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln1598_reg_380 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_131 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_0122_0_i_reg_142 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_071_0_i_reg_153 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten6_reg_164 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_055_0_i_0_reg_175 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_045_0_i_0_reg_186 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1598_fu_197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln1598_reg_380_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1598_fu_203_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln1371_3_fu_229_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln1371_3_reg_389 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln1371_fu_247_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1371_reg_394 : STD_LOGIC_VECTOR (0 downto 0);
    signal local_C_V_addr_1_reg_400 : STD_LOGIC_VECTOR (8 downto 0);
    signal local_C_V_addr_1_reg_400_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal c7_V_fu_264_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal buf_data_split_1_V_14_fu_288_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_data_split_1_V_14_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_data_split_1_V_15_fu_295_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_data_split_1_V_15_reg_416 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1660_fu_309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state6_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal add_ln1660_fu_315_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal select_ln544_fu_333_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln544_reg_430 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln544_6_fu_341_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln544_6_reg_435 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln700_5_fu_349_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state6 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal local_C_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal local_C_V_ce0 : STD_LOGIC;
    signal local_C_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal local_C_V_ce1 : STD_LOGIC;
    signal local_C_V_we1 : STD_LOGIC;
    signal local_C_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_p_0122_0_i_phi_fu_146_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_mux_p_055_0_i_0_phi_fu_179_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln321_fu_259_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_6_fu_375_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal icmp_ln1600_fu_215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c6_V_fu_209_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln1371_fu_221_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln544_mid2_v_fu_237_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_16_fu_251_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_data_split_1_V_11_fu_284_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_data_split_1_V_fu_274_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_data_split_0_V_fu_270_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1662_fu_327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_fu_321_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_17_fu_355_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln321_5_fu_366_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1662_fu_362_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln321_fu_369_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;

    component kernel3_C_drain_IO_L1_out_boundary450_local_C_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    local_C_V_U : component kernel3_C_drain_IO_L1_out_boundary450_local_C_V
    generic map (
        DataWidth => 64,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_C_V_address0,
        ce0 => local_C_V_ce0,
        q0 => local_C_V_q0,
        address1 => local_C_V_addr_1_reg_400_pp0_iter1_reg,
        ce1 => local_C_V_ce1,
        we1 => local_C_V_we1,
        d1 => local_C_V_d1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state6) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state6)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state6);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten6_reg_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                indvar_flatten6_reg_164 <= ap_const_lv10_0;
            elsif (((icmp_ln1660_fu_309_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                indvar_flatten6_reg_164 <= add_ln1660_fu_315_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_131_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1598_fu_197_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_131 <= add_ln1598_fu_203_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_131 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    p_0122_0_i_reg_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1598_reg_380 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                p_0122_0_i_reg_142 <= select_ln1371_3_reg_389;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_0122_0_i_reg_142 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    p_045_0_i_0_reg_186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                p_045_0_i_0_reg_186 <= ap_const_lv6_0;
            elsif (((icmp_ln1660_fu_309_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_045_0_i_0_reg_186 <= add_ln700_5_fu_349_p2;
            end if; 
        end if;
    end process;

    p_055_0_i_0_reg_175_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                p_055_0_i_0_reg_175 <= ap_const_lv5_0;
            elsif (((icmp_ln1660_reg_421 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_055_0_i_0_reg_175 <= select_ln544_6_reg_435;
            end if; 
        end if;
    end process;

    p_071_0_i_reg_153_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1598_fu_197_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                p_071_0_i_reg_153 <= c7_V_fu_264_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_071_0_i_reg_153 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1598_reg_380 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                buf_data_split_1_V_14_reg_411 <= buf_data_split_1_V_14_fu_288_p3;
                buf_data_split_1_V_15_reg_416 <= buf_data_split_1_V_15_fu_295_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1598_reg_380 <= icmp_ln1598_fu_197_p2;
                icmp_ln1598_reg_380_pp0_iter1_reg <= icmp_ln1598_reg_380;
                local_C_V_addr_1_reg_400_pp0_iter1_reg <= local_C_V_addr_1_reg_400;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln1660_reg_421 <= icmp_ln1660_fu_309_p2;
                icmp_ln1660_reg_421_pp1_iter1_reg <= icmp_ln1660_reg_421;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1598_fu_197_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                local_C_V_addr_1_reg_400 <= zext_ln321_fu_259_p1(9 - 1 downto 0);
                trunc_ln1371_reg_394 <= trunc_ln1371_fu_247_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1598_fu_197_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln1371_3_reg_389 <= select_ln1371_3_fu_229_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1660_fu_309_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                select_ln544_6_reg_435 <= select_ln544_6_fu_341_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1660_fu_309_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                select_ln544_reg_430 <= select_ln544_fu_333_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp0_iter1, icmp_ln1598_fu_197_p2, ap_enable_reg_pp0_iter0, icmp_ln1660_fu_309_p2, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln1598_fu_197_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((icmp_ln1598_fu_197_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln1660_fu_309_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln1660_fu_309_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    add_ln1598_fu_203_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_131) + unsigned(ap_const_lv11_1));
    add_ln1660_fu_315_p2 <= std_logic_vector(unsigned(indvar_flatten6_reg_164) + unsigned(ap_const_lv10_1));
    add_ln321_fu_369_p2 <= std_logic_vector(unsigned(zext_ln321_5_fu_366_p1) + unsigned(zext_ln1662_fu_362_p1));
    add_ln700_5_fu_349_p2 <= std_logic_vector(unsigned(select_ln544_fu_333_p3) + unsigned(ap_const_lv6_1));
    add_ln700_fu_321_p2 <= std_logic_vector(unsigned(ap_phi_mux_p_055_0_i_0_phi_fu_179_p4) + unsigned(ap_const_lv5_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state5 <= ap_CS_fsm(2);
    ap_CS_fsm_state9 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(fifo_C_drain_local_in_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln1598_reg_380)
    begin
                ap_block_pp0_stage0_11001 <= ((icmp_ln1598_reg_380 = ap_const_lv1_0) and (fifo_C_drain_local_in_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(fifo_C_drain_local_in_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln1598_reg_380)
    begin
                ap_block_pp0_stage0_subdone <= ((icmp_ln1598_reg_380 = ap_const_lv1_0) and (fifo_C_drain_local_in_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(fifo_C_drain_out_V_V_full_n, ap_enable_reg_pp1_iter2, icmp_ln1660_reg_421_pp1_iter1_reg)
    begin
                ap_block_pp1_stage0_01001 <= ((icmp_ln1660_reg_421_pp1_iter1_reg = ap_const_lv1_0) and (fifo_C_drain_out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(fifo_C_drain_out_V_V_full_n, ap_enable_reg_pp1_iter2, icmp_ln1660_reg_421_pp1_iter1_reg)
    begin
                ap_block_pp1_stage0_11001 <= ((icmp_ln1660_reg_421_pp1_iter1_reg = ap_const_lv1_0) and (fifo_C_drain_out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(fifo_C_drain_out_V_V_full_n, ap_enable_reg_pp1_iter2, icmp_ln1660_reg_421_pp1_iter1_reg)
    begin
                ap_block_pp1_stage0_subdone <= ((icmp_ln1660_reg_421_pp1_iter1_reg = ap_const_lv1_0) and (fifo_C_drain_out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(fifo_C_drain_local_in_V_empty_n, icmp_ln1598_reg_380)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((icmp_ln1598_reg_380 = ap_const_lv1_0) and (fifo_C_drain_local_in_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp1_stage0_iter2_assign_proc : process(fifo_C_drain_out_V_V_full_n, icmp_ln1660_reg_421_pp1_iter1_reg)
    begin
                ap_block_state8_pp1_stage0_iter2 <= ((icmp_ln1660_reg_421_pp1_iter1_reg = ap_const_lv1_0) and (fifo_C_drain_out_V_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln1598_fu_197_p2)
    begin
        if ((icmp_ln1598_fu_197_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state6_assign_proc : process(icmp_ln1660_fu_309_p2)
    begin
        if ((icmp_ln1660_fu_309_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state6 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_0122_0_i_phi_fu_146_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln1598_reg_380, p_0122_0_i_reg_142, select_ln1371_3_reg_389)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1598_reg_380 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_p_0122_0_i_phi_fu_146_p4 <= select_ln1371_3_reg_389;
        else 
            ap_phi_mux_p_0122_0_i_phi_fu_146_p4 <= p_0122_0_i_reg_142;
        end if; 
    end process;


    ap_phi_mux_p_055_0_i_0_phi_fu_179_p4_assign_proc : process(ap_block_pp1_stage0, icmp_ln1660_reg_421, p_055_0_i_0_reg_175, ap_CS_fsm_pp1_stage0, select_ln544_6_reg_435, ap_enable_reg_pp1_iter1)
    begin
        if (((icmp_ln1660_reg_421 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_p_055_0_i_0_phi_fu_179_p4 <= select_ln544_6_reg_435;
        else 
            ap_phi_mux_p_055_0_i_0_phi_fu_179_p4 <= p_055_0_i_0_reg_175;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    buf_data_split_0_V_fu_270_p1 <= local_C_V_q0(32 - 1 downto 0);
    buf_data_split_1_V_11_fu_284_p1 <= fifo_C_drain_local_in_V_dout;
    buf_data_split_1_V_14_fu_288_p3 <= 
        buf_data_split_1_V_11_fu_284_p1 when (trunc_ln1371_reg_394(0) = '1') else 
        buf_data_split_1_V_fu_274_p4;
    buf_data_split_1_V_15_fu_295_p3 <= 
        buf_data_split_0_V_fu_270_p1 when (trunc_ln1371_reg_394(0) = '1') else 
        buf_data_split_1_V_11_fu_284_p1;
    buf_data_split_1_V_fu_274_p4 <= local_C_V_q0(63 downto 32);
    c6_V_fu_209_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(ap_phi_mux_p_0122_0_i_phi_fu_146_p4));
    c7_V_fu_264_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(select_ln1371_fu_221_p3));

    fifo_C_drain_local_in_V_blk_n_assign_proc : process(fifo_C_drain_local_in_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln1598_reg_380)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1598_reg_380 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_C_drain_local_in_V_blk_n <= fifo_C_drain_local_in_V_empty_n;
        else 
            fifo_C_drain_local_in_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_C_drain_local_in_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1598_reg_380, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1598_reg_380 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_C_drain_local_in_V_read <= ap_const_logic_1;
        else 
            fifo_C_drain_local_in_V_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_C_drain_out_V_V_blk_n_assign_proc : process(fifo_C_drain_out_V_V_full_n, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0, icmp_ln1660_reg_421_pp1_iter1_reg)
    begin
        if (((icmp_ln1660_reg_421_pp1_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            fifo_C_drain_out_V_V_blk_n <= fifo_C_drain_out_V_V_full_n;
        else 
            fifo_C_drain_out_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_C_drain_out_V_V_din <= local_C_V_q0;

    fifo_C_drain_out_V_V_write_assign_proc : process(ap_enable_reg_pp1_iter2, icmp_ln1660_reg_421_pp1_iter1_reg, ap_block_pp1_stage0_11001)
    begin
        if (((icmp_ln1660_reg_421_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            fifo_C_drain_out_V_V_write <= ap_const_logic_1;
        else 
            fifo_C_drain_out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1598_fu_197_p2 <= "1" when (indvar_flatten_reg_131 = ap_const_lv11_400) else "0";
    icmp_ln1600_fu_215_p2 <= "1" when (p_071_0_i_reg_153 = ap_const_lv5_10) else "0";
    icmp_ln1660_fu_309_p2 <= "1" when (indvar_flatten6_reg_164 = ap_const_lv10_200) else "0";
    icmp_ln1662_fu_327_p2 <= "1" when (p_045_0_i_0_reg_186 = ap_const_lv6_20) else "0";

    local_C_V_address0_assign_proc : process(ap_block_pp1_stage0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, zext_ln321_fu_259_p1, zext_ln321_6_fu_375_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            local_C_V_address0 <= zext_ln321_6_fu_375_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            local_C_V_address0 <= zext_ln321_fu_259_p1(9 - 1 downto 0);
        else 
            local_C_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    local_C_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            local_C_V_ce0 <= ap_const_logic_1;
        else 
            local_C_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_C_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            local_C_V_ce1 <= ap_const_logic_1;
        else 
            local_C_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_V_d1 <= (buf_data_split_1_V_14_reg_411 & buf_data_split_1_V_15_reg_416);

    local_C_V_we1_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1598_reg_380_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1598_reg_380_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            local_C_V_we1 <= ap_const_logic_1;
        else 
            local_C_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln1371_3_fu_229_p3 <= 
        c6_V_fu_209_p2 when (icmp_ln1600_fu_215_p2(0) = '1') else 
        ap_phi_mux_p_0122_0_i_phi_fu_146_p4;
    select_ln1371_fu_221_p3 <= 
        ap_const_lv5_0 when (icmp_ln1600_fu_215_p2(0) = '1') else 
        p_071_0_i_reg_153;
    select_ln544_6_fu_341_p3 <= 
        add_ln700_fu_321_p2 when (icmp_ln1662_fu_327_p2(0) = '1') else 
        ap_phi_mux_p_055_0_i_0_phi_fu_179_p4;
    select_ln544_fu_333_p3 <= 
        ap_const_lv6_0 when (icmp_ln1662_fu_327_p2(0) = '1') else 
        p_045_0_i_0_reg_186;
    tmp_16_fu_251_p3 <= (select_ln1371_fu_221_p3 & zext_ln544_mid2_v_fu_237_p4);
    tmp_17_fu_355_p3 <= (select_ln544_6_reg_435 & ap_const_lv5_0);
    trunc_ln1371_fu_247_p1 <= select_ln1371_3_fu_229_p3(1 - 1 downto 0);
    zext_ln1662_fu_362_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_fu_355_p3),11));
    zext_ln321_5_fu_366_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln544_reg_430),11));
    zext_ln321_6_fu_375_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln321_fu_369_p2),64));
    zext_ln321_fu_259_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_fu_251_p3),64));
    zext_ln544_mid2_v_fu_237_p4 <= select_ln1371_3_fu_229_p3(5 downto 1);
end behav;
